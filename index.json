{
  "api/CatchIo.Editor.html": {
    "href": "api/CatchIo.Editor.html",
    "title": "Namespace CatchIo.Editor | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Editor Classes TmxPrefabReplacer UnityPathUtil"
  },
  "api/CatchIo.Editor.ScriptTemplates.CreateNewScriptClassFromCustomTemplate.html": {
    "href": "api/CatchIo.Editor.ScriptTemplates.CreateNewScriptClassFromCustomTemplate.html",
    "title": "Class CreateNewScriptClassFromCustomTemplate | Catch.io Developer Reference",
    "keywords": "Class CreateNewScriptClassFromCustomTemplate Inheritance Object CreateNewScriptClassFromCustomTemplate Namespace : CatchIo.Editor.ScriptTemplates Assembly : cs.temp.dll.dll Syntax public class CreateNewScriptClassFromCustomTemplate Methods CreateScriptFromTemplate() Declaration public static void CreateScriptFromTemplate()"
  },
  "api/CatchIo.Editor.ScriptTemplates.html": {
    "href": "api/CatchIo.Editor.ScriptTemplates.html",
    "title": "Namespace CatchIo.Editor.ScriptTemplates | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Editor.ScriptTemplates Classes CreateNewScriptClassFromCustomTemplate"
  },
  "api/CatchIo.Editor.TmxPrefabReplacer.html": {
    "href": "api/CatchIo.Editor.TmxPrefabReplacer.html",
    "title": "Class TmxPrefabReplacer | Catch.io Developer Reference",
    "keywords": "Class TmxPrefabReplacer Inheritance Object TmxPrefabReplacer Namespace : CatchIo.Editor Assembly : cs.temp.dll.dll Syntax public class TmxPrefabReplacer : CustomTmxImporter Methods TmxAssetImported(TmxAssetImportedArgs) Entry point for the custom importer extension script. This method will run every time a .tmx file gets imported to the project Declaration public override void TmxAssetImported(TmxAssetImportedArgs args) Parameters Type Name Description TmxAssetImportedArgs args"
  },
  "api/CatchIo.Editor.UnityPathUtil.html": {
    "href": "api/CatchIo.Editor.UnityPathUtil.html",
    "title": "Class UnityPathUtil | Catch.io Developer Reference",
    "keywords": "Class UnityPathUtil Inheritance Object UnityPathUtil Namespace : CatchIo.Editor Assembly : cs.temp.dll.dll Syntax public static class UnityPathUtil Methods GetFullPathFromRelative(String, String, Char) Path utility that combines the original path with the relative path with all the directory change operations. This is a simple implementation focusing on readability, but we can expand this class to do more. Declaration public static string GetFullPathFromRelative(string originPath, string relativeTarget, char separator = '/') Parameters Type Name Description String originPath The reference path String relativeTarget Relative path from the origin path Char separator File separator. Default is the Unix style Returns Type Description String The full path to the given relative path"
  },
  "api/CatchIo.Editor.Utility.Attributes.html": {
    "href": "api/CatchIo.Editor.Utility.Attributes.html",
    "title": "Namespace CatchIo.Editor.Utility.Attributes | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Editor.Utility.Attributes Classes MonoScriptPropertyDrawer"
  },
  "api/CatchIo.Editor.Utility.Attributes.MonoScriptPropertyDrawer.html": {
    "href": "api/CatchIo.Editor.Utility.Attributes.MonoScriptPropertyDrawer.html",
    "title": "Class MonoScriptPropertyDrawer | Catch.io Developer Reference",
    "keywords": "Class MonoScriptPropertyDrawer Inheritance Object MonoScriptPropertyDrawer Namespace : CatchIo.Editor.Utility.Attributes Assembly : cs.temp.dll.dll Syntax public class MonoScriptPropertyDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.AnimationData.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.AnimationData.html",
    "title": "Struct AnimationData | Catch.io Developer Reference",
    "keywords": "Struct AnimationData Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax [Serializable] public struct AnimationData Constructors AnimationData(String) Declaration public AnimationData(string name) Parameters Type Name Description String name Fields StateName Declaration public string StateName Field Value Type Description String Methods AddAnimInfo(AnimInfo) Declaration public void AddAnimInfo(AnimInfo info) Parameters Type Name Description AnimInfo info GetClips() Declaration public List<AnimInfo> GetClips() Returns Type Description List < AnimInfo >"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.AnimInfo.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.AnimInfo.html",
    "title": "Struct AnimInfo | Catch.io Developer Reference",
    "keywords": "Struct AnimInfo Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax [Serializable] public struct AnimInfo Fields Clip Declaration public AnimationClip Clip Field Value Type Description AnimationClip Direction Declaration public DirType Direction Field Value Type Description DirType"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.AnimInfoComparer.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.AnimInfoComparer.html",
    "title": "Class AnimInfoComparer | Catch.io Developer Reference",
    "keywords": "Class AnimInfoComparer Inheritance Object AnimInfoComparer Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public class AnimInfoComparer : IComparer<AnimInfo> Methods Compare(AnimInfo, AnimInfo) Declaration public int Compare(AnimInfo x, AnimInfo y) Parameters Type Name Description AnimInfo x AnimInfo y Returns Type Description Int32"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.DirType.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.DirType.html",
    "title": "Enum DirType | Catch.io Developer Reference",
    "keywords": "Enum DirType Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public enum DirType Fields Name Description E N NE None NW S SE SW W"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterActionAnimationClips.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterActionAnimationClips.html",
    "title": "Class GenerateCharacterActionAnimationClips | Catch.io Developer Reference",
    "keywords": "Class GenerateCharacterActionAnimationClips Inheritance Object GenerateCharacterActionAnimationClips Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public class GenerateCharacterActionAnimationClips : OdinEditorWindow Fields CharacterTextureDirectoryPath Declaration public string CharacterTextureDirectoryPath Field Value Type Description String Methods GenerateActionAnimationClips() Declaration public void GenerateActionAnimationClips() ReadActionTextures() Declaration public void ReadActionTextures()"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterAnimationUtils.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterAnimationUtils.html",
    "title": "Class GenerateCharacterAnimationUtils | Catch.io Developer Reference",
    "keywords": "Class GenerateCharacterAnimationUtils Inheritance Object GenerateCharacterAnimationUtils Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public static class GenerateCharacterAnimationUtils Fields ActionAnimationNames Declaration public static readonly string[] ActionAnimationNames Field Value Type Description String [] FrameRate Declaration public static float FrameRate Field Value Type Description Single MoveAnimationNames Declaration public static readonly string[] MoveAnimationNames Field Value Type Description String [] Methods CheckCharacterActionTextureExisted(String) Declaration public static Dictionary<string, Texture2D> CheckCharacterActionTextureExisted(string path) Parameters Type Name Description String path Returns Type Description Dictionary < String , Texture2D > CheckCharacterMoveTextureExisted(String) Declaration public static Dictionary<string, Texture2D> CheckCharacterMoveTextureExisted(string path) Parameters Type Name Description String path Returns Type Description Dictionary < String , Texture2D > ConvertTextureToSprite(Dictionary<String, Texture2D>, List<SliceVector>, Vector2) Declaration public static Dictionary<string, List<Sprite>> ConvertTextureToSprite(Dictionary<string, Texture2D> texture2Ds, List<SliceVector> sliceVectors, Vector2 pivot) Parameters Type Name Description Dictionary < String , Texture2D > texture2Ds List < SliceVector > sliceVectors Vector2 pivot Returns Type Description Dictionary < String , List < Sprite >> LoadSpriteInAssets(String) Declaration public static Dictionary<string, Sprite> LoadSpriteInAssets(string path) Parameters Type Name Description String path Returns Type Description Dictionary < String , Sprite > MakeActionAnimationClips(Dictionary<String, List<Sprite>>, String) Declaration public static void MakeActionAnimationClips(Dictionary<string, List<Sprite>> characterAnimSprites, string path) Parameters Type Name Description Dictionary < String , List < Sprite >> characterAnimSprites String path MakeMoveAnimationClips(Dictionary<String, List<Sprite>>, String) Declaration public static void MakeMoveAnimationClips(Dictionary<string, List<Sprite>> characterAnimSprites, string path) Parameters Type Name Description Dictionary < String , List < Sprite >> characterAnimSprites String path"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterAnimatorController.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterAnimatorController.html",
    "title": "Class GenerateCharacterAnimatorController | Catch.io Developer Reference",
    "keywords": "Class GenerateCharacterAnimatorController Inheritance Object GenerateCharacterAnimatorController Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public class GenerateCharacterAnimatorController : OdinEditorWindow Fields AnimationClipsPath Declaration public string AnimationClipsPath Field Value Type Description String AnimationDic Declaration public Dictionary<string, AnimationData> AnimationDic Field Value Type Description Dictionary < String , AnimationData > CharacterName Declaration public string CharacterName Field Value Type Description String SkinName Declaration public string SkinName Field Value Type Description String"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterFootprint.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterFootprint.html",
    "title": "Class GenerateCharacterFootprint | Catch.io Developer Reference",
    "keywords": "Class GenerateCharacterFootprint Inheritance Object GenerateCharacterFootprint Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public class GenerateCharacterFootprint : OdinEditorWindow Fields FootprintTextureDirectoryPath Declaration public string FootprintTextureDirectoryPath Field Value Type Description String Methods GenerateFootprintAnimationClips() Declaration public void GenerateFootprintAnimationClips() LoadSpriteInAssets(String) Declaration public Dictionary<string, Sprite> LoadSpriteInAssets(string path) Parameters Type Name Description String path Returns Type Description Dictionary < String , Sprite > ReadTexture() Declaration public void ReadTexture()"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterMoveAnimationClips.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateCharacterMoveAnimationClips.html",
    "title": "Class GenerateCharacterMoveAnimationClips | Catch.io Developer Reference",
    "keywords": "Class GenerateCharacterMoveAnimationClips Inheritance Object GenerateCharacterMoveAnimationClips Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public class GenerateCharacterMoveAnimationClips : OdinEditorWindow Fields CharacterTextureDirectoryPath Declaration public string CharacterTextureDirectoryPath Field Value Type Description String Methods GenerateMoveAnimationClips() Declaration public void GenerateMoveAnimationClips() ReadMoveTextures() Declaration public void ReadMoveTextures()"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateFootprintAnimController.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.GenerateFootprintAnimController.html",
    "title": "Class GenerateFootprintAnimController | Catch.io Developer Reference",
    "keywords": "Class GenerateFootprintAnimController Inheritance Object GenerateFootprintAnimController Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax public class GenerateFootprintAnimController : OdinEditorWindow Fields _characterSkinName Declaration public string _characterSkinName Field Value Type Description String AnimationClipsPath Declaration public string AnimationClipsPath Field Value Type Description String"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.html",
    "title": "Namespace CatchIo.Editor.Windows.CharacterAnimationWindow | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Editor.Windows.CharacterAnimationWindow Classes AnimInfoComparer GenerateCharacterActionAnimationClips GenerateCharacterAnimationUtils GenerateCharacterAnimatorController GenerateCharacterFootprint GenerateCharacterMoveAnimationClips GenerateFootprintAnimController Structs AnimationData AnimInfo SliceVector Enums DirType"
  },
  "api/CatchIo.Editor.Windows.CharacterAnimationWindow.SliceVector.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterAnimationWindow.SliceVector.html",
    "title": "Struct SliceVector | Catch.io Developer Reference",
    "keywords": "Struct SliceVector Namespace : CatchIo.Editor.Windows.CharacterAnimationWindow Assembly : cs.temp.dll.dll Syntax [Serializable] public struct SliceVector Constructors SliceVector(String) Declaration public SliceVector(string name) Parameters Type Name Description String name SliceVector(String, Int32, Int32) Declaration public SliceVector(string name, int column, int row) Parameters Type Name Description String name Int32 column Int32 row Properties Column Declaration public readonly int Column { get; } Property Value Type Description Int32 Name Declaration public readonly string Name { get; } Property Value Type Description String Row Declaration public readonly int Row { get; } Property Value Type Description Int32"
  },
  "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateClassFormat.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateClassFormat.html",
    "title": "Class CharacterStateClassFormat | Catch.io Developer Reference",
    "keywords": "Class CharacterStateClassFormat Inheritance Object CharacterStateClassFormat Namespace : CatchIo.Editor.Windows.CharacterStateMachineWindow Assembly : cs.temp.dll.dll Syntax public class CharacterStateClassFormat Fields FileFormat Declaration public static string FileFormat Field Value Type Description String"
  },
  "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateFactoryFormat.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateFactoryFormat.html",
    "title": "Class CharacterStateFactoryFormat | Catch.io Developer Reference",
    "keywords": "Class CharacterStateFactoryFormat Inheritance Object CharacterStateFactoryFormat Namespace : CatchIo.Editor.Windows.CharacterStateMachineWindow Assembly : cs.temp.dll.dll Syntax public class CharacterStateFactoryFormat Fields ActionStateGetterForamt Declaration public static string ActionStateGetterForamt Field Value Type Description String CachActionStateFormat Declaration public static string CachActionStateFormat Field Value Type Description String CachMoveStateFormat Declaration public static string CachMoveStateFormat Field Value Type Description String FileFormat Declaration public static string FileFormat Field Value Type Description String MoveStateGetterForamt Declaration public static string MoveStateGetterForamt Field Value Type Description String"
  },
  "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateMachineWindow.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateMachineWindow.html",
    "title": "Class CharacterStateMachineWindow | Catch.io Developer Reference",
    "keywords": "Class CharacterStateMachineWindow Inheritance Object CharacterStateMachineWindow Namespace : CatchIo.Editor.Windows.CharacterStateMachineWindow Assembly : cs.temp.dll.dll Syntax public class CharacterStateMachineWindow : OdinEditorWindow Fields ActionStates Declaration public List<string> ActionStates Field Value Type Description List < String > MoveStates Declaration public List<string> MoveStates Field Value Type Description List < String > Methods OnEnable() Declaration protected override void OnEnable()"
  },
  "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateTypeFormat.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.CharacterStateTypeFormat.html",
    "title": "Class CharacterStateTypeFormat | Catch.io Developer Reference",
    "keywords": "Class CharacterStateTypeFormat Inheritance Object CharacterStateTypeFormat Namespace : CatchIo.Editor.Windows.CharacterStateMachineWindow Assembly : cs.temp.dll.dll Syntax public class CharacterStateTypeFormat Fields EnumFormat Declaration public static string EnumFormat Field Value Type Description String FileFormat Declaration public static string FileFormat Field Value Type Description String"
  },
  "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.html": {
    "href": "api/CatchIo.Editor.Windows.CharacterStateMachineWindow.html",
    "title": "Namespace CatchIo.Editor.Windows.CharacterStateMachineWindow | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Editor.Windows.CharacterStateMachineWindow Classes CharacterStateClassFormat CharacterStateFactoryFormat CharacterStateMachineWindow CharacterStateTypeFormat"
  },
  "api/CatchIo.Game.Characters.Enums.CharacterColorType.html": {
    "href": "api/CatchIo.Game.Characters.Enums.CharacterColorType.html",
    "title": "Enum CharacterColorType | Catch.io Developer Reference",
    "keywords": "Enum CharacterColorType Namespace : CatchIo.Game.Characters.Enums Assembly : cs.temp.dll.dll Syntax public enum CharacterColorType Fields Name Description Black Blue Brown Cyan DarkBlue Green Last Lime Magenta Orange Red Teal Yellow"
  },
  "api/CatchIo.Game.Characters.Enums.html": {
    "href": "api/CatchIo.Game.Characters.Enums.html",
    "title": "Namespace CatchIo.Game.Characters.Enums | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Game.Characters.Enums Enums CharacterColorType"
  },
  "api/CatchIo.Runtime.Boot.BootStrapper.html": {
    "href": "api/CatchIo.Runtime.Boot.BootStrapper.html",
    "title": "Class BootStrapper | Catch.io Developer Reference",
    "keywords": "Class BootStrapper Inheritance Object BootStrapper Namespace : CatchIo.Runtime.Boot Assembly : cs.temp.dll.dll Syntax public static class BootStrapper Methods Execute() Declaration public static void Execute()"
  },
  "api/CatchIo.Runtime.Boot.html": {
    "href": "api/CatchIo.Runtime.Boot.html",
    "title": "Namespace CatchIo.Runtime.Boot | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Boot Classes BootStrapper"
  },
  "api/CatchIo.Runtime.Camera.GameCamera.html": {
    "href": "api/CatchIo.Runtime.Camera.GameCamera.html",
    "title": "Class GameCamera | Catch.io Developer Reference",
    "keywords": "Class GameCamera The main camera class for in-game camera movements. By passing the player object as its member, this object will initialize all the camera setup and follow the provided player. There should only be one instance of this object per scene. Inheritance Object GameCamera Namespace : CatchIo.Runtime.Camera Assembly : cs.temp.dll.dll Syntax public class GameCamera : MonoBehaviour Properties Camera Declaration public UnityEngine.Camera Camera { get; } Property Value Type Description UnityEngine.Camera Methods AddCursedOneCullingMask() Add CursedOne layer to the camera culling mask. Declaration public void AddCursedOneCullingMask() AddOverlayCamera(OverlayCamera) Declaration public void AddOverlayCamera(OverlayCamera overlayCamera) Parameters Type Name Description OverlayCamera overlayCamera AddSpectateCullingMask() Add Spectate layer to the camera culling mask. Declaration public void AddSpectateCullingMask() RemoveCursedOneCullingMask() Remove CursedOne layer to the camera culling mask. Declaration public void RemoveCursedOneCullingMask()"
  },
  "api/CatchIo.Runtime.Camera.GameCameraMovement.html": {
    "href": "api/CatchIo.Runtime.Camera.GameCameraMovement.html",
    "title": "Class GameCameraMovement | Catch.io Developer Reference",
    "keywords": "Class GameCameraMovement Camera movement logic to make view transition smooth. This object should be a child of the main camera object. Inheritance Object GameCameraMovement Namespace : CatchIo.Runtime.Camera Assembly : cs.temp.dll.dll Syntax public class GameCameraMovement : MonoBehaviour Fields ClampXDistance Clamp X distance for the smooth effect Declaration public float ClampXDistance Field Value Type Description Single ClampYDistance Clamp Y distance of the smooth effect Declaration public float ClampYDistance Field Value Type Description Single"
  },
  "api/CatchIo.Runtime.Camera.GameCameraZoom.html": {
    "href": "api/CatchIo.Runtime.Camera.GameCameraZoom.html",
    "title": "Class GameCameraZoom | Catch.io Developer Reference",
    "keywords": "Class GameCameraZoom This object should be a child of the main camera object. Inheritance Object GameCameraZoom Namespace : CatchIo.Runtime.Camera Assembly : cs.temp.dll.dll Syntax public class GameCameraZoom : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Camera.html": {
    "href": "api/CatchIo.Runtime.Camera.html",
    "title": "Namespace CatchIo.Runtime.Camera | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Camera Classes GameCamera The main camera class for in-game camera movements. By passing the player object as its member, this object will initialize all the camera setup and follow the provided player. There should only be one instance of this object per scene. GameCameraMovement Camera movement logic to make view transition smooth. This object should be a child of the main camera object. GameCameraZoom This object should be a child of the main camera object. OverlayCamera"
  },
  "api/CatchIo.Runtime.Camera.OverlayCamera.html": {
    "href": "api/CatchIo.Runtime.Camera.OverlayCamera.html",
    "title": "Class OverlayCamera | Catch.io Developer Reference",
    "keywords": "Class OverlayCamera Inheritance Object OverlayCamera Namespace : CatchIo.Runtime.Camera Assembly : cs.temp.dll.dll Syntax public class OverlayCamera : MonoBehaviour Properties Camera Declaration public UnityEngine.Camera Camera { get; } Property Value Type Description UnityEngine.Camera"
  },
  "api/CatchIo.Runtime.Character.CharacterFacade.html": {
    "href": "api/CatchIo.Runtime.Character.CharacterFacade.html",
    "title": "Class CharacterFacade | Catch.io Developer Reference",
    "keywords": "Class CharacterFacade Inheritance Object CharacterFacade Namespace : CatchIo.Runtime.Character Assembly : cs.temp.dll.dll Syntax public class CharacterFacade : MonoBehaviour Fields ChestOffset Declaration public readonly Vector3 ChestOffset Field Value Type Description Vector3 HeadUpOffset Declaration public readonly Vector3 HeadUpOffset Field Value Type Description Vector3 OnCursed Declaration public Action<CharacterFacade> OnCursed Field Value Type Description Action < CharacterFacade > OnDamage Declaration public Action OnDamage Field Value Type Description Action OnDeath Declaration public Action OnDeath Field Value Type Description Action OnLiftCursed Declaration public Action<CharacterFacade> OnLiftCursed Field Value Type Description Action < CharacterFacade > OnPickupItem Declaration public Action<Item> OnPickupItem Field Value Type Description Action < Item > OnRespawn Declaration public Action OnRespawn Field Value Type Description Action OnSpawn Declaration public Action OnSpawn Field Value Type Description Action Properties Input Declaration public CharacterInput Input { get; } Property Value Type Description CharacterInput InventoryController Declaration public InventoryController InventoryController { get; } Property Value Type Description InventoryController IsConnectedNetwork Declaration public bool IsConnectedNetwork { get; } Property Value Type Description Boolean IsMine Declaration public bool IsMine { get; } Property Value Type Description Boolean NetworkPlayer Declaration public Player NetworkPlayer { get; } Property Value Type Description Player Renderer Declaration public CharacterRenderer Renderer { get; } Property Value Type Description CharacterRenderer Status Declaration public CharacterStatus Status { get; set; } Property Value Type Description CharacterStatus ViewID Declaration public int ViewID { get; } Property Value Type Description Int32 Methods AddHealth(Single) Declaration public void AddHealth(float value) Parameters Type Name Description Single value AddStamina(Single) Declaration public void AddStamina(float value) Parameters Type Name Description Single value BeCursed() Declaration public void BeCursed() ConsumeItem() Declaration public void ConsumeItem() DiscardAllItem() Declaration public void DiscardAllItem() DiscardItem() Declaration public void DiscardItem() EnterSpectate() Declaration public void EnterSpectate() GenerateFootprint(Vector3, Boolean, Single) Declaration public void GenerateFootprint(Vector3 generatePos, bool flipX, float lifeTime = 0F) Parameters Type Name Description Vector3 generatePos Boolean flipX Single lifeTime GenerateSoundWave(Vector3, Single) Declaration public void GenerateSoundWave(Vector3 generatePos, float duration) Parameters Type Name Description Vector3 generatePos Single duration GetCenterPosition() Declaration public Vector3 GetCenterPosition() Returns Type Description Vector3 LiftCursed() Declaration public void LiftCursed() PickupItem(Int32) Declaration public void PickupItem(int itemViewId) Parameters Type Name Description Int32 itemViewId PlayCursedEffect() Declaration public void PlayCursedEffect() Respawn(Vector3, Single, IntEventChannel) Declaration public void Respawn(Vector3 respawnPoint, float delayTime, IntEventChannel respawnCountdownEvent) Parameters Type Name Description Vector3 respawnPoint Single delayTime IntEventChannel respawnCountdownEvent ReverseCursedEffect() Declaration public void ReverseCursedEffect() TakeDamage(IDamage) Declaration public void TakeDamage(IDamage damage) Parameters Type Name Description IDamage damage ThrowItem() Declaration public void ThrowItem()"
  },
  "api/CatchIo.Runtime.Character.CharacterHitbox.html": {
    "href": "api/CatchIo.Runtime.Character.CharacterHitbox.html",
    "title": "Class CharacterHitbox | Catch.io Developer Reference",
    "keywords": "Class CharacterHitbox Inheritance Object CharacterHitbox Implements ICharacterHitable IDetectable Namespace : CatchIo.Runtime.Character Assembly : cs.temp.dll.dll Syntax public class CharacterHitbox : MonoBehaviour Properties IsDetected Declaration public bool IsDetected { get; } Property Value Type Description Boolean IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description Boolean Owner Declaration public CharacterFacade Owner { get; } Property Value Type Description CharacterFacade Methods DisableHitbox() Declaration public void DisableHitbox() EnableHitbox() Declaration public void EnableHitbox() EnableHitbox(Single) Declaration public void EnableHitbox(float delay) Parameters Type Name Description Single delay GetPosition() Declaration public Vector2 GetPosition() Returns Type Description Vector2 OnDetected() Declaration public void OnDetected() OnHit(IDamage) Declaration public void OnHit(IDamage damage) Parameters Type Name Description IDamage damage OnMissed() Declaration public void OnMissed() Implements ICharacterHitable IDetectable"
  },
  "api/CatchIo.Runtime.Character.CharacterInput.html": {
    "href": "api/CatchIo.Runtime.Character.CharacterInput.html",
    "title": "Class CharacterInput | Catch.io Developer Reference",
    "keywords": "Class CharacterInput Inheritance Object CharacterInput Namespace : CatchIo.Runtime.Character Assembly : cs.temp.dll.dll Syntax public class CharacterInput : MonoBehaviour Fields OnAiming Declaration public UnityEvent OnAiming Field Value Type Description UnityEvent OnAttack Declaration public UnityEvent OnAttack Field Value Type Description UnityEvent OnConsumeItem Declaration public UnityEvent OnConsumeItem Field Value Type Description UnityEvent OnDiscardItem Declaration public UnityEvent OnDiscardItem Field Value Type Description UnityEvent OnItemSelect Declaration public UnityEvent<int> OnItemSelect Field Value Type Description UnityEvent < Int32 > OnThrowItem Declaration public UnityEvent OnThrowItem Field Value Type Description UnityEvent Properties InputCrouch Declaration public bool InputCrouch { get; } Property Value Type Description Boolean InputReader Declaration public InputReader InputReader { get; set; } Property Value Type Description InputReader InputRun Declaration public bool InputRun { get; } Property Value Type Description Boolean Methods DisableCharacterActionInput() Declaration public void DisableCharacterActionInput() DisableCharacterControls() Declaration public void DisableCharacterControls() DisableCharacterMoveInput() Declaration public void DisableCharacterMoveInput() DisableInventoryInput() Declaration public void DisableInventoryInput() EnableCharacterActionInput() Declaration public void EnableCharacterActionInput() EnableCharacterControls() Declaration public void EnableCharacterControls() EnableCharacterMoveInput() Declaration public void EnableCharacterMoveInput() EnableInventoryInput() Declaration public void EnableInventoryInput() GetMouseWorldPosition() Declaration public Vector3 GetMouseWorldPosition() Returns Type Description Vector3 GetMoveDirectionInput() Declaration public Vector2 GetMoveDirectionInput() Returns Type Description Vector2 IsPointerOverUI() Declaration public bool IsPointerOverUI() Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.Character.CharacterRotator.html": {
    "href": "api/CatchIo.Runtime.Character.CharacterRotator.html",
    "title": "Class CharacterRotator | Catch.io Developer Reference",
    "keywords": "Class CharacterRotator Inheritance Object CharacterRotator Namespace : CatchIo.Runtime.Character Assembly : cs.temp.dll.dll Syntax public class CharacterRotator : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Character.CharacterSfxEmitter.html": {
    "href": "api/CatchIo.Runtime.Character.CharacterSfxEmitter.html",
    "title": "Class CharacterSfxEmitter | Catch.io Developer Reference",
    "keywords": "Class CharacterSfxEmitter Inheritance Object CharacterSfxEmitter Namespace : CatchIo.Runtime.Character Assembly : cs.temp.dll.dll Syntax public class CharacterSfxEmitter : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Character.Detector.CharacterDetector.html": {
    "href": "api/CatchIo.Runtime.Character.Detector.CharacterDetector.html",
    "title": "Class CharacterDetector | Catch.io Developer Reference",
    "keywords": "Class CharacterDetector Inheritance Object CharacterDetector Namespace : CatchIo.Runtime.Character.Detector Assembly : cs.temp.dll.dll Syntax public class CharacterDetector : MonoBehaviour Fields ObstacleLayer Declaration public LayerMask ObstacleLayer Field Value Type Description LayerMask Properties AreaSize Declaration public float AreaSize { get; } Property Value Type Description Single CurrentViewAngle Declaration public float CurrentViewAngle { get; } Property Value Type Description Single Forward Declaration public Vector2 Forward { get; } Property Value Type Description Vector2 FOVAngle Declaration public float FOVAngle { get; } Property Value Type Description Single FOVSize Declaration public float FOVSize { get; } Property Value Type Description Single Position Declaration public Vector2 Position { get; } Property Value Type Description Vector2"
  },
  "api/CatchIo.Runtime.Character.Detector.CharacterItemCollector.html": {
    "href": "api/CatchIo.Runtime.Character.Detector.CharacterItemCollector.html",
    "title": "Class CharacterItemCollector | Catch.io Developer Reference",
    "keywords": "Class CharacterItemCollector Inheritance Object CharacterItemCollector Namespace : CatchIo.Runtime.Character.Detector Assembly : cs.temp.dll.dll Syntax public class CharacterItemCollector : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Character.Detector.CursedOneDetector.html": {
    "href": "api/CatchIo.Runtime.Character.Detector.CursedOneDetector.html",
    "title": "Class CursedOneDetector | Catch.io Developer Reference",
    "keywords": "Class CursedOneDetector Inheritance Object CursedOneDetector Namespace : CatchIo.Runtime.Character.Detector Assembly : cs.temp.dll.dll Syntax public class CursedOneDetector : MonoBehaviour Methods Initialize(Single) Declaration public void Initialize(float radius = 1F) Parameters Type Name Description Single radius"
  },
  "api/CatchIo.Runtime.Character.Detector.HidingSpotDetector.html": {
    "href": "api/CatchIo.Runtime.Character.Detector.HidingSpotDetector.html",
    "title": "Class HidingSpotDetector | Catch.io Developer Reference",
    "keywords": "Class HidingSpotDetector Inheritance Object HidingSpotDetector Namespace : CatchIo.Runtime.Character.Detector Assembly : cs.temp.dll.dll Syntax public class HidingSpotDetector : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Character.Detector.html": {
    "href": "api/CatchIo.Runtime.Character.Detector.html",
    "title": "Namespace CatchIo.Runtime.Character.Detector | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.Detector Classes CharacterDetector CharacterItemCollector CursedOneDetector HidingSpotDetector SurfaceDetector"
  },
  "api/CatchIo.Runtime.Character.Detector.SurfaceDetector.html": {
    "href": "api/CatchIo.Runtime.Character.Detector.SurfaceDetector.html",
    "title": "Class SurfaceDetector | Catch.io Developer Reference",
    "keywords": "Class SurfaceDetector Inheritance Object SurfaceDetector Namespace : CatchIo.Runtime.Character.Detector Assembly : cs.temp.dll.dll Syntax public class SurfaceDetector : MonoBehaviour Properties CurrentTileSurface Declaration public TileSurface? CurrentTileSurface { get; } Property Value Type Description Nullable < TileSurface > Methods UpdateCurrentSurface(ISurfaceObservable) Declaration public void UpdateCurrentSurface(ISurfaceObservable observer) Parameters Type Name Description ISurfaceObservable observer"
  },
  "api/CatchIo.Runtime.Character.FSM.CharacterStateMachine.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.CharacterStateMachine.html",
    "title": "Class CharacterStateMachine | Catch.io Developer Reference",
    "keywords": "Class CharacterStateMachine Inheritance Object CharacterStateMachine Namespace : CatchIo.Runtime.Character.FSM Assembly : cs.temp.dll.dll Syntax public class CharacterStateMachine : MonoBehaviour Fields IsLogging Declaration public bool IsLogging Field Value Type Description Boolean OnFailedToChangeActionState Declaration public Action OnFailedToChangeActionState Field Value Type Description Action Properties Character Declaration public CharacterFacade Character { get; } Property Value Type Description CharacterFacade CharacterRenderer Declaration public Transform CharacterRenderer { get; } Property Value Type Description Transform Input Declaration public CharacterInput Input { get; } Property Value Type Description CharacterInput PreviousMoveState Declaration public CharacterMoveState PreviousMoveState { get; } Property Value Type Description CharacterMoveState PreviousState Declaration public CharacterBaseState PreviousState { get; } Property Value Type Description CharacterBaseState Rigidbody2D Declaration public Rigidbody2D Rigidbody2D { get; } Property Value Type Description Rigidbody2D Status Declaration public CharacterStatus Status { get; } Property Value Type Description CharacterStatus Methods ChangeState(CharacterBaseState) Declaration public void ChangeState(CharacterBaseState changedState) Parameters Type Name Description CharacterBaseState changedState Log(String) Declaration public void Log(string msg) Parameters Type Name Description String msg"
  },
  "api/CatchIo.Runtime.Character.FSM.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.html",
    "title": "Namespace CatchIo.Runtime.Character.FSM | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.FSM Classes CharacterStateMachine"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterActionState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterActionState.html",
    "title": "Class CharacterActionState | Catch.io Developer Reference",
    "keywords": "Class CharacterActionState Inheritance Object CharacterBaseState CharacterActionState CharacterAttackState CharacterConsumeState CharacterDamageState CharacterDeathState CharacterDiscardState CharacterThrowState Inherited Members CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterActionState : CharacterBaseState Constructors CharacterActionState(CharacterStateMachine, CharacterStateFactory) Declaration protected CharacterActionState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterBaseState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterAttackState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterAttackState.html",
    "title": "Class CharacterAttackState | Catch.io Developer Reference",
    "keywords": "Class CharacterAttackState Inheritance Object CharacterBaseState CharacterActionState CharacterAttackState Inherited Members CharacterActionState.UpdateState() CharacterActionState.FixedUpdateState() CharacterActionState.CheckSwitchStates() CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterAttackState : CharacterActionState Constructors CharacterAttackState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterAttackState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods EnterState() Declaration public override void EnterState() Overrides CharacterActionState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterActionState.ExitState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterConsumeState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterConsumeState.html",
    "title": "Class CharacterConsumeState | Catch.io Developer Reference",
    "keywords": "Class CharacterConsumeState Inheritance Object CharacterBaseState CharacterActionState CharacterConsumeState Inherited Members CharacterActionState.UpdateState() CharacterActionState.FixedUpdateState() CharacterActionState.CheckSwitchStates() CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterConsumeState : CharacterActionState Constructors CharacterConsumeState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterConsumeState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods EnterState() Declaration public override void EnterState() Overrides CharacterActionState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterActionState.ExitState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterDamageState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterDamageState.html",
    "title": "Class CharacterDamageState | Catch.io Developer Reference",
    "keywords": "Class CharacterDamageState Inheritance Object CharacterBaseState CharacterActionState CharacterDamageState Inherited Members CharacterActionState.UpdateState() CharacterActionState.FixedUpdateState() CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterDamageState : CharacterActionState Constructors CharacterDamageState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterDamageState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterActionState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterActionState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterActionState.ExitState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterDeathState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterDeathState.html",
    "title": "Class CharacterDeathState | Catch.io Developer Reference",
    "keywords": "Class CharacterDeathState Inheritance Object CharacterBaseState CharacterActionState CharacterDeathState Inherited Members CharacterActionState.UpdateState() CharacterActionState.FixedUpdateState() CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterDeathState : CharacterActionState Constructors CharacterDeathState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterDeathState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterActionState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterActionState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterActionState.ExitState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterDiscardState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterDiscardState.html",
    "title": "Class CharacterDiscardState | Catch.io Developer Reference",
    "keywords": "Class CharacterDiscardState Inheritance Object CharacterBaseState CharacterActionState CharacterDiscardState Inherited Members CharacterActionState.UpdateState() CharacterActionState.FixedUpdateState() CharacterActionState.CheckSwitchStates() CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterDiscardState : CharacterActionState Constructors CharacterDiscardState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterDiscardState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods EnterState() Declaration public override void EnterState() Overrides CharacterActionState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterActionState.ExitState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterThrowState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.CharacterThrowState.html",
    "title": "Class CharacterThrowState | Catch.io Developer Reference",
    "keywords": "Class CharacterThrowState Inheritance Object CharacterBaseState CharacterActionState CharacterThrowState Inherited Members CharacterActionState.UpdateState() CharacterActionState.FixedUpdateState() CharacterActionState.CheckSwitchStates() CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.ActionStates Assembly : cs.temp.dll.dll Syntax public class CharacterThrowState : CharacterActionState Constructors CharacterThrowState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterThrowState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods EnterState() Declaration public override void EnterState() Overrides CharacterActionState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterActionState.ExitState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.ActionStates.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.ActionStates.html",
    "title": "Namespace CatchIo.Runtime.Character.FSM.States.ActionStates | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.FSM.States.ActionStates Classes CharacterActionState CharacterAttackState CharacterConsumeState CharacterDamageState CharacterDeathState CharacterDiscardState CharacterThrowState"
  },
  "api/CatchIo.Runtime.Character.FSM.States.CharacterBaseState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.CharacterBaseState.html",
    "title": "Class CharacterBaseState | Catch.io Developer Reference",
    "keywords": "Class CharacterBaseState Inheritance Object CharacterBaseState CharacterActionState CharacterMoveState Namespace : CatchIo.Runtime.Character.FSM.States Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class CharacterBaseState Constructors CharacterBaseState(CharacterStateMachine, CharacterStateFactory) Declaration protected CharacterBaseState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Fields EnteredStateTime Declaration protected float EnteredStateTime Field Value Type Description Single Factory Declaration protected readonly CharacterStateFactory Factory Field Value Type Description CharacterStateFactory StateMachine Declaration protected readonly CharacterStateMachine StateMachine Field Value Type Description CharacterStateMachine Methods CheckSwitchStates() Declaration public abstract void CheckSwitchStates() EnterState() Declaration public virtual void EnterState() ExitState() Declaration public abstract void ExitState() FixedUpdateState() Declaration public abstract void FixedUpdateState() UpdateState() Declaration public abstract void UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.CharacterStateFactory.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.CharacterStateFactory.html",
    "title": "Class CharacterStateFactory | Catch.io Developer Reference",
    "keywords": "Class CharacterStateFactory Inheritance Object CharacterStateFactory Namespace : CatchIo.Runtime.Character.FSM.States Assembly : cs.temp.dll.dll Syntax public class CharacterStateFactory Constructors CharacterStateFactory(CharacterStateMachine) Declaration public CharacterStateFactory(CharacterStateMachine stateMachine) Parameters Type Name Description CharacterStateMachine stateMachine Methods Attack() Declaration public CharacterBaseState Attack() Returns Type Description CharacterBaseState Consume() Declaration public CharacterBaseState Consume() Returns Type Description CharacterBaseState Damage() Declaration public CharacterBaseState Damage() Returns Type Description CharacterBaseState Death() Declaration public CharacterBaseState Death() Returns Type Description CharacterBaseState Discard() Declaration public CharacterBaseState Discard() Returns Type Description CharacterBaseState Run() Declaration public CharacterBaseState Run() Returns Type Description CharacterBaseState Sneak() Declaration public CharacterBaseState Sneak() Returns Type Description CharacterBaseState SneakStatic() Declaration public CharacterBaseState SneakStatic() Returns Type Description CharacterBaseState Spawn() Declaration public CharacterBaseState Spawn() Returns Type Description CharacterBaseState Spectate() Declaration public CharacterBaseState Spectate() Returns Type Description CharacterBaseState Static() Declaration public CharacterBaseState Static() Returns Type Description CharacterBaseState Throw() Declaration public CharacterBaseState Throw() Returns Type Description CharacterBaseState Walk() Declaration public CharacterBaseState Walk() Returns Type Description CharacterBaseState"
  },
  "api/CatchIo.Runtime.Character.FSM.States.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.html",
    "title": "Namespace CatchIo.Runtime.Character.FSM.States | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.FSM.States Classes CharacterBaseState CharacterStateFactory"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterMoveState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterMoveState.html",
    "title": "Class CharacterMoveState | Catch.io Developer Reference",
    "keywords": "Class CharacterMoveState Inheritance Object CharacterBaseState CharacterMoveState CharacterRunState CharacterSneakState CharacterSneakStaticState CharacterSpectateState CharacterStaticState CharacterWalkState Inherited Members CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime CharacterBaseState.EnterState() CharacterBaseState.UpdateState() CharacterBaseState.FixedUpdateState() CharacterBaseState.CheckSwitchStates() Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class CharacterMoveState : CharacterBaseState Constructors CharacterMoveState(CharacterStateMachine, CharacterStateFactory) Declaration protected CharacterMoveState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Fields DenySprintThreshold Declaration public float DenySprintThreshold Field Value Type Description Single IsSlowed Declaration public bool IsSlowed Field Value Type Description Boolean Methods CompareDirections(Vector2, Vector2) Declaration public float CompareDirections(Vector2 viewDirection, Vector2 moveDirection) Parameters Type Name Description Vector2 viewDirection Vector2 moveDirection Returns Type Description Single ExitState() Declaration public override void ExitState() Overrides CharacterBaseState.ExitState() Move(Single) Declaration protected void Move(float moveSpeed) Parameters Type Name Description Single moveSpeed"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterRunState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterRunState.html",
    "title": "Class CharacterRunState | Catch.io Developer Reference",
    "keywords": "Class CharacterRunState Inheritance Object CharacterBaseState CharacterMoveState CharacterRunState Inherited Members CharacterMoveState.DenySprintThreshold CharacterMoveState.IsSlowed CharacterMoveState.Move(Single) CharacterMoveState.CompareDirections(Vector2, Vector2) CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterRunState : CharacterMoveState Constructors CharacterRunState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterRunState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterMoveState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterSneakState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterSneakState.html",
    "title": "Class CharacterSneakState | Catch.io Developer Reference",
    "keywords": "Class CharacterSneakState Inheritance Object CharacterBaseState CharacterMoveState CharacterSneakState Inherited Members CharacterMoveState.DenySprintThreshold CharacterMoveState.IsSlowed CharacterMoveState.Move(Single) CharacterMoveState.CompareDirections(Vector2, Vector2) CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterSneakState : CharacterMoveState Constructors CharacterSneakState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterSneakState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterMoveState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterSneakStaticState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterSneakStaticState.html",
    "title": "Class CharacterSneakStaticState | Catch.io Developer Reference",
    "keywords": "Class CharacterSneakStaticState Inheritance Object CharacterBaseState CharacterMoveState CharacterSneakStaticState Inherited Members CharacterMoveState.DenySprintThreshold CharacterMoveState.IsSlowed CharacterMoveState.Move(Single) CharacterMoveState.CompareDirections(Vector2, Vector2) CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterSneakStaticState : CharacterMoveState Constructors CharacterSneakStaticState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterSneakStaticState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterMoveState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterSpectateState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterSpectateState.html",
    "title": "Class CharacterSpectateState | Catch.io Developer Reference",
    "keywords": "Class CharacterSpectateState Inheritance Object CharacterBaseState CharacterMoveState CharacterSpectateState Inherited Members CharacterMoveState.DenySprintThreshold CharacterMoveState.IsSlowed CharacterMoveState.Move(Single) CharacterMoveState.CompareDirections(Vector2, Vector2) CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterSpectateState : CharacterMoveState Constructors CharacterSpectateState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterSpectateState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterMoveState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterStaticState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterStaticState.html",
    "title": "Class CharacterStaticState | Catch.io Developer Reference",
    "keywords": "Class CharacterStaticState Inheritance Object CharacterBaseState CharacterMoveState CharacterStaticState Inherited Members CharacterMoveState.DenySprintThreshold CharacterMoveState.IsSlowed CharacterMoveState.Move(Single) CharacterMoveState.CompareDirections(Vector2, Vector2) CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterStaticState : CharacterMoveState Constructors CharacterStaticState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterStaticState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterMoveState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterWalkState.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.CharacterWalkState.html",
    "title": "Class CharacterWalkState | Catch.io Developer Reference",
    "keywords": "Class CharacterWalkState Inheritance Object CharacterBaseState CharacterMoveState CharacterWalkState Inherited Members CharacterMoveState.DenySprintThreshold CharacterMoveState.IsSlowed CharacterMoveState.Move(Single) CharacterMoveState.CompareDirections(Vector2, Vector2) CharacterBaseState.StateMachine CharacterBaseState.Factory CharacterBaseState.EnteredStateTime Namespace : CatchIo.Runtime.Character.FSM.States.MoveStates Assembly : cs.temp.dll.dll Syntax [Serializable] public class CharacterWalkState : CharacterMoveState Constructors CharacterWalkState(CharacterStateMachine, CharacterStateFactory) Declaration public CharacterWalkState(CharacterStateMachine stateMachine, CharacterStateFactory factory) Parameters Type Name Description CharacterStateMachine stateMachine CharacterStateFactory factory Methods CheckSwitchStates() Declaration public override void CheckSwitchStates() Overrides CharacterBaseState.CheckSwitchStates() EnterState() Declaration public override void EnterState() Overrides CharacterBaseState.EnterState() ExitState() Declaration public override void ExitState() Overrides CharacterMoveState.ExitState() FixedUpdateState() Declaration public override void FixedUpdateState() Overrides CharacterBaseState.FixedUpdateState() UpdateState() Declaration public override void UpdateState() Overrides CharacterBaseState.UpdateState()"
  },
  "api/CatchIo.Runtime.Character.FSM.States.MoveStates.html": {
    "href": "api/CatchIo.Runtime.Character.FSM.States.MoveStates.html",
    "title": "Namespace CatchIo.Runtime.Character.FSM.States.MoveStates | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.FSM.States.MoveStates Classes CharacterMoveState CharacterRunState CharacterSneakState CharacterSneakStaticState CharacterSpectateState CharacterStaticState CharacterWalkState"
  },
  "api/CatchIo.Runtime.Character.Graphics.CharacterAimTrajectory.html": {
    "href": "api/CatchIo.Runtime.Character.Graphics.CharacterAimTrajectory.html",
    "title": "Class CharacterAimTrajectory | Catch.io Developer Reference",
    "keywords": "Class CharacterAimTrajectory Inheritance Object CharacterAimTrajectory Namespace : CatchIo.Runtime.Character.Graphics Assembly : cs.temp.dll.dll Syntax public class CharacterAimTrajectory : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Character.Graphics.CharacterAnimator.html": {
    "href": "api/CatchIo.Runtime.Character.Graphics.CharacterAnimator.html",
    "title": "Class CharacterAnimator | Catch.io Developer Reference",
    "keywords": "Class CharacterAnimator Inheritance Object CharacterAnimator Namespace : CatchIo.Runtime.Character.Graphics Assembly : cs.temp.dll.dll Syntax public class CharacterAnimator : MonoBehaviour Fields OnActionAnimCompleted Declaration public Action OnActionAnimCompleted Field Value Type Description Action Properties RuntimeAnimatorController Declaration public RuntimeAnimatorController RuntimeAnimatorController { get; set; } Property Value Type Description RuntimeAnimatorController Methods HasActionAnimation(CharacterActionType) Declaration public bool HasActionAnimation(CharacterActionType type) Parameters Type Name Description CharacterActionType type Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.Character.Graphics.CharacterHidingEffectPlayer.html": {
    "href": "api/CatchIo.Runtime.Character.Graphics.CharacterHidingEffectPlayer.html",
    "title": "Class CharacterHidingEffectPlayer | Catch.io Developer Reference",
    "keywords": "Class CharacterHidingEffectPlayer Inheritance Object CharacterHidingEffectPlayer Implements IOnEventCallback Namespace : CatchIo.Runtime.Character.Graphics Assembly : cs.temp.dll.dll Syntax public class CharacterHidingEffectPlayer : MonoBehaviour Fields PercentageBeingOverlapped Declaration public float PercentageBeingOverlapped Field Value Type Description Single Methods OnEvent(EventData) Declaration public void OnEvent(EventData photonEvent) Parameters Type Name Description EventData photonEvent PlayHidingEffectImmediately() Declaration public void PlayHidingEffectImmediately() ReverseHidingEffect() Declaration public void ReverseHidingEffect() Implements IOnEventCallback"
  },
  "api/CatchIo.Runtime.Character.Graphics.CharacterMaskRenderer.html": {
    "href": "api/CatchIo.Runtime.Character.Graphics.CharacterMaskRenderer.html",
    "title": "Class CharacterMaskRenderer | Catch.io Developer Reference",
    "keywords": "Class CharacterMaskRenderer Inheritance Object CharacterMaskRenderer Namespace : CatchIo.Runtime.Character.Graphics Assembly : cs.temp.dll.dll Syntax public class CharacterMaskRenderer : MonoBehaviour Methods DisableMaskRenderer() Declaration public void DisableMaskRenderer() EnableMaskRenderer() Declaration public void EnableMaskRenderer() InitMaskRenderer(String, Int32) Declaration public void InitMaskRenderer(string sortingLayerName, int sortingOrder) Parameters Type Name Description String sortingLayerName Int32 sortingOrder UpdateMaskRenderer(SpriteRenderer) Declaration public void UpdateMaskRenderer(SpriteRenderer characterRenderer) Parameters Type Name Description SpriteRenderer characterRenderer"
  },
  "api/CatchIo.Runtime.Character.Graphics.CharacterRenderer.html": {
    "href": "api/CatchIo.Runtime.Character.Graphics.CharacterRenderer.html",
    "title": "Class CharacterRenderer | Catch.io Developer Reference",
    "keywords": "Class CharacterRenderer Inheritance Object CharacterRenderer Implements IEffectPlayable Namespace : CatchIo.Runtime.Character.Graphics Assembly : cs.temp.dll.dll Syntax public class CharacterRenderer : MonoBehaviour Properties CharacterSprite Declaration public Sprite CharacterSprite { get; } Property Value Type Description Sprite MaskRenderer Declaration public CharacterMaskRenderer MaskRenderer { get; } Property Value Type Description CharacterMaskRenderer PivotY Declaration public float PivotY { get; } Property Value Type Description Single SpriteArea Declaration public float SpriteArea { get; } Property Value Type Description Single SpriteRenderer Declaration public SpriteRenderer SpriteRenderer { get; } Property Value Type Description SpriteRenderer SpriteVertices Declaration public List<Vector2> SpriteVertices { get; } Property Value Type Description List < Vector2 > Methods DisableRenderer() Declaration public void DisableRenderer() EffectSequence(EffectBase) Declaration public IEnumerator EffectSequence(EffectBase effect) Parameters Type Name Description EffectBase effect Returns Type Description IEnumerator EnableRenderer() Declaration public void EnableRenderer() ExecuteEffect(EffectBase) Declaration public void ExecuteEffect(EffectBase effect) Parameters Type Name Description EffectBase effect OnEndEffect(EffectBase) Declaration public void OnEndEffect(EffectBase effect) Parameters Type Name Description EffectBase effect PlayCursedEffectToLocalClient() Declaration public void PlayCursedEffectToLocalClient() PlayCursedEffectToOtherClients(Boolean) Declaration public void PlayCursedEffectToOtherClients(bool immediately = false) Parameters Type Name Description Boolean immediately PlayDamageEffect() Declaration public void PlayDamageEffect() ReverseCursedEffectToLocalClient() Declaration public void ReverseCursedEffectToLocalClient() ReverseCursedEffectToOtherClients(Boolean) Declaration public void ReverseCursedEffectToOtherClients(bool immediately = false) Parameters Type Name Description Boolean immediately ReverseEffect(EffectBase) Declaration public void ReverseEffect(EffectBase effect) Parameters Type Name Description EffectBase effect Implements IEffectPlayable"
  },
  "api/CatchIo.Runtime.Character.Graphics.html": {
    "href": "api/CatchIo.Runtime.Character.Graphics.html",
    "title": "Namespace CatchIo.Runtime.Character.Graphics | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.Graphics Classes CharacterAimTrajectory CharacterAnimator CharacterHidingEffectPlayer CharacterMaskRenderer CharacterRenderer"
  },
  "api/CatchIo.Runtime.Character.html": {
    "href": "api/CatchIo.Runtime.Character.html",
    "title": "Namespace CatchIo.Runtime.Character | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character Classes CharacterFacade CharacterHitbox CharacterInput CharacterRotator CharacterSfxEmitter NetworkCharacter"
  },
  "api/CatchIo.Runtime.Character.Inventory.html": {
    "href": "api/CatchIo.Runtime.Character.Inventory.html",
    "title": "Namespace CatchIo.Runtime.Character.Inventory | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.Inventory Classes Inventory This class is container for items. InventoryController This class controls what Inventory class related to. ItemSlot"
  },
  "api/CatchIo.Runtime.Character.Inventory.Inventory.html": {
    "href": "api/CatchIo.Runtime.Character.Inventory.Inventory.html",
    "title": "Class Inventory | Catch.io Developer Reference",
    "keywords": "Class Inventory This class is container for items. Inheritance Object Inventory Namespace : CatchIo.Runtime.Character.Inventory Assembly : cs.temp.dll.dll Syntax [Serializable] public class Inventory Constructors Inventory(Int32) Declaration public Inventory(int maxInventorySize) Parameters Type Name Description Int32 maxInventorySize Methods Clear() Declaration public void Clear() Draw() Declaration public void Draw() FindFirstEmptySlotIndex() Declaration public int FindFirstEmptySlotIndex() Returns Type Description Int32 GetCount() Declaration public int GetCount() Returns Type Description Int32 GetExistedNextItemSlot(Int32) Declaration public ItemSlot GetExistedNextItemSlot(int index) Parameters Type Name Description Int32 index Returns Type Description ItemSlot GetExistedPreviousItemSlot(Int32) Declaration public ItemSlot GetExistedPreviousItemSlot(int index) Parameters Type Name Description Int32 index Returns Type Description ItemSlot GetFirstItemSlot() Declaration public ItemSlot GetFirstItemSlot() Returns Type Description ItemSlot GetItem(Int32) Declaration public Item GetItem(int slotNo) Parameters Type Name Description Int32 slotNo Returns Type Description Item GetItemSlot(Int32) Declaration public ItemSlot GetItemSlot(int slotNo) Parameters Type Name Description Int32 slotNo Returns Type Description ItemSlot GetItemSlots() Declaration public List<ItemSlot> GetItemSlots() Returns Type Description List < ItemSlot > GetLastItemSlot() Declaration public ItemSlot GetLastItemSlot() Returns Type Description ItemSlot IsEmpty() Declaration public bool IsEmpty() Returns Type Description Boolean IsFull() Declaration public bool IsFull() Returns Type Description Boolean ToArray() Declaration public ItemSlot[] ToArray() Returns Type Description ItemSlot [] TryAddItemToItemSlot(Int32, Item) Declaration public bool TryAddItemToItemSlot(int index, Item newItem) Parameters Type Name Description Int32 index Item newItem Returns Type Description Boolean TryMakeEmptySlot(Int32) Declaration public bool TryMakeEmptySlot(int slotNo) Parameters Type Name Description Int32 slotNo Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.Character.Inventory.InventoryController.html": {
    "href": "api/CatchIo.Runtime.Character.Inventory.InventoryController.html",
    "title": "Class InventoryController | Catch.io Developer Reference",
    "keywords": "Class InventoryController This class controls what Inventory class related to. Inheritance Object InventoryController Namespace : CatchIo.Runtime.Character.Inventory Assembly : cs.temp.dll.dll Syntax public class InventoryController : MonoBehaviour Fields MaxItemSlotCount Declaration public int MaxItemSlotCount Field Value Type Description Int32 OnAddItem Declaration public Action<int, Item> OnAddItem Field Value Type Description Action < Int32 , Item > OnDisable Declaration public Action OnDisable Field Value Type Description Action OnEnable Declaration public Action OnEnable Field Value Type Description Action OnReleaseItem Declaration public Action<int> OnReleaseItem Field Value Type Description Action < Int32 > OnRemoveItem Declaration public Action<int> OnRemoveItem Field Value Type Description Action < Int32 > OnSelectItemSlot Declaration public Action<ItemSlot> OnSelectItemSlot Field Value Type Description Action < ItemSlot > Properties InventoryCursor Declaration public int InventoryCursor { get; } Property Value Type Description Int32 Methods Awake() Declaration public void Awake() CheckInventoryAvailability() Declaration public bool CheckInventoryAvailability() Returns Type Description Boolean ClearInventory() Declaration public void ClearInventory() DisableInventory() Declaration public void DisableInventory() EmptySlot(Int32) Make the inventory slot[index] to empty slot. And automatically move inventory cursor to right direction to find a valid item slot. If cannot find a valid item slot, set _inventoryCursor to -1. Declaration public void EmptySlot(int index) Parameters Type Name Description Int32 index EnableInventory() Declaration public void EnableInventory() GetAllItems() Declaration public List<Item> GetAllItems() Returns Type Description List < Item > GetCount() Declaration public int GetCount() Returns Type Description Int32 GetItem(Int32) Declaration public Item GetItem(int index) Parameters Type Name Description Int32 index Returns Type Description Item OnItemSlotSelected(Int32) Declaration public void OnItemSlotSelected(int direction) Parameters Type Name Description Int32 direction PickupItem(Item) Declaration public void PickupItem(Item item) Parameters Type Name Description Item item"
  },
  "api/CatchIo.Runtime.Character.Inventory.ItemSlot.html": {
    "href": "api/CatchIo.Runtime.Character.Inventory.ItemSlot.html",
    "title": "Class ItemSlot | Catch.io Developer Reference",
    "keywords": "Class ItemSlot Inheritance Object ItemSlot Namespace : CatchIo.Runtime.Character.Inventory Assembly : cs.temp.dll.dll Syntax [Serializable] public class ItemSlot Constructors ItemSlot(Int32, Item) Declaration public ItemSlot(int slotNumber, Item item) Parameters Type Name Description Int32 slotNumber Item item Properties Item Declaration public Item Item { get; } Property Value Type Description Item SlotNumber Declaration public int SlotNumber { get; } Property Value Type Description Int32"
  },
  "api/CatchIo.Runtime.Character.Lighting.CharacterLighting.html": {
    "href": "api/CatchIo.Runtime.Character.Lighting.CharacterLighting.html",
    "title": "Class CharacterLighting | Catch.io Developer Reference",
    "keywords": "Class CharacterLighting Inheritance Object CharacterLighting Namespace : CatchIo.Runtime.Character.Lighting Assembly : cs.temp.dll.dll Syntax public class CharacterLighting : MonoBehaviour Methods DisableLight() Declaration public void DisableLight() GetAreaLight(Int32) Declaration public LightSprite2D GetAreaLight(int index) Parameters Type Name Description Int32 index Returns Type Description LightSprite2D GetAreaLightSize(Int32) Declaration public float GetAreaLightSize(int index) Parameters Type Name Description Int32 index Returns Type Description Single GetFOVLight(Int32) Declaration public Light2D GetFOVLight(int index) Parameters Type Name Description Int32 index Returns Type Description Light2D"
  },
  "api/CatchIo.Runtime.Character.Lighting.html": {
    "href": "api/CatchIo.Runtime.Character.Lighting.html",
    "title": "Namespace CatchIo.Runtime.Character.Lighting | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.Lighting Classes CharacterLighting"
  },
  "api/CatchIo.Runtime.Character.NetworkCharacter.html": {
    "href": "api/CatchIo.Runtime.Character.NetworkCharacter.html",
    "title": "Class NetworkCharacter | Catch.io Developer Reference",
    "keywords": "Class NetworkCharacter Inheritance Object NetworkCharacter Implements IPunObservable IPunInstantiateMagicCallback Namespace : CatchIo.Runtime.Character Assembly : cs.temp.dll.dll Syntax public class NetworkCharacter : MonoBehaviourPun Properties IsDummyClient Declaration public bool IsDummyClient { get; } Property Value Type Description Boolean Owner Declaration public Player Owner { get; } Property Value Type Description Player Methods BeCursed() Declaration public void BeCursed() ConsumeItem() Declaration public void ConsumeItem() DiscardAllItem() Declaration public void DiscardAllItem() DiscardItem() Declaration public void DiscardItem() EnterSpectate() Declaration public void EnterSpectate() GenerateFootprint(Vector3, Boolean, Single) Declaration public void GenerateFootprint(Vector3 generatePos, bool flipX, float lifeTime = 0F) Parameters Type Name Description Vector3 generatePos Boolean flipX Single lifeTime GenerateSoundWave(Vector3, Single) Declaration public void GenerateSoundWave(Vector3 generatePos, float duration) Parameters Type Name Description Vector3 generatePos Single duration LiftCursed() Declaration public void LiftCursed() OnPhotonInstantiate(PhotonMessageInfo) Declaration public void OnPhotonInstantiate(PhotonMessageInfo info) Parameters Type Name Description PhotonMessageInfo info OnPhotonSerializeView(PhotonStream, PhotonMessageInfo) Declaration public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info) Parameters Type Name Description PhotonStream stream PhotonMessageInfo info PickupItem(Int32) Declaration public void PickupItem(int itemViewId) Parameters Type Name Description Int32 itemViewId PlayCursedEffect() Declaration public void PlayCursedEffect() ReverseCursedEffect() Declaration public void ReverseCursedEffect() TakeDamage(IDamage) Declaration public void TakeDamage(IDamage damage) Parameters Type Name Description IDamage damage ThrowItem(Vector3) Declaration public void ThrowItem(Vector3 thrownPosition) Parameters Type Name Description Vector3 thrownPosition Implements IPunObservable IPunInstantiateMagicCallback"
  },
  "api/CatchIo.Runtime.Character.SurfaceEffect.html": {
    "href": "api/CatchIo.Runtime.Character.SurfaceEffect.html",
    "title": "Namespace CatchIo.Runtime.Character.SurfaceEffect | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Character.SurfaceEffect Classes SurfaceEffectPlayer"
  },
  "api/CatchIo.Runtime.Character.SurfaceEffect.SurfaceEffectPlayer.html": {
    "href": "api/CatchIo.Runtime.Character.SurfaceEffect.SurfaceEffectPlayer.html",
    "title": "Class SurfaceEffectPlayer | Catch.io Developer Reference",
    "keywords": "Class SurfaceEffectPlayer Inheritance Object SurfaceEffectPlayer Implements ISurfaceObservable Namespace : CatchIo.Runtime.Character.SurfaceEffect Assembly : cs.temp.dll.dll Syntax public class SurfaceEffectPlayer : MonoBehaviour Fields FootprintLifeTime Declaration public float FootprintLifeTime Field Value Type Description Single Properties CurrentTileSurface Declaration public TileSurface? CurrentTileSurface { get; } Property Value Type Description Nullable < TileSurface > Methods OnSurfaceChanged(Nullable<TileSurface>) Declaration public void OnSurfaceChanged(TileSurface? newSurface) Parameters Type Name Description Nullable < TileSurface > newSurface PlayFootstepEvents() Declaration public void PlayFootstepEvents() PlayItemSurfaceSfx(String) Declaration public void PlayItemSurfaceSfx(string itemName) Parameters Type Name Description String itemName Implements ISurfaceObservable"
  },
  "api/CatchIo.Runtime.Container.CharacterClassContainer.CharacterClassInfo.html": {
    "href": "api/CatchIo.Runtime.Container.CharacterClassContainer.CharacterClassInfo.html",
    "title": "Struct CharacterClassContainer.CharacterClassInfo | Catch.io Developer Reference",
    "keywords": "Struct CharacterClassContainer.CharacterClassInfo Namespace : CatchIo.Runtime.Container Assembly : cs.temp.dll.dll Syntax [Serializable] public struct CharacterClassInfo Fields ClassIntroSprite Declaration public Sprite[] ClassIntroSprite Field Value Type Description Sprite [] ClassSprite Declaration public Sprite ClassSprite Field Value Type Description Sprite Name Declaration public string Name Field Value Type Description String"
  },
  "api/CatchIo.Runtime.Container.CharacterClassContainer.html": {
    "href": "api/CatchIo.Runtime.Container.CharacterClassContainer.html",
    "title": "Class CharacterClassContainer | Catch.io Developer Reference",
    "keywords": "Class CharacterClassContainer Inheritance Object CharacterClassContainer Namespace : CatchIo.Runtime.Container Assembly : cs.temp.dll.dll Syntax public class CharacterClassContainer : DescriptionScriptableObject Fields ClassInfos Declaration public List<CharacterClassContainer.CharacterClassInfo> ClassInfos Field Value Type Description List < CharacterClassContainer.CharacterClassInfo > Methods GetIndex(String) Declaration public int GetIndex(string className) Parameters Type Name Description String className Returns Type Description Int32 GetLastIndex() Declaration public int GetLastIndex() Returns Type Description Int32 GetRandomClass() Declaration public CharacterClassContainer.CharacterClassInfo GetRandomClass() Returns Type Description CharacterClassContainer.CharacterClassInfo"
  },
  "api/CatchIo.Runtime.Container.GameModeContainer.html": {
    "href": "api/CatchIo.Runtime.Container.GameModeContainer.html",
    "title": "Class GameModeContainer | Catch.io Developer Reference",
    "keywords": "Class GameModeContainer Inheritance Object GameModeContainer Namespace : CatchIo.Runtime.Container Assembly : cs.temp.dll.dll Syntax public class GameModeContainer : ScriptableObject Fields GameModes Declaration public List<GameMode> GameModes Field Value Type Description List < GameMode > Methods GetGameMode(Int32) Declaration public GameMode GetGameMode(int index) Parameters Type Name Description Int32 index Returns Type Description GameMode GetGameMode(String) Declaration public GameMode GetGameMode(string modeName) Parameters Type Name Description String modeName Returns Type Description GameMode GetGameModeNames() Declaration public List<string> GetGameModeNames() Returns Type Description List < String >"
  },
  "api/CatchIo.Runtime.Container.html": {
    "href": "api/CatchIo.Runtime.Container.html",
    "title": "Namespace CatchIo.Runtime.Container | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Container Classes CharacterClassContainer GameModeContainer NetworkConnectionContainer SceneContainer SceneModeContainer Structs CharacterClassContainer.CharacterClassInfo"
  },
  "api/CatchIo.Runtime.Container.NetworkConnectionContainer.html": {
    "href": "api/CatchIo.Runtime.Container.NetworkConnectionContainer.html",
    "title": "Class NetworkConnectionContainer | Catch.io Developer Reference",
    "keywords": "Class NetworkConnectionContainer Inheritance Object NetworkConnectionContainer Namespace : CatchIo.Runtime.Container Assembly : cs.temp.dll.dll Syntax public class NetworkConnectionContainer : DescriptionScriptableObject Methods AddNetworkCallback() Declaration public void AddNetworkCallback() GetLobbyConnection() Declaration public LobbyConnection GetLobbyConnection() Returns Type Description LobbyConnection GetRoomConnection() Declaration public RoomConnection GetRoomConnection() Returns Type Description RoomConnection GetServerConnection() Declaration public ServerConnection GetServerConnection() Returns Type Description ServerConnection RemoveNetworkCallback() Declaration public void RemoveNetworkCallback()"
  },
  "api/CatchIo.Runtime.Container.SceneContainer.html": {
    "href": "api/CatchIo.Runtime.Container.SceneContainer.html",
    "title": "Class SceneContainer | Catch.io Developer Reference",
    "keywords": "Class SceneContainer Inheritance Object SceneContainer Namespace : CatchIo.Runtime.Container Assembly : cs.temp.dll.dll Syntax public class SceneContainer : DescriptionScriptableObject Fields Container Declaration public List<SceneObject> Container Field Value Type Description List < SceneObject >"
  },
  "api/CatchIo.Runtime.Container.SceneModeContainer.html": {
    "href": "api/CatchIo.Runtime.Container.SceneModeContainer.html",
    "title": "Class SceneModeContainer | Catch.io Developer Reference",
    "keywords": "Class SceneModeContainer Inheritance Object SceneModeContainer Namespace : CatchIo.Runtime.Container Assembly : cs.temp.dll.dll Syntax public class SceneModeContainer : DescriptionScriptableObject Methods GetGameSceneMode() Declaration public GameSceneMode GetGameSceneMode() Returns Type Description GameSceneMode GetMenuSceneMode(String) Declaration public MenuSceneMode GetMenuSceneMode(string mainSceneName) Parameters Type Name Description String mainSceneName Returns Type Description MenuSceneMode GetMenuSceneMode(Type) Declaration public MenuSceneMode GetMenuSceneMode(Type sceneModeType) Parameters Type Name Description Type sceneModeType Returns Type Description MenuSceneMode GetMenuSceneModes() Declaration public List<MenuSceneMode> GetMenuSceneModes() Returns Type Description List < MenuSceneMode >"
  },
  "api/CatchIo.Runtime.DynmaicObjects.DestroyDynamicObject.html": {
    "href": "api/CatchIo.Runtime.DynmaicObjects.DestroyDynamicObject.html",
    "title": "Class DestroyDynamicObject | Catch.io Developer Reference",
    "keywords": "Class DestroyDynamicObject Inheritance Object DestroyDynamicObject Namespace : CatchIo.Runtime.DynmaicObjects Assembly : cs.temp.dll.dll Syntax public class DestroyDynamicObject : MonoBehaviour Methods Destroy(Single, Action) Declaration public void Destroy(float time = 0F, Action onDestoryed = null) Parameters Type Name Description Single time Action onDestoryed"
  },
  "api/CatchIo.Runtime.DynmaicObjects.Footprint.html": {
    "href": "api/CatchIo.Runtime.DynmaicObjects.Footprint.html",
    "title": "Class Footprint | Catch.io Developer Reference",
    "keywords": "Class Footprint The footprint component for the footprint game object. Inheritance Object Footprint Namespace : CatchIo.Runtime.DynmaicObjects Assembly : cs.temp.dll.dll Syntax public class Footprint : MonoBehaviour Methods CreateFootprint(String, String, Vector3, Single, Boolean, Color, Single) Declaration public static void CreateFootprint(string className, string skinName, Vector3 generatePos, float angle, bool flipX, Color glowColor, float lifeTime) Parameters Type Name Description String className String skinName Vector3 generatePos Single angle Boolean flipX Color glowColor Single lifeTime"
  },
  "api/CatchIo.Runtime.DynmaicObjects.html": {
    "href": "api/CatchIo.Runtime.DynmaicObjects.html",
    "title": "Namespace CatchIo.Runtime.DynmaicObjects | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.DynmaicObjects Classes DestroyDynamicObject Footprint The footprint component for the footprint game object. SoundWaveEffect TrapObject This class implements the behavior for the TrapObject. It stores HP for the TrapObject and allows it to be destroyed by player attacks. It also sets parameters in the Animation Controller."
  },
  "api/CatchIo.Runtime.DynmaicObjects.SoundWaveEffect.html": {
    "href": "api/CatchIo.Runtime.DynmaicObjects.SoundWaveEffect.html",
    "title": "Class SoundWaveEffect | Catch.io Developer Reference",
    "keywords": "Class SoundWaveEffect Inheritance Object SoundWaveEffect Namespace : CatchIo.Runtime.DynmaicObjects Assembly : cs.temp.dll.dll Syntax public class SoundWaveEffect : MonoBehaviour Fields SOUND_WAVE_POOL_NAME Declaration public const string SOUND_WAVE_POOL_NAME = \"sound_wave\" Field Value Type Description String Methods CreateSoundWave(Vector3, Color, Single) Declaration public static void CreateSoundWave(Vector3 createdPos, Color color, float duration) Parameters Type Name Description Vector3 createdPos Color color Single duration"
  },
  "api/CatchIo.Runtime.DynmaicObjects.TrapObject.html": {
    "href": "api/CatchIo.Runtime.DynmaicObjects.TrapObject.html",
    "title": "Class TrapObject | Catch.io Developer Reference",
    "keywords": "Class TrapObject This class implements the behavior for the TrapObject. It stores HP for the TrapObject and allows it to be destroyed by player attacks. It also sets parameters in the Animation Controller. Inheritance Object TrapObject Implements ICharacterHitable IPunInstantiateMagicCallback Namespace : CatchIo.Runtime.DynmaicObjects Assembly : cs.temp.dll.dll Syntax public class TrapObject : MonoBehaviourPun Fields _itemSfx Declaration protected ItemSfx _itemSfx Field Value Type Description ItemSfx OverlapCircleOffset Declaration public Vector2 OverlapCircleOffset Field Value Type Description Vector2 OverlapCircleRadius Declaration public float OverlapCircleRadius Field Value Type Description Single Owner Declaration public CharacterFacade Owner Field Value Type Description CharacterFacade TargetLayerMask Declaration public LayerMask TargetLayerMask Field Value Type Description LayerMask Properties HealthVal Declaration public float HealthVal { get; } Property Value Type Description Single TrapLifeTime Declaration public float TrapLifeTime { get; } Property Value Type Description Single Methods DestroyGameObject() Declaration public void DestroyGameObject() DestroyTrapDueToTimeout() Declaration public void DestroyTrapDueToTimeout() OnHit(IDamage) Declaration public void OnHit(IDamage damage) Parameters Type Name Description IDamage damage OnPhotonInstantiate(PhotonMessageInfo) Declaration public void OnPhotonInstantiate(PhotonMessageInfo info) Parameters Type Name Description PhotonMessageInfo info TakeDamage(Single) Declaration public void TakeDamage(float damage) Parameters Type Name Description Single damage Implements ICharacterHitable IPunInstantiateMagicCallback"
  },
  "api/CatchIo.Runtime.Enums.CharacterActionType.html": {
    "href": "api/CatchIo.Runtime.Enums.CharacterActionType.html",
    "title": "Enum CharacterActionType | Catch.io Developer Reference",
    "keywords": "Enum CharacterActionType Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum CharacterActionType Fields Name Description Attack Consume Damage Death Discard End None Spawn Throw"
  },
  "api/CatchIo.Runtime.Enums.CharacterClassType.html": {
    "href": "api/CatchIo.Runtime.Enums.CharacterClassType.html",
    "title": "Enum CharacterClassType | Catch.io Developer Reference",
    "keywords": "Enum CharacterClassType Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum CharacterClassType Fields Name Description Druid Last Necro Pyro"
  },
  "api/CatchIo.Runtime.Enums.CharacterDirectionState.html": {
    "href": "api/CatchIo.Runtime.Enums.CharacterDirectionState.html",
    "title": "Enum CharacterDirectionState | Catch.io Developer Reference",
    "keywords": "Enum CharacterDirectionState Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum CharacterDirectionState Fields Name Description E N NE NW S SE SW W"
  },
  "api/CatchIo.Runtime.Enums.CharacterMoveType.html": {
    "href": "api/CatchIo.Runtime.Enums.CharacterMoveType.html",
    "title": "Enum CharacterMoveType | Catch.io Developer Reference",
    "keywords": "Enum CharacterMoveType Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum CharacterMoveType Fields Name Description End None Run Sneak SneakStatic Spectate Static Walk"
  },
  "api/CatchIo.Runtime.Enums.DamageSfxType.html": {
    "href": "api/CatchIo.Runtime.Enums.DamageSfxType.html",
    "title": "Enum DamageSfxType | Catch.io Developer Reference",
    "keywords": "Enum DamageSfxType Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum DamageSfxType Fields Name Description BurnDamage TakeDamage"
  },
  "api/CatchIo.Runtime.Enums.GameLanguage.html": {
    "href": "api/CatchIo.Runtime.Enums.GameLanguage.html",
    "title": "Enum GameLanguage | Catch.io Developer Reference",
    "keywords": "Enum GameLanguage Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum GameLanguage Fields Name Description English"
  },
  "api/CatchIo.Runtime.Enums.GameModeType.html": {
    "href": "api/CatchIo.Runtime.Enums.GameModeType.html",
    "title": "Enum GameModeType | Catch.io Developer Reference",
    "keywords": "Enum GameModeType Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum GameModeType Fields Name Description DeathMatch Sandbox"
  },
  "api/CatchIo.Runtime.Enums.html": {
    "href": "api/CatchIo.Runtime.Enums.html",
    "title": "Namespace CatchIo.Runtime.Enums | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Enums Classes SendEventType Enums CharacterActionType CharacterClassType CharacterDirectionState CharacterMoveType DamageSfxType GameLanguage GameModeType RoomState SceneSwitchingState ScreenResolutionSettings"
  },
  "api/CatchIo.Runtime.Enums.RoomState.html": {
    "href": "api/CatchIo.Runtime.Enums.RoomState.html",
    "title": "Enum RoomState | Catch.io Developer Reference",
    "keywords": "Enum RoomState Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum RoomState : byte Fields Name Description Loading Playing Waiting"
  },
  "api/CatchIo.Runtime.Enums.SceneSwitchingState.html": {
    "href": "api/CatchIo.Runtime.Enums.SceneSwitchingState.html",
    "title": "Enum SceneSwitchingState | Catch.io Developer Reference",
    "keywords": "Enum SceneSwitchingState Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum SceneSwitchingState Fields Name Description Ended Ending Starting Stated"
  },
  "api/CatchIo.Runtime.Enums.ScreenResolutionSettings.html": {
    "href": "api/CatchIo.Runtime.Enums.ScreenResolutionSettings.html",
    "title": "Enum ScreenResolutionSettings | Catch.io Developer Reference",
    "keywords": "Enum ScreenResolutionSettings Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public enum ScreenResolutionSettings Fields Name Description English"
  },
  "api/CatchIo.Runtime.Enums.SendEventType.html": {
    "href": "api/CatchIo.Runtime.Enums.SendEventType.html",
    "title": "Class SendEventType | Catch.io Developer Reference",
    "keywords": "Class SendEventType Inheritance Object SendEventType Namespace : CatchIo.Runtime.Enums Assembly : cs.temp.dll.dll Syntax public class SendEventType Fields CharacterBeTrapped Declaration public const byte CharacterBeTrapped = 6 Field Value Type Description Byte CharacterDead Declaration public const byte CharacterDead = 3 Field Value Type Description Byte CharacterKill Declaration public const byte CharacterKill = 5 Field Value Type Description Byte CharacterRespawn Declaration public const byte CharacterRespawn = 2 Field Value Type Description Byte CharacterSpawn Declaration public const byte CharacterSpawn = 1 Field Value Type Description Byte CursedOneDeathEvent Declaration public const byte CursedOneDeathEvent = 31 Field Value Type Description Byte CursedOneSelectEvent Declaration public const byte CursedOneSelectEvent = 30 Field Value Type Description Byte DummyCharacterSpawn Declaration public const byte DummyCharacterSpawn = 4 Field Value Type Description Byte EnteredHidingStateEvent Declaration public const byte EnteredHidingStateEvent = 10 Field Value Type Description Byte ExitedHidingStateEvent Declaration public const byte ExitedHidingStateEvent = 11 Field Value Type Description Byte ItemRespawnEvent Declaration public const byte ItemRespawnEvent = 12 Field Value Type Description Byte NetworkTimerEndEvent Declaration public const byte NetworkTimerEndEvent = 51 Field Value Type Description Byte NetworkTimerStartEvent Declaration public const byte NetworkTimerStartEvent = 50 Field Value Type Description Byte NetworkTimerStopEvent Declaration public const byte NetworkTimerStopEvent = 52 Field Value Type Description Byte"
  },
  "api/CatchIo.Runtime.Environment.CharacterSpawner.html": {
    "href": "api/CatchIo.Runtime.Environment.CharacterSpawner.html",
    "title": "Class CharacterSpawner | Catch.io Developer Reference",
    "keywords": "Class CharacterSpawner Inheritance Object CharacterSpawner Implements IOnEventCallback Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax public class CharacterSpawner : MonoBehaviourPunCallbacks Methods AddSpawnPoint(CharacterSpawner.SpawnPoint) Declaration public void AddSpawnPoint(CharacterSpawner.SpawnPoint point) Parameters Type Name Description CharacterSpawner.SpawnPoint point GetRandomSpawnPoint() Declaration public Vector3 GetRandomSpawnPoint() Returns Type Description Vector3 GetRandomSpawnPointInCircle() Declaration public Vector3 GetRandomSpawnPointInCircle() Returns Type Description Vector3 OnEvent(EventData) Declaration public void OnEvent(EventData photonEvent) Parameters Type Name Description EventData photonEvent SpawnCharacterOnOffline() Declaration public void SpawnCharacterOnOffline() Implements IOnEventCallback"
  },
  "api/CatchIo.Runtime.Environment.CharacterSpawner.SpawnPoint.html": {
    "href": "api/CatchIo.Runtime.Environment.CharacterSpawner.SpawnPoint.html",
    "title": "Class CharacterSpawner.SpawnPoint | Catch.io Developer Reference",
    "keywords": "Class CharacterSpawner.SpawnPoint Inheritance Object CharacterSpawner.SpawnPoint Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax [Serializable] public class SpawnPoint Fields maxPlayerCount Declaration public int maxPlayerCount Field Value Type Description Int32 position Declaration public Vector3 position Field Value Type Description Vector3 radius Declaration public float radius Field Value Type Description Single used Declaration public bool used Field Value Type Description Boolean"
  },
  "api/CatchIo.Runtime.Environment.DamagableObject.html": {
    "href": "api/CatchIo.Runtime.Environment.DamagableObject.html",
    "title": "Class DamagableObject | Catch.io Developer Reference",
    "keywords": "Class DamagableObject Inheritance Object DamagableObject Implements IDamagable Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax public class DamagableObject : MonoBehaviour Fields HitboxTag Declaration public string HitboxTag Field Value Type Description String Properties DamagePercentage Declaration public float DamagePercentage { get; } Property Value Type Description Single DamageSfxType Declaration public DamageSfxType DamageSfxType { get; } Property Value Type Description DamageSfxType DamageVal Declaration public float DamageVal { get; } Property Value Type Description Single Knockback Declaration public float Knockback { get; } Property Value Type Description Single Methods OnHit(ICharacterHitable) Declaration public void OnHit(ICharacterHitable other) Parameters Type Name Description ICharacterHitable other Implements IDamagable"
  },
  "api/CatchIo.Runtime.Environment.HidingSpot.html": {
    "href": "api/CatchIo.Runtime.Environment.HidingSpot.html",
    "title": "Class HidingSpot | Catch.io Developer Reference",
    "keywords": "Class HidingSpot Inheritance Object HidingSpot Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax public class HidingSpot : MonoBehaviour Fields UseSpriteVertices Declaration public bool UseSpriteVertices Field Value Type Description Boolean Properties IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description Boolean PivotY Declaration public float PivotY { get; } Property Value Type Description Single Vertices Declaration public List<Vector2> Vertices { get; } Property Value Type Description List < Vector2 > Methods Disable() Declaration public void Disable() Enable() Declaration public void Enable() EnterCharacter(CharacterFacade) Declaration public void EnterCharacter(CharacterFacade character) Parameters Type Name Description CharacterFacade character ExitCharacter(CharacterFacade) Declaration public void ExitCharacter(CharacterFacade character) Parameters Type Name Description CharacterFacade character SetHidingSpot() Set hiding spot. ( add automatically sprite mask to child ) Declaration public void SetHidingSpot()"
  },
  "api/CatchIo.Runtime.Environment.html": {
    "href": "api/CatchIo.Runtime.Environment.html",
    "title": "Namespace CatchIo.Runtime.Environment | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Environment Classes CharacterSpawner CharacterSpawner.SpawnPoint DamagableObject HidingSpot ItemSpawner ItemSpawnerController ReadableTileSurface Structs TileSurface"
  },
  "api/CatchIo.Runtime.Environment.ItemSpawner.html": {
    "href": "api/CatchIo.Runtime.Environment.ItemSpawner.html",
    "title": "Class ItemSpawner | Catch.io Developer Reference",
    "keywords": "Class ItemSpawner Inheritance Object ItemSpawner Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax [Serializable] public class ItemSpawner : MonoBehaviour Properties ID Declaration public int ID { get; } Property Value Type Description Int32 Methods RespawnItem() Declaration public void RespawnItem() SetUp(Int32, GameObject, Int32) Declaration public void SetUp(int index, GameObject spawnItem, int spawnTime) Parameters Type Name Description Int32 index GameObject spawnItem Int32 spawnTime SpawnItem() Declaration public void SpawnItem()"
  },
  "api/CatchIo.Runtime.Environment.ItemSpawnerController.html": {
    "href": "api/CatchIo.Runtime.Environment.ItemSpawnerController.html",
    "title": "Class ItemSpawnerController | Catch.io Developer Reference",
    "keywords": "Class ItemSpawnerController Inheritance Object ItemSpawnerController Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax public class ItemSpawnerController : MonoBehaviourPunCallbacks Methods GetItemSpawner(Int32) Declaration public ItemSpawner GetItemSpawner(int id) Parameters Type Name Description Int32 id Returns Type Description ItemSpawner RegisterItemSpawner(GameObject, Vector3, Int32) Declaration public void RegisterItemSpawner(GameObject spawnItem, Vector3 spawnerPos, int spawnTime) Parameters Type Name Description GameObject spawnItem Vector3 spawnerPos Int32 spawnTime SpawnAllItems() Declaration public void SpawnAllItems()"
  },
  "api/CatchIo.Runtime.Environment.ReadableTileSurface.html": {
    "href": "api/CatchIo.Runtime.Environment.ReadableTileSurface.html",
    "title": "Class ReadableTileSurface | Catch.io Developer Reference",
    "keywords": "Class ReadableTileSurface Inheritance Object ReadableTileSurface Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax public class ReadableTileSurface : MonoBehaviour Properties SortingOrder Declaration public int SortingOrder { get; } Property Value Type Description Int32 SurfaceData Declaration public TileSurface SurfaceData { get; } Property Value Type Description TileSurface Methods GetSurfaceData(Vector2) Declaration public TileSurface? GetSurfaceData(Vector2 pos) Parameters Type Name Description Vector2 pos Returns Type Description Nullable < TileSurface > SetSurfaceData(TileSurface) Declaration public void SetSurfaceData(TileSurface tileSurface) Parameters Type Name Description TileSurface tileSurface"
  },
  "api/CatchIo.Runtime.Environment.TileSurface.html": {
    "href": "api/CatchIo.Runtime.Environment.TileSurface.html",
    "title": "Struct TileSurface | Catch.io Developer Reference",
    "keywords": "Struct TileSurface Namespace : CatchIo.Runtime.Environment Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TileSurface Constructors TileSurface(String, Single, Boolean) Declaration public TileSurface(string terrain, float volume, bool leavesMark) Parameters Type Name Description String terrain Single volume Boolean leavesMark Fields LeavesMark Declaration public bool LeavesMark Field Value Type Description Boolean Terrain Declaration public string Terrain Field Value Type Description String Volume Declaration public float Volume Field Value Type Description Single"
  },
  "api/CatchIo.Runtime.Interfaces.html": {
    "href": "api/CatchIo.Runtime.Interfaces.html",
    "title": "Namespace CatchIo.Runtime.Interfaces | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Interfaces Interfaces ICharacterHitable Interface for objects that can take damage. Object taking damage must implement the OnDamage function, and objects that gives damage should call that function and pass the damage value. IDamagable IDamage IDetectable IEffectPlayable Interface inherited by objects that contains a playable effect. ISceneMode ISurfaceObservable IThrowable Interface for throwable items."
  },
  "api/CatchIo.Runtime.Interfaces.ICharacterHitable.html": {
    "href": "api/CatchIo.Runtime.Interfaces.ICharacterHitable.html",
    "title": "Interface ICharacterHitable | Catch.io Developer Reference",
    "keywords": "Interface ICharacterHitable Interface for objects that can take damage. Object taking damage must implement the OnDamage function, and objects that gives damage should call that function and pass the damage value. Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface ICharacterHitable Methods OnHit(IDamage) Declaration void OnHit(IDamage damage) Parameters Type Name Description IDamage damage"
  },
  "api/CatchIo.Runtime.Interfaces.IDamagable.html": {
    "href": "api/CatchIo.Runtime.Interfaces.IDamagable.html",
    "title": "Interface IDamagable | Catch.io Developer Reference",
    "keywords": "Interface IDamagable Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IDamagable Properties DamageSfxType Declaration DamageSfxType DamageSfxType { get; } Property Value Type Description DamageSfxType DamageVal Declaration float DamageVal { get; } Property Value Type Description Single Methods OnHit(ICharacterHitable) Declaration void OnHit(ICharacterHitable other) Parameters Type Name Description ICharacterHitable other"
  },
  "api/CatchIo.Runtime.Interfaces.IDamage.html": {
    "href": "api/CatchIo.Runtime.Interfaces.IDamage.html",
    "title": "Interface IDamage | Catch.io Developer Reference",
    "keywords": "Interface IDamage Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IDamage Methods GetDamage(Single) Declaration float GetDamage(float remainHealth) Parameters Type Name Description Single remainHealth Returns Type Description Single GetKnockback() Declaration float GetKnockback() Returns Type Description Single GetOrigin() Declaration Vector2 GetOrigin() Returns Type Description Vector2 GetTakeDamageSfx() Declaration DamageSfxType GetTakeDamageSfx() Returns Type Description DamageSfxType SetOrigin(Vector2) Declaration void SetOrigin(Vector2 damageOrigin) Parameters Type Name Description Vector2 damageOrigin"
  },
  "api/CatchIo.Runtime.Interfaces.IDetectable.html": {
    "href": "api/CatchIo.Runtime.Interfaces.IDetectable.html",
    "title": "Interface IDetectable | Catch.io Developer Reference",
    "keywords": "Interface IDetectable Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IDetectable Properties IsDetected Declaration bool IsDetected { get; } Property Value Type Description Boolean Methods GetPosition() Declaration Vector2 GetPosition() Returns Type Description Vector2 OnDetected() Declaration void OnDetected() OnMissed() Declaration void OnMissed()"
  },
  "api/CatchIo.Runtime.Interfaces.IEffectPlayable.html": {
    "href": "api/CatchIo.Runtime.Interfaces.IEffectPlayable.html",
    "title": "Interface IEffectPlayable | Catch.io Developer Reference",
    "keywords": "Interface IEffectPlayable Interface inherited by objects that contains a playable effect. Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IEffectPlayable Methods EffectSequence(EffectBase) Declaration IEnumerator EffectSequence(EffectBase effect) Parameters Type Name Description EffectBase effect Returns Type Description IEnumerator ExecuteEffect(EffectBase) Declaration void ExecuteEffect(EffectBase effect) Parameters Type Name Description EffectBase effect OnEndEffect(EffectBase) Declaration void OnEndEffect(EffectBase effect) Parameters Type Name Description EffectBase effect ReverseEffect(EffectBase) Declaration void ReverseEffect(EffectBase effect) Parameters Type Name Description EffectBase effect"
  },
  "api/CatchIo.Runtime.Interfaces.ISceneMode.html": {
    "href": "api/CatchIo.Runtime.Interfaces.ISceneMode.html",
    "title": "Interface ISceneMode | Catch.io Developer Reference",
    "keywords": "Interface ISceneMode Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface ISceneMode Methods OnEnd() Declaration IEnumerator OnEnd() Returns Type Description IEnumerator OnStart(MonoBehaviour) Declaration IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator"
  },
  "api/CatchIo.Runtime.Interfaces.ISurfaceObservable.html": {
    "href": "api/CatchIo.Runtime.Interfaces.ISurfaceObservable.html",
    "title": "Interface ISurfaceObservable | Catch.io Developer Reference",
    "keywords": "Interface ISurfaceObservable Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface ISurfaceObservable Methods OnSurfaceChanged(Nullable<TileSurface>) Declaration void OnSurfaceChanged(TileSurface? newSurface) Parameters Type Name Description Nullable < TileSurface > newSurface"
  },
  "api/CatchIo.Runtime.Interfaces.IThrowable.html": {
    "href": "api/CatchIo.Runtime.Interfaces.IThrowable.html",
    "title": "Interface IThrowable | Catch.io Developer Reference",
    "keywords": "Interface IThrowable Interface for throwable items. Namespace : CatchIo.Runtime.Interfaces Assembly : cs.temp.dll.dll Syntax public interface IThrowable Methods OnBeforeThrow(Vector2, Vector2) Declaration void OnBeforeThrow(Vector2 startPos, Vector2 targetPos) Parameters Type Name Description Vector2 startPos Vector2 targetPos OnLanded() Declaration void OnLanded() OnThrow() Declaration void OnThrow() UpdateProjectilePath(Vector2, Vector2, Single) Declaration void UpdateProjectilePath(Vector2 startPos, Vector2 targetPos, float throwRadius) Parameters Type Name Description Vector2 startPos Vector2 targetPos Single throwRadius"
  },
  "api/CatchIo.Runtime.Items.ConsumableItem.html": {
    "href": "api/CatchIo.Runtime.Items.ConsumableItem.html",
    "title": "Class ConsumableItem | Catch.io Developer Reference",
    "keywords": "Class ConsumableItem Base class for consumable items. Inheritance Object Item ConsumableItem StaminaPotion Implements IPunInstantiateMagicCallback IDetectable Inherited Members Item.Owner Item.Sprite Item.ItemName Item._itemSfx Item.DisacrdTrajectoryData Item.DiscardTrajectory Item._isDiscarding Item._nameText Item.Start() Item.OnPickup(CharacterFacade) Item.OnDiscard(Vector2) Item.CanPickup() Item.OnPhotonInstantiate(PhotonMessageInfo) Item.IsDetected Item.OnDetected() Item.OnMissed() Item.GetPosition() Item.GetDetectableObject() Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public abstract class ConsumableItem : Item Methods Consume() Declaration public abstract void Consume() Implements IPunInstantiateMagicCallback IDetectable"
  },
  "api/CatchIo.Runtime.Items.html": {
    "href": "api/CatchIo.Runtime.Items.html",
    "title": "Namespace CatchIo.Runtime.Items | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Items Classes ConsumableItem Base class for consumable items. Item Base class for all items. ItemRebounder StaminaPotion This class recovers by HealVal the character when used by the player. Stone High-level implementation for the stone object. TeleportRune This class can teleport to item landed position with teleport dissolve effect. ThrowableItem Base class for all throwable items. If player throwed this object, it will be placed to mouse-position. TrapRune This class implements the Trap Rune functionality."
  },
  "api/CatchIo.Runtime.Items.Item.html": {
    "href": "api/CatchIo.Runtime.Items.Item.html",
    "title": "Class Item | Catch.io Developer Reference",
    "keywords": "Class Item Base class for all items. Inheritance Object Item ConsumableItem ThrowableItem Implements IPunInstantiateMagicCallback IDetectable Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public abstract class Item : MonoBehaviourPun Fields _isDiscarding Declaration protected bool _isDiscarding Field Value Type Description Boolean _itemSfx Declaration protected ItemSfx _itemSfx Field Value Type Description ItemSfx _nameText Declaration protected TMPro.TextMeshPro _nameText Field Value Type Description TMPro.TextMeshPro DisacrdTrajectoryData Declaration public TrajectoryData DisacrdTrajectoryData Field Value Type Description TrajectoryData DiscardTrajectory Declaration protected Trajectory DiscardTrajectory Field Value Type Description Trajectory ItemName Declaration public string ItemName Field Value Type Description String Properties IsDetected Declaration public bool IsDetected { get; protected set; } Property Value Type Description Boolean Owner Declaration public CharacterFacade Owner { get; protected set; } Property Value Type Description CharacterFacade Sprite Declaration public Sprite Sprite { get; } Property Value Type Description Sprite Methods CanPickup() Declaration public virtual bool CanPickup() Returns Type Description Boolean GetDetectableObject() Declaration public object GetDetectableObject() Returns Type Description Object GetPosition() Declaration public Vector2 GetPosition() Returns Type Description Vector2 OnDetected() Declaration public virtual void OnDetected() OnDiscard(Vector2) Declaration public virtual void OnDiscard(Vector2 discardingDirection) Parameters Type Name Description Vector2 discardingDirection OnMissed() Declaration public void OnMissed() OnPhotonInstantiate(PhotonMessageInfo) Declaration public void OnPhotonInstantiate(PhotonMessageInfo info) Parameters Type Name Description PhotonMessageInfo info OnPickup(CharacterFacade) Declaration public virtual void OnPickup(CharacterFacade owner) Parameters Type Name Description CharacterFacade owner Start() Declaration public virtual void Start() Implements IPunInstantiateMagicCallback IDetectable"
  },
  "api/CatchIo.Runtime.Items.ItemRebounder.html": {
    "href": "api/CatchIo.Runtime.Items.ItemRebounder.html",
    "title": "Class ItemRebounder | Catch.io Developer Reference",
    "keywords": "Class ItemRebounder Inheritance Object ItemRebounder Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public class ItemRebounder : MonoBehaviourPun Fields OnCompleted Declaration public Action OnCompleted Field Value Type Description Action ReboundTrajectoryData Declaration public TrajectoryData ReboundTrajectoryData Field Value Type Description TrajectoryData Methods CalculateReboundTrajectory(Vector2, Vector2) Declaration public void CalculateReboundTrajectory(Vector2 startPos, Vector2 targetPos) Parameters Type Name Description Vector2 startPos Vector2 targetPos Rebound() Declaration public void Rebound()"
  },
  "api/CatchIo.Runtime.Items.StaminaPotion.html": {
    "href": "api/CatchIo.Runtime.Items.StaminaPotion.html",
    "title": "Class StaminaPotion | Catch.io Developer Reference",
    "keywords": "Class StaminaPotion This class recovers by HealVal the character when used by the player. Inheritance Object Item ConsumableItem StaminaPotion Implements IPunInstantiateMagicCallback IDetectable Inherited Members Item.Owner Item.Sprite Item.ItemName Item._itemSfx Item.DisacrdTrajectoryData Item.DiscardTrajectory Item._isDiscarding Item._nameText Item.Start() Item.CanPickup() Item.OnPhotonInstantiate(PhotonMessageInfo) Item.IsDetected Item.OnDetected() Item.OnMissed() Item.GetPosition() Item.GetDetectableObject() Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public class StaminaPotion : ConsumableItem Properties HealVal Declaration public float HealVal { get; } Property Value Type Description Single Methods Consume() Declaration public override void Consume() Overrides ConsumableItem.Consume() OnDiscard(Vector2) Declaration public override void OnDiscard(Vector2 discardingDirection) Parameters Type Name Description Vector2 discardingDirection Overrides Item.OnDiscard(Vector2) OnPickup(CharacterFacade) Declaration public override void OnPickup(CharacterFacade owner) Parameters Type Name Description CharacterFacade owner Overrides Item.OnPickup(CharacterFacade) Implements IPunInstantiateMagicCallback IDetectable"
  },
  "api/CatchIo.Runtime.Items.Stone.html": {
    "href": "api/CatchIo.Runtime.Items.Stone.html",
    "title": "Class Stone | Catch.io Developer Reference",
    "keywords": "Class Stone High-level implementation for the stone object. Inheritance Object Item ThrowableItem Stone Implements IPunInstantiateMagicCallback IDetectable IThrowable IDamagable Inherited Members ThrowableItem.SpriteRenderer ThrowableItem.Rigid2D ThrowableItem.SurfaceEffectPlayer ThrowableItem.ThrewTime ThrowableItem.TimeToTarget ThrowableItem.IsOnFloor ThrowableItem.ThrowTrajectoryData ThrowableItem.PassedPeak ThrowableItem.ThrowTrajectory ThrowableItem.MovingCoroutine ThrowableItem.OnBeforeThrow(Vector2, Vector2) ThrowableItem.UpdateProjectilePath(Vector2, Vector2, Single) ThrowableItem.OnThrow() ThrowableItem.MovingTrajectoryPath() ThrowableItem.OnDetected() Item.Owner Item.Sprite Item.ItemName Item._itemSfx Item.DisacrdTrajectoryData Item.DiscardTrajectory Item._isDiscarding Item._nameText Item.OnPhotonInstantiate(PhotonMessageInfo) Item.IsDetected Item.OnMissed() Item.GetPosition() Item.GetDetectableObject() Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public class Stone : ThrowableItem Properties DamageSfxType Declaration public DamageSfxType DamageSfxType { get; } Property Value Type Description DamageSfxType DamageVal Declaration public float DamageVal { get; set; } Property Value Type Description Single KnockbackVal Declaration public float KnockbackVal { get; set; } Property Value Type Description Single Methods CanPickup() Declaration public override bool CanPickup() Returns Type Description Boolean Overrides ThrowableItem.CanPickup() OnDiscard(Vector2) Declaration public override void OnDiscard(Vector2 discardingDirection) Parameters Type Name Description Vector2 discardingDirection Overrides ThrowableItem.OnDiscard(Vector2) OnHit(ICharacterHitable) Declaration public void OnHit(ICharacterHitable other) Parameters Type Name Description ICharacterHitable other OnLanded() Declaration public override void OnLanded() Overrides ThrowableItem.OnLanded() OnPickup(CharacterFacade) Declaration public override void OnPickup(CharacterFacade owner) Parameters Type Name Description CharacterFacade owner Overrides ThrowableItem.OnPickup(CharacterFacade) Start() Declaration public override void Start() Overrides ThrowableItem.Start() Implements IPunInstantiateMagicCallback IDetectable IThrowable IDamagable"
  },
  "api/CatchIo.Runtime.Items.TeleportRune.html": {
    "href": "api/CatchIo.Runtime.Items.TeleportRune.html",
    "title": "Class TeleportRune | Catch.io Developer Reference",
    "keywords": "Class TeleportRune This class can teleport to item landed position with teleport dissolve effect. Inheritance Object Item ThrowableItem TeleportRune Implements IPunInstantiateMagicCallback IDetectable IThrowable IEffectPlayable Inherited Members ThrowableItem.SpriteRenderer ThrowableItem.Rigid2D ThrowableItem.SurfaceEffectPlayer ThrowableItem.ThrewTime ThrowableItem.TimeToTarget ThrowableItem.IsOnFloor ThrowableItem.ThrowTrajectoryData ThrowableItem.PassedPeak ThrowableItem.ThrowTrajectory ThrowableItem.MovingCoroutine ThrowableItem.UpdateProjectilePath(Vector2, Vector2, Single) ThrowableItem.MovingTrajectoryPath() ThrowableItem.OnDetected() Item.Owner Item.Sprite Item.ItemName Item._itemSfx Item.DisacrdTrajectoryData Item.DiscardTrajectory Item._isDiscarding Item._nameText Item.OnPhotonInstantiate(PhotonMessageInfo) Item.IsDetected Item.OnMissed() Item.GetPosition() Item.GetDetectableObject() Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public class TeleportRune : ThrowableItem Fields TeleportDissolve Declaration public DissolveEffect TeleportDissolve Field Value Type Description DissolveEffect Methods CanPickup() Declaration public override bool CanPickup() Returns Type Description Boolean Overrides ThrowableItem.CanPickup() EffectSequence(EffectBase) Declaration public IEnumerator EffectSequence(EffectBase effect) Parameters Type Name Description EffectBase effect Returns Type Description IEnumerator ExecuteEffect(EffectBase) Declaration public void ExecuteEffect(EffectBase effect) Parameters Type Name Description EffectBase effect OnBeforeThrow(Vector2, Vector2) Declaration public override void OnBeforeThrow(Vector2 startPos, Vector2 targetPos) Parameters Type Name Description Vector2 startPos Vector2 targetPos Overrides ThrowableItem.OnBeforeThrow(Vector2, Vector2) OnDiscard(Vector2) Declaration public override void OnDiscard(Vector2 discardingDirection) Parameters Type Name Description Vector2 discardingDirection Overrides ThrowableItem.OnDiscard(Vector2) OnEndEffect(EffectBase) Declaration public void OnEndEffect(EffectBase effect) Parameters Type Name Description EffectBase effect OnLanded() Declaration public override void OnLanded() Overrides ThrowableItem.OnLanded() OnPickup(CharacterFacade) Declaration public override void OnPickup(CharacterFacade owner) Parameters Type Name Description CharacterFacade owner Overrides ThrowableItem.OnPickup(CharacterFacade) OnThrow() Declaration public override void OnThrow() Overrides ThrowableItem.OnThrow() ReverseEffect(EffectBase) Declaration public void ReverseEffect(EffectBase effect) Parameters Type Name Description EffectBase effect Start() Declaration public override void Start() Overrides ThrowableItem.Start() Implements IPunInstantiateMagicCallback IDetectable IThrowable IEffectPlayable"
  },
  "api/CatchIo.Runtime.Items.ThrowableItem.html": {
    "href": "api/CatchIo.Runtime.Items.ThrowableItem.html",
    "title": "Class ThrowableItem | Catch.io Developer Reference",
    "keywords": "Class ThrowableItem Base class for all throwable items. If player throwed this object, it will be placed to mouse-position. Inheritance Object Item ThrowableItem Stone TeleportRune TrapRune Implements IPunInstantiateMagicCallback IDetectable IThrowable Inherited Members Item.Owner Item.Sprite Item.ItemName Item._itemSfx Item.DisacrdTrajectoryData Item.DiscardTrajectory Item._isDiscarding Item._nameText Item.OnPhotonInstantiate(PhotonMessageInfo) Item.IsDetected Item.OnMissed() Item.GetPosition() Item.GetDetectableObject() Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public abstract class ThrowableItem : Item Fields MovingCoroutine Declaration protected IEnumerator MovingCoroutine Field Value Type Description IEnumerator PassedPeak Declaration protected bool PassedPeak Field Value Type Description Boolean Rigid2D Declaration protected Rigidbody2D Rigid2D Field Value Type Description Rigidbody2D SpriteRenderer Declaration protected SpriteRenderer SpriteRenderer Field Value Type Description SpriteRenderer SurfaceEffectPlayer Declaration protected SurfaceEffectPlayer SurfaceEffectPlayer Field Value Type Description SurfaceEffectPlayer ThrewTime Declaration protected float ThrewTime Field Value Type Description Single ThrowTrajectoryData Declaration public TrajectoryData ThrowTrajectoryData Field Value Type Description TrajectoryData TimeToTarget Declaration protected float TimeToTarget Field Value Type Description Single Properties IsOnFloor Declaration public bool IsOnFloor { get; protected set; } Property Value Type Description Boolean ThrowTrajectory Declaration public Trajectory ThrowTrajectory { get; protected set; } Property Value Type Description Trajectory Methods CanPickup() Declaration public override bool CanPickup() Returns Type Description Boolean Overrides Item.CanPickup() MovingTrajectoryPath() Declaration protected virtual IEnumerator MovingTrajectoryPath() Returns Type Description IEnumerator OnBeforeThrow(Vector2, Vector2) Declaration public virtual void OnBeforeThrow(Vector2 startPos, Vector2 targetPos) Parameters Type Name Description Vector2 startPos Vector2 targetPos OnDetected() Declaration public override void OnDetected() Overrides Item.OnDetected() OnDiscard(Vector2) Declaration public override void OnDiscard(Vector2 discardingDirection) Parameters Type Name Description Vector2 discardingDirection Overrides Item.OnDiscard(Vector2) OnLanded() Declaration public virtual void OnLanded() OnPickup(CharacterFacade) Declaration public override void OnPickup(CharacterFacade owner) Parameters Type Name Description CharacterFacade owner Overrides Item.OnPickup(CharacterFacade) OnThrow() Declaration public virtual void OnThrow() Start() Declaration public override void Start() Overrides Item.Start() UpdateProjectilePath(Vector2, Vector2, Single) Declaration public virtual void UpdateProjectilePath(Vector2 thrownPos, Vector2 targetPos, float throwRadius) Parameters Type Name Description Vector2 thrownPos Vector2 targetPos Single throwRadius Implements IPunInstantiateMagicCallback IDetectable IThrowable"
  },
  "api/CatchIo.Runtime.Items.TrapRune.html": {
    "href": "api/CatchIo.Runtime.Items.TrapRune.html",
    "title": "Class TrapRune | Catch.io Developer Reference",
    "keywords": "Class TrapRune This class implements the Trap Rune functionality. Inheritance Object Item ThrowableItem TrapRune Implements IPunInstantiateMagicCallback IDetectable IThrowable Inherited Members ThrowableItem.SpriteRenderer ThrowableItem.Rigid2D ThrowableItem.SurfaceEffectPlayer ThrowableItem.ThrewTime ThrowableItem.TimeToTarget ThrowableItem.IsOnFloor ThrowableItem.ThrowTrajectoryData ThrowableItem.PassedPeak ThrowableItem.ThrowTrajectory ThrowableItem.MovingCoroutine ThrowableItem.Start() ThrowableItem.OnBeforeThrow(Vector2, Vector2) ThrowableItem.UpdateProjectilePath(Vector2, Vector2, Single) ThrowableItem.OnThrow() ThrowableItem.MovingTrajectoryPath() ThrowableItem.OnPickup(CharacterFacade) ThrowableItem.CanPickup() ThrowableItem.OnDetected() Item.Owner Item.Sprite Item.ItemName Item._itemSfx Item.DisacrdTrajectoryData Item.DiscardTrajectory Item._isDiscarding Item._nameText Item.OnPhotonInstantiate(PhotonMessageInfo) Item.IsDetected Item.OnMissed() Item.GetPosition() Item.GetDetectableObject() Namespace : CatchIo.Runtime.Items Assembly : cs.temp.dll.dll Syntax public class TrapRune : ThrowableItem Fields TrapObjectDuration Declaration public float TrapObjectDuration Field Value Type Description Single Methods OnDiscard(Vector2) Declaration public override void OnDiscard(Vector2 discardingDirection) Parameters Type Name Description Vector2 discardingDirection Overrides ThrowableItem.OnDiscard(Vector2) OnLanded() Declaration public override void OnLanded() Overrides ThrowableItem.OnLanded() Implements IPunInstantiateMagicCallback IDetectable IThrowable"
  },
  "api/CatchIo.Runtime.Managers.GameManager.html": {
    "href": "api/CatchIo.Runtime.Managers.GameManager.html",
    "title": "Class GameManager | Catch.io Developer Reference",
    "keywords": "Class GameManager Inheritance Object GameManager Namespace : CatchIo.Runtime.Managers Assembly : cs.temp.dll.dll Syntax public class GameManager : MonoBehaviour Properties CurrentGameSceneMode Declaration public static GameSceneMode CurrentGameSceneMode { get; } Property Value Type Description GameSceneMode LoadingScreenService Declaration public static LoadingScreenService LoadingScreenService { get; } Property Value Type Description LoadingScreenService NetworkService Declaration public static NetworkService NetworkService { get; } Property Value Type Description NetworkService SceneSwitchingService Declaration public static SceneSwitchingService SceneSwitchingService { get; } Property Value Type Description SceneSwitchingService ScreenSize Declaration public static Vector2 ScreenSize { get; } Property Value Type Description Vector2 Methods RegisterGameSceneMode(GameSceneMode) Declaration public static void RegisterGameSceneMode(GameSceneMode sceneMode) Parameters Type Name Description GameSceneMode sceneMode ReleaseGameSceneMode() Declaration public static void ReleaseGameSceneMode()"
  },
  "api/CatchIo.Runtime.Managers.html": {
    "href": "api/CatchIo.Runtime.Managers.html",
    "title": "Namespace CatchIo.Runtime.Managers | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Managers Classes GameManager"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.CharacterNickNameText.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.CharacterNickNameText.html",
    "title": "Class CharacterNickNameText | Catch.io Developer Reference",
    "keywords": "Class CharacterNickNameText Inheritance Object CharacterNickNameText Namespace : CatchIo.Runtime.Menu.GameOverlay.CharacterHUD Assembly : cs.temp.dll.dll Syntax public class CharacterNickNameText : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.HealthHUDMeter.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.HealthHUDMeter.html",
    "title": "Class HealthHUDMeter | Catch.io Developer Reference",
    "keywords": "Class HealthHUDMeter Inheritance Object HUDMeter HealthHUDMeter Inherited Members HUDMeter.LocalCharacter HUDMeter.Update() HUDMeter.MeterUpdate(Single) Namespace : CatchIo.Runtime.Menu.GameOverlay.CharacterHUD Assembly : cs.temp.dll.dll Syntax public class HealthHUDMeter : HUDMeter Methods OnDestroy() Declaration protected override void OnDestroy() Overrides HUDMeter.OnDestroy() Start() Declaration protected override void Start() Overrides HUDMeter.Start()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.HidingIndicator.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.HidingIndicator.html",
    "title": "Class HidingIndicator | Catch.io Developer Reference",
    "keywords": "Class HidingIndicator Inheritance Object HidingIndicator Namespace : CatchIo.Runtime.Menu.GameOverlay.CharacterHUD Assembly : cs.temp.dll.dll Syntax public class HidingIndicator : MonoBehaviour Methods DisableImage() Declaration public void DisableImage() PlayEyeClosingAnim() Declaration public void PlayEyeClosingAnim() PlayEyeOpeningAnim() Declaration public void PlayEyeOpeningAnim() TranslatePosition(Vector3) Declaration public void TranslatePosition(Vector3 characterScreenPos) Parameters Type Name Description Vector3 characterScreenPos"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.html",
    "title": "Namespace CatchIo.Runtime.Menu.GameOverlay.CharacterHUD | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.GameOverlay.CharacterHUD Classes CharacterNickNameText HealthHUDMeter HidingIndicator HUDMeter StaminaHUDMeter"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.HUDMeter.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.HUDMeter.html",
    "title": "Class HUDMeter | Catch.io Developer Reference",
    "keywords": "Class HUDMeter Inheritance Object HUDMeter HealthHUDMeter StaminaHUDMeter Namespace : CatchIo.Runtime.Menu.GameOverlay.CharacterHUD Assembly : cs.temp.dll.dll Syntax public class HUDMeter : MonoBehaviour Fields LocalCharacter Declaration protected CharacterFacade LocalCharacter Field Value Type Description CharacterFacade Methods MeterUpdate(Single) Declaration protected virtual void MeterUpdate(float newValue) Parameters Type Name Description Single newValue OnDestroy() Declaration protected virtual void OnDestroy() Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.StaminaHUDMeter.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.CharacterHUD.StaminaHUDMeter.html",
    "title": "Class StaminaHUDMeter | Catch.io Developer Reference",
    "keywords": "Class StaminaHUDMeter Inheritance Object HUDMeter StaminaHUDMeter Inherited Members HUDMeter.LocalCharacter HUDMeter.Update() Namespace : CatchIo.Runtime.Menu.GameOverlay.CharacterHUD Assembly : cs.temp.dll.dll Syntax public class StaminaHUDMeter : HUDMeter Methods MeterUpdate(Single) Declaration protected override void MeterUpdate(float newValue) Parameters Type Name Description Single newValue Overrides HUDMeter.MeterUpdate(Single) OnDestroy() Declaration protected override void OnDestroy() Overrides HUDMeter.OnDestroy() Start() Declaration protected override void Start() Overrides HUDMeter.Start()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.ExitSessionPopup.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.ExitSessionPopup.html",
    "title": "Class ExitSessionPopup | Catch.io Developer Reference",
    "keywords": "Class ExitSessionPopup Inheritance Object ExitSessionPopup Namespace : CatchIo.Runtime.Menu.GameOverlay Assembly : cs.temp.dll.dll Syntax public class ExitSessionPopup : BasePopup Methods OnDestroy() Declaration protected override void OnDestroy() Start() Declaration protected override void Start()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameModeHUD.GameTimerText.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameModeHUD.GameTimerText.html",
    "title": "Class GameTimerText | Catch.io Developer Reference",
    "keywords": "Class GameTimerText Inheritance Object GameTimerText Namespace : CatchIo.Runtime.Menu.GameOverlay.GameModeHUD Assembly : cs.temp.dll.dll Syntax public class GameTimerText : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameModeHUD.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameModeHUD.html",
    "title": "Namespace CatchIo.Runtime.Menu.GameOverlay.GameModeHUD | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.GameOverlay.GameModeHUD Classes GameTimerText PointText"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameModeHUD.PointText.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameModeHUD.PointText.html",
    "title": "Class PointText | Catch.io Developer Reference",
    "keywords": "Class PointText Inheritance Object PointText Namespace : CatchIo.Runtime.Menu.GameOverlay.GameModeHUD Assembly : cs.temp.dll.dll Syntax public class PointText : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.CursedOneWinnerText.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.CursedOneWinnerText.html",
    "title": "Class CursedOneWinnerText | Catch.io Developer Reference",
    "keywords": "Class CursedOneWinnerText Inheritance Object WinnerText CursedOneWinnerText Inherited Members WinnerText._text WinnerText._winner Namespace : CatchIo.Runtime.Menu.GameOverlay.GameOverHUD Assembly : cs.temp.dll.dll Syntax public class CursedOneWinnerText : WinnerText Methods DisplayWinner() Declaration protected override void DisplayWinner() Overrides WinnerText.DisplayWinner()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.DeathMatchWinnerText.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.DeathMatchWinnerText.html",
    "title": "Class DeathMatchWinnerText | Catch.io Developer Reference",
    "keywords": "Class DeathMatchWinnerText Inheritance Object WinnerText DeathMatchWinnerText Inherited Members WinnerText._text WinnerText._winner Namespace : CatchIo.Runtime.Menu.GameOverlay.GameOverHUD Assembly : cs.temp.dll.dll Syntax public class DeathMatchWinnerText : WinnerText Methods DisplayWinner() Declaration protected override void DisplayWinner() Overrides WinnerText.DisplayWinner()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.GameOverPopup.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.GameOverPopup.html",
    "title": "Class GameOverPopup | Catch.io Developer Reference",
    "keywords": "Class GameOverPopup Inheritance Object GameOverPopup Namespace : CatchIo.Runtime.Menu.GameOverlay.GameOverHUD Assembly : cs.temp.dll.dll Syntax public class GameOverPopup : BasePopup Methods OnDestroy() Declaration protected override void OnDestroy() Start() Declaration protected override void Start()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.html",
    "title": "Namespace CatchIo.Runtime.Menu.GameOverlay.GameOverHUD | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.GameOverlay.GameOverHUD Classes CursedOneWinnerText DeathMatchWinnerText GameOverPopup WinnerText"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.WinnerText.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.GameOverHUD.WinnerText.html",
    "title": "Class WinnerText | Catch.io Developer Reference",
    "keywords": "Class WinnerText Inheritance Object WinnerText CursedOneWinnerText DeathMatchWinnerText Namespace : CatchIo.Runtime.Menu.GameOverlay.GameOverHUD Assembly : cs.temp.dll.dll Syntax public abstract class WinnerText : MonoBehaviour Fields _text Declaration protected TMPro.TextMeshProUGUI _text Field Value Type Description TMPro.TextMeshProUGUI _winner Declaration protected GameModeWinner _winner Field Value Type Description GameModeWinner Methods DisplayWinner() Declaration protected abstract void DisplayWinner()"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.html",
    "title": "Namespace CatchIo.Runtime.Menu.GameOverlay | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.GameOverlay Classes ExitSessionPopup"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.html",
    "title": "Namespace CatchIo.Runtime.Menu.GameOverlay.InventoryHUD | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.GameOverlay.InventoryHUD Classes InventoryArrow InventoryHUD InventorySlotHUD"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.InventoryArrow.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.InventoryArrow.html",
    "title": "Class InventoryArrow | Catch.io Developer Reference",
    "keywords": "Class InventoryArrow Inheritance Object InventoryArrow Namespace : CatchIo.Runtime.Menu.GameOverlay.InventoryHUD Assembly : cs.temp.dll.dll Syntax public class InventoryArrow : MonoBehaviour Methods MoveHorizontally(Vector2) Declaration public void MoveHorizontally(Vector2 targetPos) Parameters Type Name Description Vector2 targetPos"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.InventoryHUD.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.InventoryHUD.html",
    "title": "Class InventoryHUD | Catch.io Developer Reference",
    "keywords": "Class InventoryHUD Inheritance Object InventoryHUD Namespace : CatchIo.Runtime.Menu.GameOverlay.InventoryHUD Assembly : cs.temp.dll.dll Syntax public class InventoryHUD : MonoBehaviour Fields SelectSlotSize Declaration public int SelectSlotSize Field Value Type Description Int32 Slots Declaration public Transform Slots Field Value Type Description Transform Methods AddItem(Int32, Item) Declaration public void AddItem(int index, Item newItem) Parameters Type Name Description Int32 index Item newItem ReleaseItem(Int32) Declaration public void ReleaseItem(int index) Parameters Type Name Description Int32 index RemoveItem(Int32) Declaration public void RemoveItem(int index) Parameters Type Name Description Int32 index SelectItem(ItemSlot) Declaration public void SelectItem(ItemSlot slot) Parameters Type Name Description ItemSlot slot"
  },
  "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.InventorySlotHUD.html": {
    "href": "api/CatchIo.Runtime.Menu.GameOverlay.InventoryHUD.InventorySlotHUD.html",
    "title": "Class InventorySlotHUD | Catch.io Developer Reference",
    "keywords": "Class InventorySlotHUD Inheritance Object InventorySlotHUD Namespace : CatchIo.Runtime.Menu.GameOverlay.InventoryHUD Assembly : cs.temp.dll.dll Syntax public class InventorySlotHUD : MonoBehaviour Methods GetLocalPosition() Declaration public Vector2 GetLocalPosition() Returns Type Description Vector2 ReleaseSlot() Declaration public void ReleaseSlot() SelectSlot() Declaration public void SelectSlot() SetSelectedSize(Int32) Declaration public void SetSelectedSize(int selectedSize) Parameters Type Name Description Int32 selectedSize SetSprite(Sprite) Declaration public void SetSprite(Sprite itemSprite) Parameters Type Name Description Sprite itemSprite"
  },
  "api/CatchIo.Runtime.Menu.UI.Button.ButtonClickBroadcaster.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Button.ButtonClickBroadcaster.html",
    "title": "Class ButtonClickBroadcaster | Catch.io Developer Reference",
    "keywords": "Class ButtonClickBroadcaster Inheritance Object ButtonClickBroadcaster Namespace : CatchIo.Runtime.Menu.UI.Button Assembly : cs.temp.dll.dll Syntax public class ButtonClickBroadcaster : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Button.GameStartButton.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Button.GameStartButton.html",
    "title": "Class GameStartButton | Catch.io Developer Reference",
    "keywords": "Class GameStartButton Inheritance Object GameStartButton Namespace : CatchIo.Runtime.Menu.UI.Button Assembly : cs.temp.dll.dll Syntax public class GameStartButton : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Button.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Button.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Button | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Button Classes ButtonClickBroadcaster GameStartButton ReadyButton"
  },
  "api/CatchIo.Runtime.Menu.UI.Button.ReadyButton.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Button.ReadyButton.html",
    "title": "Class ReadyButton | Catch.io Developer Reference",
    "keywords": "Class ReadyButton Inheritance Object ReadyButton Namespace : CatchIo.Runtime.Menu.UI.Button Assembly : cs.temp.dll.dll Syntax public class ReadyButton : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Checkbox.CheckboxBroadcaster.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Checkbox.CheckboxBroadcaster.html",
    "title": "Class CheckboxBroadcaster | Catch.io Developer Reference",
    "keywords": "Class CheckboxBroadcaster Inheritance Object CheckboxBroadcaster Namespace : CatchIo.Runtime.Menu.UI.Checkbox Assembly : cs.temp.dll.dll Syntax public class CheckboxBroadcaster : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Checkbox.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Checkbox.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Checkbox | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Checkbox Classes CheckboxBroadcaster"
  },
  "api/CatchIo.Runtime.Menu.UI.DisableByPlatform.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.DisableByPlatform.html",
    "title": "Class DisableByPlatform | Catch.io Developer Reference",
    "keywords": "Class DisableByPlatform Inheritance Object DisableByPlatform Namespace : CatchIo.Runtime.Menu.UI Assembly : cs.temp.dll.dll Syntax public class DisableByPlatform : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Dropdown.BaseDropdown.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Dropdown.BaseDropdown.html",
    "title": "Class BaseDropdown | Catch.io Developer Reference",
    "keywords": "Class BaseDropdown Inheritance Object BaseDropdown GameModeDropdown MapDropdown RegionDropdown Namespace : CatchIo.Runtime.Menu.UI.Dropdown Assembly : cs.temp.dll.dll Syntax public class BaseDropdown : MonoBehaviour Fields _currentIndex Declaration protected int _currentIndex Field Value Type Description Int32 _dropdown Declaration protected TMPro.TMP_Dropdown _dropdown Field Value Type Description TMPro.TMP_Dropdown Methods OnDestroy() Declaration protected virtual void OnDestroy() SetDefaultOption() Declaration public void SetDefaultOption() Start() Declaration protected virtual void Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Dropdown.GameModeDropdown.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Dropdown.GameModeDropdown.html",
    "title": "Class GameModeDropdown | Catch.io Developer Reference",
    "keywords": "Class GameModeDropdown Inheritance Object BaseDropdown GameModeDropdown Inherited Members BaseDropdown._dropdown BaseDropdown._currentIndex BaseDropdown.SetDefaultOption() Namespace : CatchIo.Runtime.Menu.UI.Dropdown Assembly : cs.temp.dll.dll Syntax public class GameModeDropdown : BaseDropdown Methods GetSelectedGameMode() Declaration public GameMode GetSelectedGameMode() Returns Type Description GameMode OnDestroy() Declaration protected override void OnDestroy() Overrides BaseDropdown.OnDestroy() Start() Declaration protected override void Start() Overrides BaseDropdown.Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Dropdown.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Dropdown.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Dropdown | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Dropdown Classes BaseDropdown GameModeDropdown MapDropdown RegionDropdown"
  },
  "api/CatchIo.Runtime.Menu.UI.Dropdown.MapDropdown.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Dropdown.MapDropdown.html",
    "title": "Class MapDropdown | Catch.io Developer Reference",
    "keywords": "Class MapDropdown Inheritance Object BaseDropdown MapDropdown Inherited Members BaseDropdown._dropdown BaseDropdown._currentIndex BaseDropdown.SetDefaultOption() Namespace : CatchIo.Runtime.Menu.UI.Dropdown Assembly : cs.temp.dll.dll Syntax public class MapDropdown : BaseDropdown Methods OnDestroy() Declaration protected override void OnDestroy() Overrides BaseDropdown.OnDestroy() Start() Declaration protected override void Start() Overrides BaseDropdown.Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Dropdown.RegionDropdown.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Dropdown.RegionDropdown.html",
    "title": "Class RegionDropdown | Catch.io Developer Reference",
    "keywords": "Class RegionDropdown Inheritance Object BaseDropdown RegionDropdown Inherited Members BaseDropdown._dropdown BaseDropdown._currentIndex BaseDropdown.SetDefaultOption() Namespace : CatchIo.Runtime.Menu.UI.Dropdown Assembly : cs.temp.dll.dll Syntax public class RegionDropdown : BaseDropdown Methods OnDestroy() Declaration protected override void OnDestroy() Overrides BaseDropdown.OnDestroy() Start() Declaration protected override void Start() Overrides BaseDropdown.Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Element.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Element.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Element | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Element Classes PlayerInfoElement RoomInfoElement"
  },
  "api/CatchIo.Runtime.Menu.UI.Element.PlayerInfoElement.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Element.PlayerInfoElement.html",
    "title": "Class PlayerInfoElement | Catch.io Developer Reference",
    "keywords": "Class PlayerInfoElement Inheritance Object PlayerInfoElement Namespace : CatchIo.Runtime.Menu.UI.Element Assembly : cs.temp.dll.dll Syntax public class PlayerInfoElement : MonoBehaviour Methods Initialize(Player) Declaration public void Initialize(Player player) Parameters Type Name Description Player player UpdateElement(ExitGames.Client.Photon.Hashtable) Declaration public void UpdateElement(ExitGames.Client.Photon.Hashtable changedProps) Parameters Type Name Description ExitGames.Client.Photon.Hashtable changedProps"
  },
  "api/CatchIo.Runtime.Menu.UI.Element.RoomInfoElement.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Element.RoomInfoElement.html",
    "title": "Class RoomInfoElement | Catch.io Developer Reference",
    "keywords": "Class RoomInfoElement Inheritance Object RoomInfoElement Namespace : CatchIo.Runtime.Menu.UI.Element Assembly : cs.temp.dll.dll Syntax public class RoomInfoElement : MonoBehaviour Methods Initialize(RoomData) Declaration public void Initialize(RoomData roomData) Parameters Type Name Description RoomData roomData"
  },
  "api/CatchIo.Runtime.Menu.UI.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI Classes DisableByPlatform"
  },
  "api/CatchIo.Runtime.Menu.UI.InputField.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.InputField.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.InputField | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.InputField Classes InputFieldTextBroadcaster"
  },
  "api/CatchIo.Runtime.Menu.UI.InputField.InputFieldTextBroadcaster.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.InputField.InputFieldTextBroadcaster.html",
    "title": "Class InputFieldTextBroadcaster | Catch.io Developer Reference",
    "keywords": "Class InputFieldTextBroadcaster Inheritance Object InputFieldTextBroadcaster Namespace : CatchIo.Runtime.Menu.UI.InputField Assembly : cs.temp.dll.dll Syntax public class InputFieldTextBroadcaster : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Popup.BasePopup.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Popup.BasePopup.html",
    "title": "Class BasePopup | Catch.io Developer Reference",
    "keywords": "Class BasePopup Inheritance Object BasePopup CreateSessionPopup JoinRoomPopup SettingsPopup Namespace : CatchIo.Runtime.Menu.UI.Popup Assembly : cs.temp.dll.dll Syntax public class BasePopup : MonoBehaviour Fields _popup Declaration protected UIPopup _popup Field Value Type Description UIPopup Methods Clear() Declaration protected virtual void Clear() InstantHide() Declaration protected void InstantHide() OnDestroy() Declaration protected virtual void OnDestroy() Start() Declaration protected virtual void Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Popup.CreateSessionPopup.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Popup.CreateSessionPopup.html",
    "title": "Class CreateSessionPopup | Catch.io Developer Reference",
    "keywords": "Class CreateSessionPopup Inheritance Object BasePopup CreateSessionPopup Inherited Members BasePopup._popup BasePopup.InstantHide() Namespace : CatchIo.Runtime.Menu.UI.Popup Assembly : cs.temp.dll.dll Syntax public class CreateSessionPopup : BasePopup Methods Clear() Declaration protected override void Clear() Overrides BasePopup.Clear() OnDestroy() Declaration protected override void OnDestroy() Overrides BasePopup.OnDestroy() Start() Declaration protected override void Start() Overrides BasePopup.Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Popup.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Popup.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Popup | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Popup Classes BasePopup CreateSessionPopup JoinRoomPopup SettingsPopup"
  },
  "api/CatchIo.Runtime.Menu.UI.Popup.JoinRoomPopup.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Popup.JoinRoomPopup.html",
    "title": "Class JoinRoomPopup | Catch.io Developer Reference",
    "keywords": "Class JoinRoomPopup Inheritance Object BasePopup JoinRoomPopup Inherited Members BasePopup._popup BasePopup.InstantHide() Namespace : CatchIo.Runtime.Menu.UI.Popup Assembly : cs.temp.dll.dll Syntax public class JoinRoomPopup : BasePopup Methods Clear() Declaration protected override void Clear() Overrides BasePopup.Clear() OnDestroy() Declaration protected override void OnDestroy() Overrides BasePopup.OnDestroy() Start() Declaration protected override void Start() Overrides BasePopup.Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Popup.SettingsPopup.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Popup.SettingsPopup.html",
    "title": "Class SettingsPopup | Catch.io Developer Reference",
    "keywords": "Class SettingsPopup Inheritance Object BasePopup SettingsPopup Inherited Members BasePopup._popup BasePopup.Clear() BasePopup.InstantHide() Namespace : CatchIo.Runtime.Menu.UI.Popup Assembly : cs.temp.dll.dll Syntax public class SettingsPopup : BasePopup Methods OnDestroy() Declaration protected override void OnDestroy() Overrides BasePopup.OnDestroy() Start() Declaration protected override void Start() Overrides BasePopup.Start()"
  },
  "api/CatchIo.Runtime.Menu.UI.Selector.CharacterClassSelector.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Selector.CharacterClassSelector.html",
    "title": "Class CharacterClassSelector | Catch.io Developer Reference",
    "keywords": "Class CharacterClassSelector Inheritance Object CharacterClassSelector Namespace : CatchIo.Runtime.Menu.UI.Selector Assembly : cs.temp.dll.dll Syntax public class CharacterClassSelector : MonoBehaviour Methods AnimateIntro() Declaration public void AnimateIntro() StopAnimationUI() Declaration public void StopAnimationUI()"
  },
  "api/CatchIo.Runtime.Menu.UI.Selector.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Selector.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Selector | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Selector Classes CharacterClassSelector"
  },
  "api/CatchIo.Runtime.Menu.UI.Slider.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Slider.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Slider | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Slider Classes InputSliderBroadcaster"
  },
  "api/CatchIo.Runtime.Menu.UI.Slider.InputSliderBroadcaster.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Slider.InputSliderBroadcaster.html",
    "title": "Class InputSliderBroadcaster | Catch.io Developer Reference",
    "keywords": "Class InputSliderBroadcaster Inheritance Object InputSliderBroadcaster Implements IPointerUpHandler Namespace : CatchIo.Runtime.Menu.UI.Slider Assembly : cs.temp.dll.dll Syntax public class InputSliderBroadcaster : MonoBehaviour Methods OnPointerUp(PointerEventData) Declaration public void OnPointerUp(PointerEventData eventData) Parameters Type Name Description PointerEventData eventData Implements IPointerUpHandler"
  },
  "api/CatchIo.Runtime.Menu.UI.Text.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Text.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Text | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Text Classes TextDisplayer TextDisplayerForSeconds"
  },
  "api/CatchIo.Runtime.Menu.UI.Text.TextDisplayer.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Text.TextDisplayer.html",
    "title": "Class TextDisplayer | Catch.io Developer Reference",
    "keywords": "Class TextDisplayer Inheritance Object TextDisplayer TextDisplayerForSeconds Namespace : CatchIo.Runtime.Menu.UI.Text Assembly : cs.temp.dll.dll Syntax public class TextDisplayer : MonoBehaviour Fields _text Declaration protected TMPro.TextMeshProUGUI _text Field Value Type Description TMPro.TextMeshProUGUI Methods SetText(String) Declaration protected virtual void SetText(string text) Parameters Type Name Description String text"
  },
  "api/CatchIo.Runtime.Menu.UI.Text.TextDisplayerForSeconds.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Text.TextDisplayerForSeconds.html",
    "title": "Class TextDisplayerForSeconds | Catch.io Developer Reference",
    "keywords": "Class TextDisplayerForSeconds Inheritance Object TextDisplayer TextDisplayerForSeconds Inherited Members TextDisplayer._text Namespace : CatchIo.Runtime.Menu.UI.Text Assembly : cs.temp.dll.dll Syntax public class TextDisplayerForSeconds : TextDisplayer Methods SetText(String) Declaration protected override void SetText(string text) Parameters Type Name Description String text Overrides TextDisplayer.SetText(String)"
  },
  "api/CatchIo.Runtime.Menu.UI.Updater.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Updater.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.Updater | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.Updater Classes PlayerListUpdater RoomListUpdater RoomTitleUpdater"
  },
  "api/CatchIo.Runtime.Menu.UI.Updater.PlayerListUpdater.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Updater.PlayerListUpdater.html",
    "title": "Class PlayerListUpdater | Catch.io Developer Reference",
    "keywords": "Class PlayerListUpdater Inheritance Object PlayerListUpdater Namespace : CatchIo.Runtime.Menu.UI.Updater Assembly : cs.temp.dll.dll Syntax public class PlayerListUpdater : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Updater.RoomListUpdater.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Updater.RoomListUpdater.html",
    "title": "Class RoomListUpdater | Catch.io Developer Reference",
    "keywords": "Class RoomListUpdater Inheritance Object RoomListUpdater Namespace : CatchIo.Runtime.Menu.UI.Updater Assembly : cs.temp.dll.dll Syntax public class RoomListUpdater : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.Updater.RoomTitleUpdater.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.Updater.RoomTitleUpdater.html",
    "title": "Class RoomTitleUpdater | Catch.io Developer Reference",
    "keywords": "Class RoomTitleUpdater Inheritance Object RoomTitleUpdater Namespace : CatchIo.Runtime.Menu.UI.Updater Assembly : cs.temp.dll.dll Syntax public class RoomTitleUpdater : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Menu.UI.View.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.View.html",
    "title": "Namespace CatchIo.Runtime.Menu.UI.View | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Menu.UI.View Classes RespawnView"
  },
  "api/CatchIo.Runtime.Menu.UI.View.RespawnView.html": {
    "href": "api/CatchIo.Runtime.Menu.UI.View.RespawnView.html",
    "title": "Class RespawnView | Catch.io Developer Reference",
    "keywords": "Class RespawnView Inheritance Object RespawnView Namespace : CatchIo.Runtime.Menu.UI.View Assembly : cs.temp.dll.dll Syntax public class RespawnView : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Network.CustomProperties.html": {
    "href": "api/CatchIo.Runtime.Network.CustomProperties.html",
    "title": "Namespace CatchIo.Runtime.Network.CustomProperties | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Network.CustomProperties Classes PlayerProperties RoomProperties"
  },
  "api/CatchIo.Runtime.Network.CustomProperties.PlayerProperties.html": {
    "href": "api/CatchIo.Runtime.Network.CustomProperties.PlayerProperties.html",
    "title": "Class PlayerProperties | Catch.io Developer Reference",
    "keywords": "Class PlayerProperties Inheritance Object PlayerProperties Namespace : CatchIo.Runtime.Network.CustomProperties Assembly : cs.temp.dll.dll Syntax public static class PlayerProperties Fields Alive Declaration public const string Alive = \"ale\" Field Value Type Description String BeTrappedCount Declaration public const string BeTrappedCount = \"btc\" Field Value Type Description String CharacterSpawned Declaration public const string CharacterSpawned = \"csp\" Field Value Type Description String Class Declaration public const string Class = \"cls\" Field Value Type Description String Color Declaration public const string Color = \"color\" Field Value Type Description String Cursed Declaration public const string Cursed = \"cursed\" Field Value Type Description String CursedCount Declaration public const string CursedCount = \"cursed_count\" Field Value Type Description String Deaths Declaration public const string Deaths = \"dth\" Field Value Type Description String GameSceneLoaded Declaration public const string GameSceneLoaded = \"gsl\" Field Value Type Description String Kills Declaration public const string Kills = \"kls\" Field Value Type Description String Point Declaration public const string Point = \"pnt\" Field Value Type Description String Ready Declaration public const string Ready = \"rdy\" Field Value Type Description String Skin Declaration public const string Skin = \"skn\" Field Value Type Description String TrapCount Declaration public const string TrapCount = \"tpc\" Field Value Type Description String"
  },
  "api/CatchIo.Runtime.Network.CustomProperties.RoomProperties.html": {
    "href": "api/CatchIo.Runtime.Network.CustomProperties.RoomProperties.html",
    "title": "Class RoomProperties | Catch.io Developer Reference",
    "keywords": "Class RoomProperties Inheritance Object RoomProperties Namespace : CatchIo.Runtime.Network.CustomProperties Assembly : cs.temp.dll.dll Syntax public static class RoomProperties Fields GameMode Declaration public const string GameMode = \"gm\" Field Value Type Description String GameModeTime Declaration public const string GameModeTime = \"tm\" Field Value Type Description String Map Declaration public const string Map = \"map\" Field Value Type Description String Ping Declaration public const string Ping = \"pg\" Field Value Type Description String RoomState Declaration public const string RoomState = \"rs\" Field Value Type Description String"
  },
  "api/CatchIo.Runtime.Network.html": {
    "href": "api/CatchIo.Runtime.Network.html",
    "title": "Namespace CatchIo.Runtime.Network | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Network Classes NetworkTimer RoomData"
  },
  "api/CatchIo.Runtime.Network.NetworkTimer.html": {
    "href": "api/CatchIo.Runtime.Network.NetworkTimer.html",
    "title": "Class NetworkTimer | Catch.io Developer Reference",
    "keywords": "Class NetworkTimer Inheritance Object NetworkTimer Namespace : CatchIo.Runtime.Network Assembly : cs.temp.dll.dll Syntax public class NetworkTimer : IOnEventCallback Fields OnFinished Declaration public UnityEvent OnFinished Field Value Type Description UnityEvent OnStarted Declaration public UnityEvent OnStarted Field Value Type Description UnityEvent Properties IsFinished Declaration public bool IsFinished { get; } Property Value Type Description Boolean IsStarted Declaration public bool IsStarted { get; } Property Value Type Description Boolean Methods GetRemainingTime() Declaration public int GetRemainingTime() Returns Type Description Int32 Initialize(String) Declaration public void Initialize(string key) Parameters Type Name Description String key OnEvent(EventData) Declaration public void OnEvent(EventData photonEvent) Parameters Type Name Description EventData photonEvent Release() Declaration public void Release() Reset() Declaration public void Reset() Start(Single) Declaration public void Start(float newTime) Parameters Type Name Description Single newTime Stop() Declaration public void Stop() Update(Single) Declaration public void Update(float networkTime) Parameters Type Name Description Single networkTime"
  },
  "api/CatchIo.Runtime.Network.RoomData.html": {
    "href": "api/CatchIo.Runtime.Network.RoomData.html",
    "title": "Class RoomData | Catch.io Developer Reference",
    "keywords": "Class RoomData Inheritance Object RoomData Namespace : CatchIo.Runtime.Network Assembly : cs.temp.dll.dll Syntax [Serializable] public class RoomData Constructors RoomData() Declaration public RoomData() RoomData(String) Declaration public RoomData(string roomName) Parameters Type Name Description String roomName Properties GameModeName Declaration public string GameModeName { get; set; } Property Value Type Description String MapName Declaration public string MapName { get; set; } Property Value Type Description String MaxPlayerCount Declaration public int MaxPlayerCount { get; set; } Property Value Type Description Int32 PlayerCount Declaration public int PlayerCount { get; set; } Property Value Type Description Int32 RoomName Declaration public string RoomName { get; set; } Property Value Type Description String State Declaration public RoomState State { get; set; } Property Value Type Description RoomState Methods Reset() Declaration public void Reset() UpdateRoomData(Hashtable) Declaration public void UpdateRoomData(Hashtable propertiesThatChanged) Parameters Type Name Description Hashtable propertiesThatChanged"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.CharacterBuff.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.CharacterBuff.html",
    "title": "Class CharacterBuff | Catch.io Developer Reference",
    "keywords": "Class CharacterBuff Inheritance Object CharacterBuff CharacterHealthBuff CharacterStaminaBuff Namespace : CatchIo.Runtime.ScriptableObjects.Character.Buff Assembly : cs.temp.dll.dll Syntax public abstract class CharacterBuff : ScriptableObject Methods Assign(CharacterStatus) Declaration public abstract void Assign(CharacterStatus status) Parameters Type Name Description CharacterStatus status Remove(CharacterStatus) Declaration public abstract void Remove(CharacterStatus status) Parameters Type Name Description CharacterStatus status"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.CharacterHealthBuff.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.CharacterHealthBuff.html",
    "title": "Class CharacterHealthBuff | Catch.io Developer Reference",
    "keywords": "Class CharacterHealthBuff Inheritance Object CharacterBuff CharacterHealthBuff Namespace : CatchIo.Runtime.ScriptableObjects.Character.Buff Assembly : cs.temp.dll.dll Syntax public class CharacterHealthBuff : CharacterBuff Fields HealthAmount Declaration public float HealthAmount Field Value Type Description Single Methods Assign(CharacterStatus) Declaration public override void Assign(CharacterStatus status) Parameters Type Name Description CharacterStatus status Overrides CharacterBuff.Assign(CharacterStatus) Remove(CharacterStatus) Declaration public override void Remove(CharacterStatus status) Parameters Type Name Description CharacterStatus status Overrides CharacterBuff.Remove(CharacterStatus)"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.CharacterStaminaBuff.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.CharacterStaminaBuff.html",
    "title": "Class CharacterStaminaBuff | Catch.io Developer Reference",
    "keywords": "Class CharacterStaminaBuff Inheritance Object CharacterBuff CharacterStaminaBuff Namespace : CatchIo.Runtime.ScriptableObjects.Character.Buff Assembly : cs.temp.dll.dll Syntax public class CharacterStaminaBuff : CharacterBuff Fields StaminaAmount Declaration public float StaminaAmount Field Value Type Description Single Methods Assign(CharacterStatus) Declaration public override void Assign(CharacterStatus status) Parameters Type Name Description CharacterStatus status Overrides CharacterBuff.Assign(CharacterStatus) Remove(CharacterStatus) Declaration public override void Remove(CharacterStatus status) Parameters Type Name Description CharacterStatus status Overrides CharacterBuff.Remove(CharacterStatus)"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Character.Buff.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Character.Buff | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Character.Buff Classes CharacterBuff CharacterHealthBuff CharacterStaminaBuff"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Character.CharacterStatus.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Character.CharacterStatus.html",
    "title": "Class CharacterStatus | Catch.io Developer Reference",
    "keywords": "Class CharacterStatus Inheritance Object CharacterStatus Namespace : CatchIo.Runtime.ScriptableObjects.Character Assembly : cs.temp.dll.dll Syntax public class CharacterStatus : ScriptableObject Fields AttackArea Declaration public float AttackArea Field Value Type Description Single AttackRange Declaration public float AttackRange Field Value Type Description Single AttackStaminaCost Declaration public float AttackStaminaCost Field Value Type Description Single BackstabMeleeDamage Declaration public float BackstabMeleeDamage Field Value Type Description Single ClassName Declaration public string ClassName Field Value Type Description String CurrentActionType Declaration public CharacterActionType CurrentActionType Field Value Type Description CharacterActionType CurrentLookDirectionState Declaration public CharacterDirectionState CurrentLookDirectionState Field Value Type Description CharacterDirectionState CurrentMoveDirection Declaration public Vector2 CurrentMoveDirection Field Value Type Description Vector2 CurrentMoveType Declaration public CharacterMoveType CurrentMoveType Field Value Type Description CharacterMoveType EnteredHidingSpot Declaration public bool EnteredHidingSpot Field Value Type Description Boolean HoldingItem Declaration public Item HoldingItem Field Value Type Description Item IsAiming Declaration public bool IsAiming Field Value Type Description Boolean IsHiding Declaration public bool IsHiding Field Value Type Description Boolean MaxHealth Declaration public float MaxHealth Field Value Type Description Single MaxStamina Declaration public float MaxStamina Field Value Type Description Single MaxThrowingDistance Declaration public float MaxThrowingDistance Field Value Type Description Single MeleeDamage Declaration public float MeleeDamage Field Value Type Description Single MeleeKnockback Declaration public float MeleeKnockback Field Value Type Description Single NormalizedViewVector Declaration public Vector2 NormalizedViewVector Field Value Type Description Vector2 OnHealthChanged Declaration public UnityEvent<float> OnHealthChanged Field Value Type Description UnityEvent < Single > OnStaminaChanged Declaration public UnityEvent<float> OnStaminaChanged Field Value Type Description UnityEvent < Single > RunningStaminaCost Declaration public float RunningStaminaCost Field Value Type Description Single RunSpeed Declaration public float RunSpeed Field Value Type Description Single SkinName Declaration public string SkinName Field Value Type Description String SneakSpeed Declaration public float SneakSpeed Field Value Type Description Single SpectateSpeed Declaration public float SpectateSpeed Field Value Type Description Single StandingStaminaRecoveryPerSec Declaration public float StandingStaminaRecoveryPerSec Field Value Type Description Single ThrowingStaminaCost Declaration public float ThrowingStaminaCost Field Value Type Description Single WaitingTimeForStaminaRecovery Declaration public float WaitingTimeForStaminaRecovery Field Value Type Description Single WaitingTimeForStaminaRecoveryFromZero Declaration public float WaitingTimeForStaminaRecoveryFromZero Field Value Type Description Single WalkingStaminaRecoveryPerSec Declaration public float WalkingStaminaRecoveryPerSec Field Value Type Description Single WalkSpeed Declaration public float WalkSpeed Field Value Type Description Single Properties CurrentLookDirection Declaration public Vector2 CurrentLookDirection { get; } Property Value Type Description Vector2 CurrentViewAngle Declaration public int CurrentViewAngle { get; set; } Property Value Type Description Int32 Detected Declaration public bool Detected { get; } Property Value Type Description Boolean Forward Declaration public Vector2 Forward { get; } Property Value Type Description Vector2 Health Declaration public float Health { get; set; } Property Value Type Description Single IdentityColor Declaration public Color IdentityColor { get; set; } Property Value Type Description Color IsCursed Declaration public bool IsCursed { get; } Property Value Type Description Boolean IsDead Declaration public bool IsDead { get; } Property Value Type Description Boolean IsLowStamina Declaration public bool IsLowStamina { get; } Property Value Type Description Boolean IsRecoveringStamina Declaration public bool IsRecoveringStamina { get; } Property Value Type Description Boolean IsSneaking Declaration public bool IsSneaking { get; } Property Value Type Description Boolean IsSpectated Declaration public bool IsSpectated { get; } Property Value Type Description Boolean Name Declaration public string Name { get; set; } Property Value Type Description String Stamina Declaration public float Stamina { get; set; } Property Value Type Description Single Methods BeCursed() Declaration public void BeCursed() CanRecoverStamina(Single) Check if the player can recover its stamina based on the given time to start checking. Because our stamina recovery logic relies on time passing, this function will check the delta between the required time for start recovery and the current time. Declaration public bool CanRecoverStamina(float startTime) Parameters Type Name Description Single startTime The time when the previous condition has started (ex: staying still) Returns Type Description Boolean Can the player recover their stamina LiftCursed() Declaration public void LiftCursed() RecoverStamina(Single) Recovers the player's stamina with the given amount. We use the Clamp function so the stamina will not exceed the max value. Declaration public void RecoverStamina(float staminaRecoveryAmount) Parameters Type Name Description Single staminaRecoveryAmount The amount of stamina to recover every second Reset() Declaration public void Reset() UseStamina(Single) Declaration public bool UseStamina(float staminaCost) Parameters Type Name Description Single staminaCost Returns Type Description Boolean UseStaminaPerSec(Single) Declaration public void UseStaminaPerSec(float decreaseStaminaPerSec) Parameters Type Name Description Single decreaseStaminaPerSec"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Character.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Character.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Character | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Character Classes CharacterStatus"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Effects.CursedOneEffect.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Effects.CursedOneEffect.html",
    "title": "Class CursedOneEffect | Catch.io Developer Reference",
    "keywords": "Class CursedOneEffect Inheritance Object EffectBase CursedOneEffect Inherited Members EffectBase.EffectSource EffectBase.DefaultMaterial EffectBase.Duration EffectBase.EffectPlayable EffectBase.TargetRenderer Namespace : CatchIo.Runtime.ScriptableObjects.Effects Assembly : cs.temp.dll.dll Syntax public class CursedOneEffect : EffectBase Methods EffectExecutor() Declaration public override IEnumerator EffectExecutor() Returns Type Description IEnumerator Overrides EffectBase.EffectExecutor() EffectReverser() Declaration public override IEnumerator EffectReverser() Returns Type Description IEnumerator Overrides EffectBase.EffectReverser() Play(IEffectPlayable, Renderer) Declaration public override void Play(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Overrides EffectBase.Play(IEffectPlayable, Renderer) Reverse(IEffectPlayable, Renderer) Declaration public override void Reverse(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Overrides EffectBase.Reverse(IEffectPlayable, Renderer)"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Effects.DamageEffect.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Effects.DamageEffect.html",
    "title": "Class DamageEffect | Catch.io Developer Reference",
    "keywords": "Class DamageEffect Inheritance Object EffectBase DamageEffect Inherited Members EffectBase.EffectSource EffectBase.DefaultMaterial EffectBase.Duration EffectBase.EffectPlayable EffectBase.TargetRenderer EffectBase.Reverse(IEffectPlayable, Renderer) Namespace : CatchIo.Runtime.ScriptableObjects.Effects Assembly : cs.temp.dll.dll Syntax public class DamageEffect : EffectBase Methods EffectExecutor() Declaration public override IEnumerator EffectExecutor() Returns Type Description IEnumerator Overrides EffectBase.EffectExecutor() EffectReverser() Declaration public override IEnumerator EffectReverser() Returns Type Description IEnumerator Overrides EffectBase.EffectReverser() Play(IEffectPlayable, Renderer) Declaration public override void Play(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Overrides EffectBase.Play(IEffectPlayable, Renderer)"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Effects.DisappearEffect.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Effects.DisappearEffect.html",
    "title": "Class DisappearEffect | Catch.io Developer Reference",
    "keywords": "Class DisappearEffect Inheritance Object EffectBase DisappearEffect Inherited Members EffectBase.EffectSource EffectBase.DefaultMaterial EffectBase.Duration EffectBase.EffectPlayable EffectBase.TargetRenderer Namespace : CatchIo.Runtime.ScriptableObjects.Effects Assembly : cs.temp.dll.dll Syntax public class DisappearEffect : EffectBase Fields FinalAlphaValue Declaration public float FinalAlphaValue Field Value Type Description Single Properties Faded Declaration public bool Faded { get; } Property Value Type Description Boolean IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description Boolean IsReversing Declaration public bool IsReversing { get; } Property Value Type Description Boolean Methods Cancel() Declaration public void Cancel() EffectExecutor() Declaration public override IEnumerator EffectExecutor() Returns Type Description IEnumerator Overrides EffectBase.EffectExecutor() EffectReverser() Declaration public override IEnumerator EffectReverser() Returns Type Description IEnumerator Overrides EffectBase.EffectReverser() Play(IEffectPlayable, Renderer) Declaration public override void Play(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Overrides EffectBase.Play(IEffectPlayable, Renderer) PlayImmediately(Renderer) Declaration public void PlayImmediately(Renderer renderer) Parameters Type Name Description Renderer renderer Reset() Declaration public void Reset() Reverse(IEffectPlayable, Renderer) Declaration public override void Reverse(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Overrides EffectBase.Reverse(IEffectPlayable, Renderer) ReverseImmediately() Declaration public void ReverseImmediately() ReverseImmediately(Renderer) Declaration public void ReverseImmediately(Renderer renderer) Parameters Type Name Description Renderer renderer"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Effects.DissolveEffect.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Effects.DissolveEffect.html",
    "title": "Class DissolveEffect | Catch.io Developer Reference",
    "keywords": "Class DissolveEffect Inheritance Object EffectBase DissolveEffect Inherited Members EffectBase.EffectSource EffectBase.DefaultMaterial EffectBase.Duration EffectBase.EffectPlayable EffectBase.TargetRenderer EffectBase.Reverse(IEffectPlayable, Renderer) Namespace : CatchIo.Runtime.ScriptableObjects.Effects Assembly : cs.temp.dll.dll Syntax public class DissolveEffect : EffectBase Methods EffectExecutor() Declaration public override IEnumerator EffectExecutor() Returns Type Description IEnumerator Overrides EffectBase.EffectExecutor() EffectReverser() Declaration public override IEnumerator EffectReverser() Returns Type Description IEnumerator Overrides EffectBase.EffectReverser() Play(IEffectPlayable, Renderer) Declaration public override void Play(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Overrides EffectBase.Play(IEffectPlayable, Renderer)"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Effects.EffectBase.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Effects.EffectBase.html",
    "title": "Class EffectBase | Catch.io Developer Reference",
    "keywords": "Class EffectBase Base scriptable object related to effect materials. Inheritance Object EffectBase CursedOneEffect DamageEffect DisappearEffect DissolveEffect Namespace : CatchIo.Runtime.ScriptableObjects.Effects Assembly : cs.temp.dll.dll Syntax public abstract class EffectBase : ScriptableObject Fields DefaultMaterial Declaration public Material DefaultMaterial Field Value Type Description Material Duration Declaration public float Duration Field Value Type Description Single EffectPlayable Declaration protected IEffectPlayable EffectPlayable Field Value Type Description IEffectPlayable EffectSource Declaration public Material EffectSource Field Value Type Description Material TargetRenderer Declaration protected Renderer TargetRenderer Field Value Type Description Renderer Methods EffectExecutor() Declaration public abstract IEnumerator EffectExecutor() Returns Type Description IEnumerator EffectReverser() Declaration public abstract IEnumerator EffectReverser() Returns Type Description IEnumerator Play(IEffectPlayable, Renderer) Declaration public virtual void Play(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer Reverse(IEffectPlayable, Renderer) Declaration public virtual void Reverse(IEffectPlayable effectPlayable, Renderer renderer) Parameters Type Name Description IEffectPlayable effectPlayable Renderer renderer"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Effects.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Effects.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Effects | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Effects Classes CursedOneEffect DamageEffect DisappearEffect DissolveEffect EffectBase Base scriptable object related to effect materials."
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.BaseEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.BaseEventChannel.html",
    "title": "Class BaseEventChannel | Catch.io Developer Reference",
    "keywords": "Class BaseEventChannel Inheritance Object BaseEventChannel BoolEventChannel FloatEventChannel GameModeWinnerEventChannel HidingSpotEventChannel IntEventChannel PlayerEventChannel RoomDataEventChannel StringEventChannel VoidEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public abstract class BaseEventChannel : DescriptionScriptableObject"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.BoolEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.BoolEventChannel.html",
    "title": "Class BoolEventChannel | Catch.io Developer Reference",
    "keywords": "Class BoolEventChannel Inheritance Object BaseEventChannel BoolEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class BoolEventChannel : BaseEventChannel Methods AddListener(UnityAction<Boolean>) Declaration public void AddListener(UnityAction<bool> listener) Parameters Type Name Description UnityAction < Boolean > listener RaiseEvent(Boolean) Declaration public void RaiseEvent(bool value) Parameters Type Name Description Boolean value RemoveListener(UnityAction<Boolean>) Declaration public void RemoveListener(UnityAction<bool> listener) Parameters Type Name Description UnityAction < Boolean > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightEnabledEventParam.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightEnabledEventParam.html",
    "title": "Class CharacterLightEvent.CharacterLightEnabledEventParam | Catch.io Developer Reference",
    "keywords": "Class CharacterLightEvent.CharacterLightEnabledEventParam This class is a parameter to enable Character Lighting. Inheritance Object CharacterLightEvent.CharacterLightEventParam CharacterLightEvent.CharacterLightEnabledEventParam Inherited Members CharacterLightEvent.CharacterLightEventParam.Type Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class CharacterLightEnabledEventParam : CharacterLightEvent.CharacterLightEventParam Constructors CharacterLightEnabledEventParam(CharacterLightEvent.CharacterLightType, Boolean) Declaration public CharacterLightEnabledEventParam(CharacterLightEvent.CharacterLightType type, bool enabled) Parameters Type Name Description CharacterLightEvent.CharacterLightType type Boolean enabled Properties Enabled Declaration public bool Enabled { get; } Property Value Type Description Boolean"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightEventParam.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightEventParam.html",
    "title": "Class CharacterLightEvent.CharacterLightEventParam | Catch.io Developer Reference",
    "keywords": "Class CharacterLightEvent.CharacterLightEventParam This class is a parameter to send with CharacterLightEvent. Inheritance Object CharacterLightEvent.CharacterLightEventParam CharacterLightEvent.CharacterLightEnabledEventParam CharacterLightEvent.CharacterLightResizingEventParam CharacterLightEvent.CharacterResetLightEvent Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class CharacterLightEventParam Constructors CharacterLightEventParam(CharacterLightEvent.CharacterLightType) Declaration public CharacterLightEventParam(CharacterLightEvent.CharacterLightType type) Parameters Type Name Description CharacterLightEvent.CharacterLightType type Properties Type Declaration public CharacterLightEvent.CharacterLightType Type { get; } Property Value Type Description CharacterLightEvent.CharacterLightType"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightResizingEventParam.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightResizingEventParam.html",
    "title": "Class CharacterLightEvent.CharacterLightResizingEventParam | Catch.io Developer Reference",
    "keywords": "Class CharacterLightEvent.CharacterLightResizingEventParam This class is a parameter to resize the Area light size or Fov light angle. Inheritance Object CharacterLightEvent.CharacterLightEventParam CharacterLightEvent.CharacterLightResizingEventParam Inherited Members CharacterLightEvent.CharacterLightEventParam.Type Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class CharacterLightResizingEventParam : CharacterLightEvent.CharacterLightEventParam Constructors CharacterLightResizingEventParam(CharacterLightEvent.CharacterLightType, Nullable<Single>, Nullable<Single>) Declaration public CharacterLightResizingEventParam(CharacterLightEvent.CharacterLightType type, float? angle = null, float? size = null) Parameters Type Name Description CharacterLightEvent.CharacterLightType type Nullable < Single > angle Nullable < Single > size Properties Angle Declaration public float? Angle { get; } Property Value Type Description Nullable < Single > Size Declaration public float? Size { get; } Property Value Type Description Nullable < Single >"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightType.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterLightType.html",
    "title": "Enum CharacterLightEvent.CharacterLightType | Catch.io Developer Reference",
    "keywords": "Enum CharacterLightEvent.CharacterLightType Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public enum CharacterLightType Fields Name Description Area FOV"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterResetLightEvent.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.CharacterResetLightEvent.html",
    "title": "Class CharacterLightEvent.CharacterResetLightEvent | Catch.io Developer Reference",
    "keywords": "Class CharacterLightEvent.CharacterResetLightEvent This class is a parameter to reset the character light. Inheritance Object CharacterLightEvent.CharacterLightEventParam CharacterLightEvent.CharacterResetLightEvent Inherited Members CharacterLightEvent.CharacterLightEventParam.Type Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class CharacterResetLightEvent : CharacterLightEvent.CharacterLightEventParam Constructors CharacterResetLightEvent(CharacterLightEvent.CharacterLightType) Declaration public CharacterResetLightEvent(CharacterLightEvent.CharacterLightType type) Parameters Type Name Description CharacterLightEvent.CharacterLightType type"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.CharacterLightEvent.html",
    "title": "Class CharacterLightEvent | Catch.io Developer Reference",
    "keywords": "Class CharacterLightEvent Inheritance Object CharacterLightEvent Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class CharacterLightEvent : ScriptableObject Methods AddListener(UnityAction<List<CharacterLightEvent.CharacterLightEventParam>>) Declaration public void AddListener(UnityAction<List<CharacterLightEvent.CharacterLightEventParam>> listener) Parameters Type Name Description UnityAction < List < CharacterLightEvent.CharacterLightEventParam >> listener RaiseEvent(List<CharacterLightEvent.CharacterLightEventParam>) Declaration public void RaiseEvent(List<CharacterLightEvent.CharacterLightEventParam> value) Parameters Type Name Description List < CharacterLightEvent.CharacterLightEventParam > value RemoveListener(UnityAction<List<CharacterLightEvent.CharacterLightEventParam>>) Declaration public void RemoveListener(UnityAction<List<CharacterLightEvent.CharacterLightEventParam>> listener) Parameters Type Name Description UnityAction < List < CharacterLightEvent.CharacterLightEventParam >> listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.FloatEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.FloatEventChannel.html",
    "title": "Class FloatEventChannel | Catch.io Developer Reference",
    "keywords": "Class FloatEventChannel Inheritance Object BaseEventChannel FloatEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class FloatEventChannel : BaseEventChannel Methods AddListener(UnityAction<Single>) Declaration public void AddListener(UnityAction<float> listener) Parameters Type Name Description UnityAction < Single > listener RaiseEvent(Single) Declaration public void RaiseEvent(float value) Parameters Type Name Description Single value RemoveListener(UnityAction<Single>) Declaration public void RemoveListener(UnityAction<float> listener) Parameters Type Name Description UnityAction < Single > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.GameModeWinnerEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.GameModeWinnerEventChannel.html",
    "title": "Class GameModeWinnerEventChannel | Catch.io Developer Reference",
    "keywords": "Class GameModeWinnerEventChannel Inheritance Object BaseEventChannel GameModeWinnerEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class GameModeWinnerEventChannel : BaseEventChannel Methods AddListener(UnityAction<GameModeWinner>) Declaration public void AddListener(UnityAction<GameModeWinner> listener) Parameters Type Name Description UnityAction < GameModeWinner > listener RaiseEvent(GameModeWinner) Declaration public void RaiseEvent(GameModeWinner value) Parameters Type Name Description GameModeWinner value RemoveListener(UnityAction<GameModeWinner>) Declaration public void RemoveListener(UnityAction<GameModeWinner> listener) Parameters Type Name Description UnityAction < GameModeWinner > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.HidingSpotEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.HidingSpotEventChannel.html",
    "title": "Class HidingSpotEventChannel | Catch.io Developer Reference",
    "keywords": "Class HidingSpotEventChannel Inheritance Object BaseEventChannel HidingSpotEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class HidingSpotEventChannel : BaseEventChannel Methods AddListener(UnityAction<HidingSpot>) Declaration public void AddListener(UnityAction<HidingSpot> listener) Parameters Type Name Description UnityAction < HidingSpot > listener RaiseEvent(HidingSpot) Declaration public void RaiseEvent(HidingSpot hidingSpot) Parameters Type Name Description HidingSpot hidingSpot RemoveListener(UnityAction<HidingSpot>) Declaration public void RemoveListener(UnityAction<HidingSpot> listener) Parameters Type Name Description UnityAction < HidingSpot > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Events | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Events Classes BaseEventChannel BoolEventChannel CharacterLightEvent CharacterLightEvent.CharacterLightEnabledEventParam This class is a parameter to enable Character Lighting. CharacterLightEvent.CharacterLightEventParam This class is a parameter to send with CharacterLightEvent. CharacterLightEvent.CharacterLightResizingEventParam This class is a parameter to resize the Area light size or Fov light angle. CharacterLightEvent.CharacterResetLightEvent This class is a parameter to reset the character light. FloatEventChannel GameModeWinnerEventChannel HidingSpotEventChannel IntEventChannel PlayerEventChannel RoomDataEventChannel StringEventChannel VoidEventChannel Enums CharacterLightEvent.CharacterLightType"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.IntEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.IntEventChannel.html",
    "title": "Class IntEventChannel | Catch.io Developer Reference",
    "keywords": "Class IntEventChannel Inheritance Object BaseEventChannel IntEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class IntEventChannel : BaseEventChannel Methods AddListener(UnityAction<Int32>) Declaration public void AddListener(UnityAction<int> listener) Parameters Type Name Description UnityAction < Int32 > listener RaiseEvent(Int32) Declaration public void RaiseEvent(int value) Parameters Type Name Description Int32 value RemoveListener(UnityAction<Int32>) Declaration public void RemoveListener(UnityAction<int> listener) Parameters Type Name Description UnityAction < Int32 > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.PlayerEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.PlayerEventChannel.html",
    "title": "Class PlayerEventChannel | Catch.io Developer Reference",
    "keywords": "Class PlayerEventChannel Inheritance Object BaseEventChannel PlayerEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class PlayerEventChannel : BaseEventChannel Methods AddListener(UnityAction<Player>) Declaration public void AddListener(UnityAction<Player> listener) Parameters Type Name Description UnityAction < Player > listener RaiseEvent(Player) Declaration public void RaiseEvent(Player value) Parameters Type Name Description Player value RemoveListener(UnityAction<Player>) Declaration public void RemoveListener(UnityAction<Player> listener) Parameters Type Name Description UnityAction < Player > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.RoomDataEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.RoomDataEventChannel.html",
    "title": "Class RoomDataEventChannel | Catch.io Developer Reference",
    "keywords": "Class RoomDataEventChannel Inheritance Object BaseEventChannel RoomDataEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class RoomDataEventChannel : BaseEventChannel Methods AddListener(UnityAction<RoomData>) Declaration public void AddListener(UnityAction<RoomData> listener) Parameters Type Name Description UnityAction < RoomData > listener RaiseEvent(RoomData) Declaration public void RaiseEvent(RoomData value) Parameters Type Name Description RoomData value RemoveListener(UnityAction<RoomData>) Declaration public void RemoveListener(UnityAction<RoomData> listener) Parameters Type Name Description UnityAction < RoomData > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.StringEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.StringEventChannel.html",
    "title": "Class StringEventChannel | Catch.io Developer Reference",
    "keywords": "Class StringEventChannel Inheritance Object BaseEventChannel StringEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class StringEventChannel : BaseEventChannel Methods AddListener(UnityAction<String>) Declaration public void AddListener(UnityAction<string> listener) Parameters Type Name Description UnityAction < String > listener RaiseEvent(String) Declaration public void RaiseEvent(string value) Parameters Type Name Description String value RemoveListener(UnityAction<String>) Declaration public void RemoveListener(UnityAction<string> listener) Parameters Type Name Description UnityAction < String > listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Events.VoidEventChannel.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Events.VoidEventChannel.html",
    "title": "Class VoidEventChannel | Catch.io Developer Reference",
    "keywords": "Class VoidEventChannel Inheritance Object BaseEventChannel VoidEventChannel Namespace : CatchIo.Runtime.ScriptableObjects.Events Assembly : cs.temp.dll.dll Syntax public class VoidEventChannel : BaseEventChannel Methods AddListener(UnityAction) Declaration public void AddListener(UnityAction listener) Parameters Type Name Description UnityAction listener RaiseEvent() Declaration public void RaiseEvent() RemoveListener(UnityAction) Declaration public void RemoveListener(UnityAction listener) Parameters Type Name Description UnityAction listener"
  },
  "api/CatchIo.Runtime.ScriptableObjects.GameModes.GameModeWinner.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.GameModes.GameModeWinner.html",
    "title": "Class GameModeWinner | Catch.io Developer Reference",
    "keywords": "Class GameModeWinner Inheritance Object GameModeWinner Namespace : CatchIo.Runtime.ScriptableObjects.GameModes Assembly : cs.temp.dll.dll Syntax public class GameModeWinner Constructors GameModeWinner(Boolean) Declaration public GameModeWinner(bool canMultipleWinner = false) Parameters Type Name Description Boolean canMultipleWinner Methods GetCharacters() Declaration public List<CharacterFacade> GetCharacters() Returns Type Description List < CharacterFacade > SetWinner(CharacterFacade) Declaration public void SetWinner(CharacterFacade winner) Parameters Type Name Description CharacterFacade winner"
  },
  "api/CatchIo.Runtime.ScriptableObjects.GameModes.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.GameModes.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.GameModes | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.GameModes Classes GameModeWinner"
  },
  "api/CatchIo.Runtime.ScriptableObjects.GameModes.Point.DeathMatchPoint.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.GameModes.Point.DeathMatchPoint.html",
    "title": "Class DeathMatchPoint | Catch.io Developer Reference",
    "keywords": "Class DeathMatchPoint Inheritance Object DeathMatchPoint Namespace : CatchIo.Runtime.ScriptableObjects.GameModes.Point Assembly : cs.temp.dll.dll Syntax public class DeathMatchPoint : ScriptableObject Fields BeTrappedPoint Declaration public int BeTrappedPoint Field Value Type Description Int32 DeathPoint Declaration public int DeathPoint Field Value Type Description Int32 KillPoint Declaration public int KillPoint Field Value Type Description Int32 TrapPoint Declaration public int TrapPoint Field Value Type Description Int32 Methods AddBeTrappedPoint(Player) Declaration public void AddBeTrappedPoint(Player player) Parameters Type Name Description Player player AddDeathPoint(Player) Declaration public void AddDeathPoint(Player player) Parameters Type Name Description Player player AddKillPoint(Player) Declaration public void AddKillPoint(Player player) Parameters Type Name Description Player player AddTrapPoint(Player) Declaration public void AddTrapPoint(Player player) Parameters Type Name Description Player player"
  },
  "api/CatchIo.Runtime.ScriptableObjects.GameModes.Point.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.GameModes.Point.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.GameModes.Point | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.GameModes.Point Classes DeathMatchPoint"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Input.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Input.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Input | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Input Classes InputReader"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Input.InputReader.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Input.InputReader.html",
    "title": "Class InputReader | Catch.io Developer Reference",
    "keywords": "Class InputReader Inheritance Object InputReader Implements GameInput.ICharacterInputActions Namespace : CatchIo.Runtime.ScriptableObjects.Input Assembly : cs.temp.dll.dll Syntax [Serializable] public class InputReader : DescriptionScriptableObject, GameInput.ICharacterInputActions Methods DisableCharacterInput() Declaration public void DisableCharacterInput() EnableCharacterInput() Declaration public void EnableCharacterInput() OnAimItem(InputAction.CallbackContext) Declaration public void OnAimItem(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnAttack(InputAction.CallbackContext) Declaration public void OnAttack(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnConsumeItem(InputAction.CallbackContext) Declaration public void OnConsumeItem(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnCrouch(InputAction.CallbackContext) Declaration public void OnCrouch(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnDiscardItem(InputAction.CallbackContext) Declaration public void OnDiscardItem(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnEscape(InputAction.CallbackContext) Declaration public void OnEscape(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnItemSelect(InputAction.CallbackContext) Declaration public void OnItemSelect(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove(InputAction.CallbackContext) Declaration public void OnMove(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnPoint(InputAction.CallbackContext) Declaration public void OnPoint(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRun(InputAction.CallbackContext) Declaration public void OnRun(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTab(InputAction.CallbackContext) Declaration public void OnTab(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnThrowItem(InputAction.CallbackContext) Declaration public void OnThrowItem(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context Events AimingInput Declaration public event UnityAction AimingInput Event Type Type Description UnityAction AttackInput Declaration public event UnityAction AttackInput Event Type Type Description UnityAction ConsumeItemInput Declaration public event UnityAction ConsumeItemInput Event Type Type Description UnityAction CrouchInput Declaration public event UnityAction CrouchInput Event Type Type Description UnityAction DiscardItemInput Declaration public event UnityAction DiscardItemInput Event Type Type Description UnityAction EscapeGameSession Declaration public event UnityAction EscapeGameSession Event Type Type Description UnityAction ItemSelectInput Declaration public event UnityAction<int> ItemSelectInput Event Type Type Description UnityAction < Int32 > MovementInput Declaration public event UnityAction<Vector2Int> MovementInput Event Type Type Description UnityAction < Vector2Int > PointInput Declaration public event UnityAction<Vector2> PointInput Event Type Type Description UnityAction < Vector2 > RunCanceledInput Declaration public event UnityAction RunCanceledInput Event Type Type Description UnityAction RunInput Declaration public event UnityAction RunInput Event Type Type Description UnityAction TabCanceled Declaration public event UnityAction TabCanceled Event Type Type Description UnityAction TabStarted Declaration public event UnityAction TabStarted Event Type Type Description UnityAction ThrowItemInput Declaration public event UnityAction ThrowItemInput Event Type Type Description UnityAction Implements GameInput.ICharacterInputActions"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.BaseNetworkConnection.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.BaseNetworkConnection.html",
    "title": "Class BaseNetworkConnection | Catch.io Developer Reference",
    "keywords": "Class BaseNetworkConnection Inheritance Object BaseNetworkConnection LobbyConnection RoomConnection ServerConnection Namespace : CatchIo.Runtime.ScriptableObjects.Network.Connections Assembly : cs.temp.dll.dll Syntax public class BaseNetworkConnection : DescriptionScriptableObject Methods AddCallback() Declaration public void AddCallback() RemoveCallback() Declaration public void RemoveCallback()"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Network.Connections | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Network.Connections Classes BaseNetworkConnection LobbyConnection RoomConnection ServerConnection ServerConnection.Region ServerConnection.RegionData"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.LobbyConnection.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.LobbyConnection.html",
    "title": "Class LobbyConnection | Catch.io Developer Reference",
    "keywords": "Class LobbyConnection Inheritance Object BaseNetworkConnection LobbyConnection Implements ILobbyCallbacks Inherited Members BaseNetworkConnection.AddCallback() BaseNetworkConnection.RemoveCallback() Namespace : CatchIo.Runtime.ScriptableObjects.Network.Connections Assembly : cs.temp.dll.dll Syntax public class LobbyConnection : BaseNetworkConnection Methods JoinLobby() Declaration public IEnumerator JoinLobby() Returns Type Description IEnumerator LeftLobby() Declaration public IEnumerator LeftLobby() Returns Type Description IEnumerator OnJoinedLobby() Declaration public void OnJoinedLobby() OnLeftLobby() Declaration public void OnLeftLobby() OnLobbyStatisticsUpdate(List<TypedLobbyInfo>) Declaration public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics) Parameters Type Name Description List < TypedLobbyInfo > lobbyStatistics OnRoomListUpdate(List<RoomInfo>) Declaration public void OnRoomListUpdate(List<RoomInfo> roomList) Parameters Type Name Description List < RoomInfo > roomList Implements ILobbyCallbacks"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.RoomConnection.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.RoomConnection.html",
    "title": "Class RoomConnection | Catch.io Developer Reference",
    "keywords": "Class RoomConnection Inheritance Object BaseNetworkConnection RoomConnection Implements IMatchmakingCallbacks IInRoomCallbacks Inherited Members BaseNetworkConnection.AddCallback() BaseNetworkConnection.RemoveCallback() Namespace : CatchIo.Runtime.ScriptableObjects.Network.Connections Assembly : cs.temp.dll.dll Syntax public class RoomConnection : BaseNetworkConnection Methods CreateRoom(RoomData) Declaration public IEnumerator CreateRoom(RoomData roomData) Parameters Type Name Description RoomData roomData Returns Type Description IEnumerator JoinRoom(String) Declaration public IEnumerator JoinRoom(string roomName) Parameters Type Name Description String roomName Returns Type Description IEnumerator LeftRoom() Declaration public IEnumerator LeftRoom() Returns Type Description IEnumerator OnCreatedRoom() Declaration public void OnCreatedRoom() OnCreateRoomFailed(Int16, String) Declaration public void OnCreateRoomFailed(short returnCode, string message) Parameters Type Name Description Int16 returnCode String message OnFriendListUpdate(List<FriendInfo>) Declaration public void OnFriendListUpdate(List<FriendInfo> friendList) Parameters Type Name Description List < FriendInfo > friendList OnJoinedRoom() Declaration public void OnJoinedRoom() OnJoinRandomFailed(Int16, String) Declaration public void OnJoinRandomFailed(short returnCode, string message) Parameters Type Name Description Int16 returnCode String message OnJoinRoomFailed(Int16, String) Declaration public void OnJoinRoomFailed(short returnCode, string message) Parameters Type Name Description Int16 returnCode String message OnLeftRoom() Declaration public void OnLeftRoom() OnMasterClientSwitched(Player) Declaration public void OnMasterClientSwitched(Player newMasterClient) Parameters Type Name Description Player newMasterClient OnPlayerEnteredRoom(Player) Declaration public void OnPlayerEnteredRoom(Player newPlayer) Parameters Type Name Description Player newPlayer OnPlayerLeftRoom(Player) Declaration public void OnPlayerLeftRoom(Player otherPlayer) Parameters Type Name Description Player otherPlayer OnPlayerPropertiesUpdate(Player, ExitGames.Client.Photon.Hashtable) Declaration public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps) Parameters Type Name Description Player targetPlayer ExitGames.Client.Photon.Hashtable changedProps OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable) Declaration public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged) Parameters Type Name Description ExitGames.Client.Photon.Hashtable propertiesThatChanged Implements IMatchmakingCallbacks IInRoomCallbacks"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.ServerConnection.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.ServerConnection.html",
    "title": "Class ServerConnection | Catch.io Developer Reference",
    "keywords": "Class ServerConnection Inheritance Object BaseNetworkConnection ServerConnection Implements IConnectionCallbacks Inherited Members BaseNetworkConnection.AddCallback() BaseNetworkConnection.RemoveCallback() Namespace : CatchIo.Runtime.ScriptableObjects.Network.Connections Assembly : cs.temp.dll.dll Syntax public class ServerConnection : BaseNetworkConnection Properties CurrentRegion Declaration public ServerConnection.Region CurrentRegion { get; } Property Value Type Description ServerConnection.Region Methods ConnectUsingSettings(String) Declaration public IEnumerator ConnectUsingSettings(string nickName = \"\") Parameters Type Name Description String nickName Returns Type Description IEnumerator GetCurrentRegionIndex() Declaration public int GetCurrentRegionIndex() Returns Type Description Int32 GetEnabledRegions() Declaration public List<ServerConnection.Region> GetEnabledRegions() Returns Type Description List < ServerConnection.Region > GetRegionByIndex(Int32) Declaration public ServerConnection.Region GetRegionByIndex(int index) Parameters Type Name Description Int32 index Returns Type Description ServerConnection.Region OnConnected() Declaration public void OnConnected() OnConnectedToMaster() Declaration public void OnConnectedToMaster() OnCustomAuthenticationFailed(String) Declaration public void OnCustomAuthenticationFailed(string debugMessage) Parameters Type Name Description String debugMessage OnCustomAuthenticationResponse(Dictionary<String, Object>) Declaration public void OnCustomAuthenticationResponse(Dictionary<string, object> data) Parameters Type Name Description Dictionary < String , Object > data OnDisconnected(DisconnectCause) Declaration public void OnDisconnected(DisconnectCause cause) Parameters Type Name Description DisconnectCause cause OnRegionListReceived(RegionHandler) Declaration public void OnRegionListReceived(RegionHandler regionHandler) Parameters Type Name Description RegionHandler regionHandler SwitchRegion(ServerConnection.Region) Declaration public IEnumerator SwitchRegion(ServerConnection.Region region) Parameters Type Name Description ServerConnection.Region region Returns Type Description IEnumerator Implements IConnectionCallbacks"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.ServerConnection.Region.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.ServerConnection.Region.html",
    "title": "Class ServerConnection.Region | Catch.io Developer Reference",
    "keywords": "Class ServerConnection.Region Inheritance Object ServerConnection.Region Namespace : CatchIo.Runtime.ScriptableObjects.Network.Connections Assembly : cs.temp.dll.dll Syntax [Serializable] public class Region Fields region Declaration public string region Field Value Type Description String token Declaration public string token Field Value Type Description String"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.ServerConnection.RegionData.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.Connections.ServerConnection.RegionData.html",
    "title": "Class ServerConnection.RegionData | Catch.io Developer Reference",
    "keywords": "Class ServerConnection.RegionData Inheritance Object ServerConnection.RegionData Namespace : CatchIo.Runtime.ScriptableObjects.Network.Connections Assembly : cs.temp.dll.dll Syntax [Serializable] public class RegionData Fields regionList Declaration public List<ServerConnection.Region> regionList Field Value Type Description List < ServerConnection.Region >"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.Network | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.Network Classes OpenRoomList PlayersInRoom This scriptable object contains players in the same room."
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.OpenRoomList.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.OpenRoomList.html",
    "title": "Class OpenRoomList | Catch.io Developer Reference",
    "keywords": "Class OpenRoomList Inheritance Object OpenRoomList Namespace : CatchIo.Runtime.ScriptableObjects.Network Assembly : cs.temp.dll.dll Syntax public class OpenRoomList : DescriptionScriptableObject Fields OnUpdated Declaration public Action OnUpdated Field Value Type Description Action Methods Clear() Declaration public void Clear() GetOpenRoomDataList() Declaration public List<RoomData> GetOpenRoomDataList() Returns Type Description List < RoomData > TryAddRoomInfo(RoomInfo) Declaration public bool TryAddRoomInfo(RoomInfo room) Parameters Type Name Description RoomInfo room Returns Type Description Boolean TryRemoveRoomInfo(RoomInfo) Declaration public bool TryRemoveRoomInfo(RoomInfo room) Parameters Type Name Description RoomInfo room Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.ScriptableObjects.Network.PlayersInRoom.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.Network.PlayersInRoom.html",
    "title": "Class PlayersInRoom | Catch.io Developer Reference",
    "keywords": "Class PlayersInRoom This scriptable object contains players in the same room. Inheritance Object PlayersInRoom Namespace : CatchIo.Runtime.ScriptableObjects.Network Assembly : cs.temp.dll.dll Syntax public class PlayersInRoom : DescriptionScriptableObject Fields OnPlayerLeft Declaration public Action<Player> OnPlayerLeft Field Value Type Description Action < Player > OnPropertiesUpdated Declaration public Action<Tuple<Player, ExitGames.Client.Photon.Hashtable>> OnPropertiesUpdated Field Value Type Description Action < Tuple < Player , ExitGames.Client.Photon.Hashtable >> OnUpdated Declaration public Action OnUpdated Field Value Type Description Action Methods Clear() Declaration public void Clear() GetPlayers() Declaration public List<Player> GetPlayers() Returns Type Description List < Player > SetCustomProperty(Player, ExitGames.Client.Photon.Hashtable) Declaration public void SetCustomProperty(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps) Parameters Type Name Description Player targetPlayer ExitGames.Client.Photon.Hashtable changedProps TryAddPlayer(Player) Declaration public bool TryAddPlayer(Player player) Parameters Type Name Description Player player Returns Type Description Boolean TryRemovePlayer(Player) Declaration public bool TryRemovePlayer(Player player) Parameters Type Name Description Player player Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.BaseSceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.BaseSceneMode.html",
    "title": "Class BaseSceneMode | Catch.io Developer Reference",
    "keywords": "Class BaseSceneMode Inheritance Object BaseSceneMode GameSceneMode MenuSceneMode Implements ISceneMode Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax [Serializable] public abstract class BaseSceneMode : DescriptionScriptableObject Fields _behaviour Declaration protected MonoBehaviour _behaviour Field Value Type Description MonoBehaviour Methods OnEnd() Declaration public abstract IEnumerator OnEnd() Returns Type Description IEnumerator OnStart(MonoBehaviour) Declaration public abstract IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator Implements ISceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.GameSceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.GameSceneMode.html",
    "title": "Class GameSceneMode | Catch.io Developer Reference",
    "keywords": "Class GameSceneMode Inheritance Object BaseSceneMode GameSceneMode Implements ISceneMode Inherited Members BaseSceneMode._behaviour Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax public class GameSceneMode : BaseSceneMode Methods GetGameCamera() Declaration public GameCamera GetGameCamera() Returns Type Description GameCamera GetGameMode() Declaration public GameMode GetGameMode() Returns Type Description GameMode GetLocalCharacter() Declaration public CharacterFacade GetLocalCharacter() Returns Type Description CharacterFacade OnEnd() Declaration public override IEnumerator OnEnd() Returns Type Description IEnumerator Overrides BaseSceneMode.OnEnd() OnStart(MonoBehaviour) Declaration public override IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator Overrides BaseSceneMode.OnStart(MonoBehaviour) RespawnCharacter(Int32, Boolean) Declaration public void RespawnCharacter(int viewId, bool forciblyRespawn = false) Parameters Type Name Description Int32 viewId Boolean forciblyRespawn SendInformation(String) Declaration public void SendInformation(string info) Parameters Type Name Description String info SpawnDummyCharacter() Declaration public void SpawnDummyCharacter() Implements ISceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.html",
    "title": "Namespace CatchIo.Runtime.ScriptableObjects.SceneModes | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.ScriptableObjects.SceneModes Classes BaseSceneMode GameSceneMode LobbySceneMode LoginSceneMode MainMenuSceneMode MenuSceneMode RoomSceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.LobbySceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.LobbySceneMode.html",
    "title": "Class LobbySceneMode | Catch.io Developer Reference",
    "keywords": "Class LobbySceneMode Inheritance Object BaseSceneMode MenuSceneMode LobbySceneMode Implements ISceneMode Inherited Members MenuSceneMode.LoadMainSceneAsync() MenuSceneMode.GetMainSceneName() BaseSceneMode._behaviour Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax public class LobbySceneMode : MenuSceneMode Methods OnEnd() Declaration public override IEnumerator OnEnd() Returns Type Description IEnumerator Overrides BaseSceneMode.OnEnd() OnStart(MonoBehaviour) Declaration public override IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator Overrides BaseSceneMode.OnStart(MonoBehaviour) Implements ISceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.LoginSceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.LoginSceneMode.html",
    "title": "Class LoginSceneMode | Catch.io Developer Reference",
    "keywords": "Class LoginSceneMode Inheritance Object BaseSceneMode MenuSceneMode LoginSceneMode Implements ISceneMode Inherited Members MenuSceneMode.LoadMainSceneAsync() MenuSceneMode.GetMainSceneName() BaseSceneMode._behaviour Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax public class LoginSceneMode : MenuSceneMode Methods Login() Declaration public void Login() OnEnd() Declaration public override IEnumerator OnEnd() Returns Type Description IEnumerator Overrides BaseSceneMode.OnEnd() OnStart(MonoBehaviour) Declaration public override IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator Overrides BaseSceneMode.OnStart(MonoBehaviour) Implements ISceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.MainMenuSceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.MainMenuSceneMode.html",
    "title": "Class MainMenuSceneMode | Catch.io Developer Reference",
    "keywords": "Class MainMenuSceneMode Inheritance Object BaseSceneMode MenuSceneMode MainMenuSceneMode Implements ISceneMode Inherited Members MenuSceneMode.LoadMainSceneAsync() MenuSceneMode.GetMainSceneName() BaseSceneMode._behaviour Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax public class MainMenuSceneMode : MenuSceneMode Methods OnEnd() Declaration public override IEnumerator OnEnd() Returns Type Description IEnumerator Overrides BaseSceneMode.OnEnd() OnStart(MonoBehaviour) Declaration public override IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator Overrides BaseSceneMode.OnStart(MonoBehaviour) Implements ISceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.MenuSceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.MenuSceneMode.html",
    "title": "Class MenuSceneMode | Catch.io Developer Reference",
    "keywords": "Class MenuSceneMode Inheritance Object BaseSceneMode MenuSceneMode LobbySceneMode LoginSceneMode MainMenuSceneMode RoomSceneMode Implements ISceneMode Inherited Members BaseSceneMode._behaviour BaseSceneMode.OnEnd() BaseSceneMode.OnStart(MonoBehaviour) Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax public abstract class MenuSceneMode : BaseSceneMode Methods GetMainSceneName() Declaration public string GetMainSceneName() Returns Type Description String LoadMainSceneAsync() Declaration protected IEnumerator LoadMainSceneAsync() Returns Type Description IEnumerator Implements ISceneMode"
  },
  "api/CatchIo.Runtime.ScriptableObjects.SceneModes.RoomSceneMode.html": {
    "href": "api/CatchIo.Runtime.ScriptableObjects.SceneModes.RoomSceneMode.html",
    "title": "Class RoomSceneMode | Catch.io Developer Reference",
    "keywords": "Class RoomSceneMode Inheritance Object BaseSceneMode MenuSceneMode RoomSceneMode Implements ISceneMode Inherited Members MenuSceneMode.LoadMainSceneAsync() MenuSceneMode.GetMainSceneName() BaseSceneMode._behaviour Namespace : CatchIo.Runtime.ScriptableObjects.SceneModes Assembly : cs.temp.dll.dll Syntax public class RoomSceneMode : MenuSceneMode Methods OnEnd() Declaration public override IEnumerator OnEnd() Returns Type Description IEnumerator Overrides BaseSceneMode.OnEnd() OnStart(MonoBehaviour) Declaration public override IEnumerator OnStart(MonoBehaviour monoBehaviour) Parameters Type Name Description MonoBehaviour monoBehaviour Returns Type Description IEnumerator Overrides BaseSceneMode.OnStart(MonoBehaviour) Implements ISceneMode"
  },
  "api/CatchIo.Runtime.Services.ConsoleService.html": {
    "href": "api/CatchIo.Runtime.Services.ConsoleService.html",
    "title": "Class ConsoleService | Catch.io Developer Reference",
    "keywords": "Class ConsoleService This class stores custom console commands that can be run within a room. (not in the launcher or menus) Inheritance Object ConsoleService Namespace : CatchIo.Runtime.Services Assembly : cs.temp.dll.dll Syntax public class ConsoleService : MonoBehaviourPun"
  },
  "api/CatchIo.Runtime.Services.html": {
    "href": "api/CatchIo.Runtime.Services.html",
    "title": "Namespace CatchIo.Runtime.Services | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Services Classes ConsoleService This class stores custom console commands that can be run within a room. (not in the launcher or menus) LoadingScreenService NetworkService SceneSwitchingService Enums NetworkService.NetworkState"
  },
  "api/CatchIo.Runtime.Services.LoadingScreenService.html": {
    "href": "api/CatchIo.Runtime.Services.LoadingScreenService.html",
    "title": "Class LoadingScreenService | Catch.io Developer Reference",
    "keywords": "Class LoadingScreenService Inheritance Object LoadingScreenService Namespace : CatchIo.Runtime.Services Assembly : cs.temp.dll.dll Syntax public class LoadingScreenService : MonoRegistrable Methods Release() Declaration public IEnumerator Release() Returns Type Description IEnumerator Require(String) Declaration public IEnumerator Require(string msg = \"\") Parameters Type Name Description String msg Returns Type Description IEnumerator WaitForLoadingEnd() Declaration public IEnumerator WaitForLoadingEnd() Returns Type Description IEnumerator"
  },
  "api/CatchIo.Runtime.Services.NetworkService.html": {
    "href": "api/CatchIo.Runtime.Services.NetworkService.html",
    "title": "Class NetworkService | Catch.io Developer Reference",
    "keywords": "Class NetworkService Inheritance Object NetworkService Namespace : CatchIo.Runtime.Services Assembly : cs.temp.dll.dll Syntax public class NetworkService : MonoRegistrable Fields OnEnabledRegionUpdated Declaration public static Action<List<ServerConnection.Region>> OnEnabledRegionUpdated Field Value Type Description Action < List < ServerConnection.Region >> Methods ConnectToServer(String) Declaration public IEnumerator ConnectToServer(string nickName) Parameters Type Name Description String nickName Returns Type Description IEnumerator ConnectToServerOnWebGL(String) Declaration public void ConnectToServerOnWebGL(string nickName) Parameters Type Name Description String nickName CreateRoom(RoomData) Declaration public IEnumerator CreateRoom(RoomData roomData) Parameters Type Name Description RoomData roomData Returns Type Description IEnumerator GetCurrentRegion() Declaration public ServerConnection.Region GetCurrentRegion() Returns Type Description ServerConnection.Region GetDefaultRoomData() Declaration public RoomData GetDefaultRoomData() Returns Type Description RoomData GetEnabledRegions() Declaration public List<ServerConnection.Region> GetEnabledRegions() Returns Type Description List < ServerConnection.Region > GetServerConnection() Declaration public ServerConnection GetServerConnection() Returns Type Description ServerConnection JoinLobby() Declaration public IEnumerator JoinLobby() Returns Type Description IEnumerator JoinRoom(String) Declaration public IEnumerator JoinRoom(string roomName) Parameters Type Name Description String roomName Returns Type Description IEnumerator LeftLobby() Declaration public IEnumerator LeftLobby() Returns Type Description IEnumerator LeftRoom() Declaration public IEnumerator LeftRoom() Returns Type Description IEnumerator PlayOfflineMode() Declaration public IEnumerator PlayOfflineMode() Returns Type Description IEnumerator SwitchRegion(Int32) Declaration public IEnumerator SwitchRegion(int index) Parameters Type Name Description Int32 index Returns Type Description IEnumerator"
  },
  "api/CatchIo.Runtime.Services.NetworkService.NetworkState.html": {
    "href": "api/CatchIo.Runtime.Services.NetworkService.NetworkState.html",
    "title": "Enum NetworkService.NetworkState | Catch.io Developer Reference",
    "keywords": "Enum NetworkService.NetworkState Namespace : CatchIo.Runtime.Services Assembly : cs.temp.dll.dll Syntax public enum NetworkState Fields Name Description Loading Lobby None Room Server"
  },
  "api/CatchIo.Runtime.Services.SceneSwitchingService.html": {
    "href": "api/CatchIo.Runtime.Services.SceneSwitchingService.html",
    "title": "Class SceneSwitchingService | Catch.io Developer Reference",
    "keywords": "Class SceneSwitchingService Inheritance Object SceneSwitchingService Namespace : CatchIo.Runtime.Services Assembly : cs.temp.dll.dll Syntax public class SceneSwitchingService : MonoRegistrable Fields OnAfterSceneLoaded Declaration public static Action OnAfterSceneLoaded Field Value Type Description Action OnBeforeSceneLoaded Declaration public static Action OnBeforeSceneLoaded Field Value Type Description Action Methods MenuSceneSwitchAsync(Type, Boolean) Declaration public IEnumerator MenuSceneSwitchAsync(Type modeType, bool useLoadingScreen = false) Parameters Type Name Description Type modeType Boolean useLoadingScreen Returns Type Description IEnumerator SwitchToGameSceneMode() Declaration public void SwitchToGameSceneMode()"
  },
  "api/CatchIo.Runtime.Settings.html": {
    "href": "api/CatchIo.Runtime.Settings.html",
    "title": "Namespace CatchIo.Runtime.Settings | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Settings Classes PlayerSettingsManager PlayerSettingsModel"
  },
  "api/CatchIo.Runtime.Settings.PlayerSettingsManager.html": {
    "href": "api/CatchIo.Runtime.Settings.PlayerSettingsManager.html",
    "title": "Class PlayerSettingsManager | Catch.io Developer Reference",
    "keywords": "Class PlayerSettingsManager Inheritance Object PlayerSettingsManager Namespace : CatchIo.Runtime.Settings Assembly : cs.temp.dll.dll Syntax public class PlayerSettingsManager Fields MAX_VOLUME_ON_SLIDER Declaration public const float MAX_VOLUME_ON_SLIDER = 100F Field Value Type Description Single Properties Instance Declaration public static PlayerSettingsManager Instance { get; } Property Value Type Description PlayerSettingsManager Methods AddBgmVolumeDelegate(UnityAction<Single>) Declaration public void AddBgmVolumeDelegate(UnityAction<float> inDelegate) Parameters Type Name Description UnityAction < Single > inDelegate AddSfxVolumeDelegate(UnityAction<Single>) Declaration public void AddSfxVolumeDelegate(UnityAction<float> inDelegate) Parameters Type Name Description UnityAction < Single > inDelegate ApplySettings(PlayerSettingsModel) Declaration public void ApplySettings(PlayerSettingsModel newModel) Parameters Type Name Description PlayerSettingsModel newModel GetCurrentSettings() Declaration public PlayerSettingsModel GetCurrentSettings() Returns Type Description PlayerSettingsModel GetCurrentSettingsNormalized() Declaration public PlayerSettingsModel GetCurrentSettingsNormalized() Returns Type Description PlayerSettingsModel Init() Declaration public void Init() LoadSettingsFromFile(String) Declaration public void LoadSettingsFromFile(string savedFileName) Parameters Type Name Description String savedFileName RemoveBgmVolumeDelegate(UnityAction<Single>) Declaration public void RemoveBgmVolumeDelegate(UnityAction<float> inDelegate) Parameters Type Name Description UnityAction < Single > inDelegate RemoveSfxVolumeDelegate(UnityAction<Single>) Declaration public void RemoveSfxVolumeDelegate(UnityAction<float> inDelegate) Parameters Type Name Description UnityAction < Single > inDelegate SaveSettingsToFile() Declaration public void SaveSettingsToFile()"
  },
  "api/CatchIo.Runtime.Settings.PlayerSettingsModel.html": {
    "href": "api/CatchIo.Runtime.Settings.PlayerSettingsModel.html",
    "title": "Class PlayerSettingsModel | Catch.io Developer Reference",
    "keywords": "Class PlayerSettingsModel Inheritance Object PlayerSettingsModel Namespace : CatchIo.Runtime.Settings Assembly : cs.temp.dll.dll Syntax public class PlayerSettingsModel Constructors PlayerSettingsModel() Declaration public PlayerSettingsModel() Fields BGMVolume Declaration public float BGMVolume Field Value Type Description Single EffectBrightness Declaration public float EffectBrightness Field Value Type Description Single GameLanguage Declaration public GameLanguage GameLanguage Field Value Type Description GameLanguage HUDOpacity Declaration public float HUDOpacity Field Value Type Description Single IsFullScreen Declaration public bool IsFullScreen Field Value Type Description Boolean SoundEffectVolume Declaration public float SoundEffectVolume Field Value Type Description Single XResolution Declaration public int XResolution Field Value Type Description Int32 YResolution Declaration public int YResolution Field Value Type Description Int32"
  },
  "api/CatchIo.Runtime.Sound.CharacterActionSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.CharacterActionSfx.html",
    "title": "Class CharacterActionSfx | Catch.io Developer Reference",
    "keywords": "Class CharacterActionSfx Inheritance Object Sfx CharacterActionSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class CharacterActionSfx : Sfx Constructors CharacterActionSfx() Declaration public CharacterActionSfx() Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string characterActionType, float volume = 1F) Parameters Type Name Description Vector3 generatePos String characterActionType Single volume Overrides Sfx.Play(Vector3, String, Single)"
  },
  "api/CatchIo.Runtime.Sound.CursedOneSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.CursedOneSfx.html",
    "title": "Class CursedOneSfx | Catch.io Developer Reference",
    "keywords": "Class CursedOneSfx Inheritance Object Sfx CursedOneSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class CursedOneSfx : Sfx Constructors CursedOneSfx() Declaration public CursedOneSfx() Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string labelName = \"\", float volume = 1F) Parameters Type Name Description Vector3 generatePos String labelName Single volume Overrides Sfx.Play(Vector3, String, Single) SetDistanceParameter(Single) Declaration public void SetDistanceParameter(float distance) Parameters Type Name Description Single distance UpdatePosition(Vector3) Declaration public void UpdatePosition(Vector3 pos) Parameters Type Name Description Vector3 pos"
  },
  "api/CatchIo.Runtime.Sound.FootstepSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.FootstepSfx.html",
    "title": "Class FootstepSfx | Catch.io Developer Reference",
    "keywords": "Class FootstepSfx Inheritance Object Sfx TerrainSfx FootstepSfx Inherited Members TerrainSfx.Play(Vector3, String, Single) Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class FootstepSfx : TerrainSfx"
  },
  "api/CatchIo.Runtime.Sound.html": {
    "href": "api/CatchIo.Runtime.Sound.html",
    "title": "Namespace CatchIo.Runtime.Sound | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Sound Classes CharacterActionSfx CursedOneSfx FootstepSfx ItemSfx ItemTerrainSfx MainMusic Music Sfx SoundManager SpawnSfx StaminaSfx TerrainSfx UiSfx Enums MainTrackType UiSfx.SfxParameter"
  },
  "api/CatchIo.Runtime.Sound.ItemSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.ItemSfx.html",
    "title": "Class ItemSfx | Catch.io Developer Reference",
    "keywords": "Class ItemSfx Inheritance Object Sfx ItemSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class ItemSfx : Sfx Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string itemType = \"\", float volume = 1F) Parameters Type Name Description Vector3 generatePos String itemType Single volume Overrides Sfx.Play(Vector3, String, Single)"
  },
  "api/CatchIo.Runtime.Sound.ItemTerrainSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.ItemTerrainSfx.html",
    "title": "Class ItemTerrainSfx | Catch.io Developer Reference",
    "keywords": "Class ItemTerrainSfx Inheritance Object Sfx ItemTerrainSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class ItemTerrainSfx : Sfx Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string itemTerrainName = \"\", float volume = 1F) Parameters Type Name Description Vector3 generatePos String itemTerrainName Single volume Overrides Sfx.Play(Vector3, String, Single)"
  },
  "api/CatchIo.Runtime.Sound.MainMusic.html": {
    "href": "api/CatchIo.Runtime.Sound.MainMusic.html",
    "title": "Class MainMusic | Catch.io Developer Reference",
    "keywords": "Class MainMusic Inheritance Object MainMusic Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class MainMusic : MonoBehaviour"
  },
  "api/CatchIo.Runtime.Sound.MainTrackType.html": {
    "href": "api/CatchIo.Runtime.Sound.MainTrackType.html",
    "title": "Enum MainTrackType | Catch.io Developer Reference",
    "keywords": "Enum MainTrackType Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public enum MainTrackType Fields Name Description Chase ForestAmbience ForestVillageMusic Last None PlayableScene TitleScreen"
  },
  "api/CatchIo.Runtime.Sound.Music.html": {
    "href": "api/CatchIo.Runtime.Sound.Music.html",
    "title": "Class Music | Catch.io Developer Reference",
    "keywords": "Class Music Inheritance Object Music Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public abstract class Music : MonoBehaviour Methods GetPlayBackState() Declaration public abstract PLAYBACK_STATE GetPlayBackState() Returns Type Description PLAYBACK_STATE Play() Declaration public abstract void Play() Stop(STOP_MODE) Declaration public abstract void Stop(STOP_MODE stopMode = null) Parameters Type Name Description STOP_MODE stopMode"
  },
  "api/CatchIo.Runtime.Sound.Sfx.html": {
    "href": "api/CatchIo.Runtime.Sound.Sfx.html",
    "title": "Class Sfx | Catch.io Developer Reference",
    "keywords": "Class Sfx Inheritance Object Sfx CharacterActionSfx CursedOneSfx ItemSfx ItemTerrainSfx SpawnSfx StaminaSfx TerrainSfx UiSfx Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public abstract class Sfx Fields EventInstance Declaration protected EventInstance EventInstance Field Value Type Description EventInstance Methods GetCurrentFinalVolume() Declaration public float GetCurrentFinalVolume() Returns Type Description Single GetCurrentVolume() Declaration public float GetCurrentVolume() Returns Type Description Single GetPlayBackState() Declaration public PLAYBACK_STATE GetPlayBackState() Returns Type Description PLAYBACK_STATE Play(Vector3, String, Single) Declaration public abstract void Play(Vector3 generatePos, string labelName = \"\", float volume = 1F) Parameters Type Name Description Vector3 generatePos String labelName Single volume SetNewVolume(Single) Declaration public void SetNewVolume(float volume) Parameters Type Name Description Single volume Stop(STOP_MODE) Declaration public void Stop(STOP_MODE stopMode = null) Parameters Type Name Description STOP_MODE stopMode"
  },
  "api/CatchIo.Runtime.Sound.SoundManager.html": {
    "href": "api/CatchIo.Runtime.Sound.SoundManager.html",
    "title": "Class SoundManager | Catch.io Developer Reference",
    "keywords": "Class SoundManager Inheritance Object SoundManager Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class SoundManager : MonoBehaviourPun Properties Instance Declaration public static SoundManager Instance { get; protected set; } Property Value Type Description SoundManager Methods IsPlayingStaminaSfx(String) Declaration public bool IsPlayingStaminaSfx(string staminaState) Parameters Type Name Description String staminaState Returns Type Description Boolean PlayCharacterActionSfx(Vector3, String, Boolean) Declaration public void PlayCharacterActionSfx(Vector3 generatePos, string actionType, bool usingRPC = true) Parameters Type Name Description Vector3 generatePos String actionType Boolean usingRPC PlayCharacterSpawnSfx(Vector3, String, Single) Declaration public void PlayCharacterSpawnSfx(Vector3 generatePos, string characterClass, float volume) Parameters Type Name Description Vector3 generatePos String characterClass Single volume PlayFootstepSfx(Vector3, String, CharacterMoveType) Declaration public void PlayFootstepSfx(Vector3 generatePos, string terrainName, CharacterMoveType moveState) Parameters Type Name Description Vector3 generatePos String terrainName CharacterMoveType moveState PlayItemSfx(Vector3, String, Single) Declaration public void PlayItemSfx(Vector3 generatePos, string itemType, float volume) Parameters Type Name Description Vector3 generatePos String itemType Single volume PlayItemTerrainSfx(Vector3, String, Single) Declaration public void PlayItemTerrainSfx(Vector3 generatePos, string itemType, float volume) Parameters Type Name Description Vector3 generatePos String itemType Single volume PlayNewVolumeSample(Single) Declaration public void PlayNewVolumeSample(float newVolume) Parameters Type Name Description Single newVolume PlayStaminaSfx(String, Single) Declaration public void PlayStaminaSfx(string staminaState, float volume) Parameters Type Name Description String staminaState Single volume PlayTerrainSfx(Vector3, String) Declaration public void PlayTerrainSfx(Vector3 generatePos, string terrainName) Parameters Type Name Description Vector3 generatePos String terrainName RPC_PlayCharacterActionSfx(Vector3, String, Single) Declaration public void RPC_PlayCharacterActionSfx(Vector3 generatePos, string actionType, float volume) Parameters Type Name Description Vector3 generatePos String actionType Single volume RPC_PlayFootstepSfx(Vector3, String, Single) Declaration public void RPC_PlayFootstepSfx(Vector3 generatePos, string terrainName, float volume) Parameters Type Name Description Vector3 generatePos String terrainName Single volume RPC_PlayItemSfx(Vector3, String, Single) Declaration public void RPC_PlayItemSfx(Vector3 generatePos, string itemSfxName, float volume) Parameters Type Name Description Vector3 generatePos String itemSfxName Single volume RPC_PlayItemTerrainSfx(Vector3, String, Single) Declaration public void RPC_PlayItemTerrainSfx(Vector3 generatePos, string itemTerrainName, float volume) Parameters Type Name Description Vector3 generatePos String itemTerrainName Single volume RPC_PlayTerrainSfx(Vector3, String) Declaration public void RPC_PlayTerrainSfx(Vector3 generatePos, string terrainName) Parameters Type Name Description Vector3 generatePos String terrainName SetAttenuationObject(GameObject) Declaration public void SetAttenuationObject(GameObject attenuationObject) Parameters Type Name Description GameObject attenuationObject StopStaminaSfx() Declaration public void StopStaminaSfx()"
  },
  "api/CatchIo.Runtime.Sound.SpawnSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.SpawnSfx.html",
    "title": "Class SpawnSfx | Catch.io Developer Reference",
    "keywords": "Class SpawnSfx Inheritance Object Sfx SpawnSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class SpawnSfx : Sfx Constructors SpawnSfx() Declaration public SpawnSfx() Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string characterClass, float volume = 1F) Parameters Type Name Description Vector3 generatePos String characterClass Single volume Overrides Sfx.Play(Vector3, String, Single)"
  },
  "api/CatchIo.Runtime.Sound.StaminaSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.StaminaSfx.html",
    "title": "Class StaminaSfx | Catch.io Developer Reference",
    "keywords": "Class StaminaSfx Inheritance Object Sfx StaminaSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class StaminaSfx : Sfx Properties CurrentState Declaration public string CurrentState { get; } Property Value Type Description String Methods IsPlaying() Declaration public bool IsPlaying() Returns Type Description Boolean IsRepeating(String) Declaration public bool IsRepeating(string staminaStateType) Parameters Type Name Description String staminaStateType Returns Type Description Boolean Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string staminaStateType = \"None\", float volume = 1F) Parameters Type Name Description Vector3 generatePos String staminaStateType Single volume Overrides Sfx.Play(Vector3, String, Single) Stop() Declaration public void Stop()"
  },
  "api/CatchIo.Runtime.Sound.TerrainSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.TerrainSfx.html",
    "title": "Class TerrainSfx | Catch.io Developer Reference",
    "keywords": "Class TerrainSfx Inheritance Object Sfx TerrainSfx FootstepSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class TerrainSfx : Sfx Constructors TerrainSfx() Declaration public TerrainSfx() Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string terrainName = \"\", float terrainVolume = 1F) Parameters Type Name Description Vector3 generatePos String terrainName Single terrainVolume Overrides Sfx.Play(Vector3, String, Single)"
  },
  "api/CatchIo.Runtime.Sound.UiSfx.html": {
    "href": "api/CatchIo.Runtime.Sound.UiSfx.html",
    "title": "Class UiSfx | Catch.io Developer Reference",
    "keywords": "Class UiSfx Inheritance Object Sfx UiSfx Inherited Members Sfx.EventInstance Sfx.GetPlayBackState() Sfx.Stop(STOP_MODE) Sfx.SetNewVolume(Single) Sfx.GetCurrentVolume() Sfx.GetCurrentFinalVolume() Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public class UiSfx : Sfx Constructors UiSfx() Declaration public UiSfx() Methods Play(Vector3, String, Single) Declaration public override void Play(Vector3 generatePos, string uiSfx, float volume = 1F) Parameters Type Name Description Vector3 generatePos String uiSfx Single volume Overrides Sfx.Play(Vector3, String, Single)"
  },
  "api/CatchIo.Runtime.Sound.UiSfx.SfxParameter.html": {
    "href": "api/CatchIo.Runtime.Sound.UiSfx.SfxParameter.html",
    "title": "Enum UiSfx.SfxParameter | Catch.io Developer Reference",
    "keywords": "Enum UiSfx.SfxParameter Namespace : CatchIo.Runtime.Sound Assembly : cs.temp.dll.dll Syntax public enum SfxParameter Fields Name Description BackButton StartSfx StoneButton"
  },
  "api/CatchIo.Runtime.Trajectory.html": {
    "href": "api/CatchIo.Runtime.Trajectory.html",
    "title": "Namespace CatchIo.Runtime.Trajectory | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Trajectory Classes Trajectory This class contains to projectile motion data. Structs TrajectoryData"
  },
  "api/CatchIo.Runtime.Trajectory.Trajectory.html": {
    "href": "api/CatchIo.Runtime.Trajectory.Trajectory.html",
    "title": "Class Trajectory | Catch.io Developer Reference",
    "keywords": "Class Trajectory This class contains to projectile motion data. Inheritance Object Trajectory Namespace : CatchIo.Runtime.Trajectory Assembly : cs.temp.dll.dll Syntax [Serializable] public class Trajectory Constructors Trajectory(TrajectoryData) Declaration public Trajectory(TrajectoryData data) Parameters Type Name Description TrajectoryData data Trajectory(Single, Vector3[]) Declaration public Trajectory(float timeToTarget, Vector3[] trajectoryPath) Parameters Type Name Description Single timeToTarget Vector3 [] trajectoryPath Fields NUM_OF_POINTS Declaration public const int NUM_OF_POINTS = 50 Field Value Type Description Int32 TimeToTarget Declaration public float TimeToTarget Field Value Type Description Single TrajectoryPath Declaration public Vector3[] TrajectoryPath Field Value Type Description Vector3 [] Methods CalculateTrajectory(Vector2, Vector2, Single) Declaration public void CalculateTrajectory(Vector2 startPos, Vector2 endPos, float maxDistance = 1F) Parameters Type Name Description Vector2 startPos Vector2 endPos Single maxDistance CalculateTrajectory(Vector2, Vector2, Vector2, Single) Declaration public void CalculateTrajectory(Vector2 startPos, Vector2 endPos, Vector2 startPosOffset, float maxDistance = 1F) Parameters Type Name Description Vector2 startPos Vector2 endPos Vector2 startPosOffset Single maxDistance GetFinalPosition() Declaration public Vector3 GetFinalPosition() Returns Type Description Vector3 GetHeight(Single) Declaration public Vector2 GetHeight(float t) Parameters Type Name Description Single t Returns Type Description Vector2 GetStartPosition() Declaration public Vector3 GetStartPosition() Returns Type Description Vector3"
  },
  "api/CatchIo.Runtime.Trajectory.TrajectoryData.html": {
    "href": "api/CatchIo.Runtime.Trajectory.TrajectoryData.html",
    "title": "Struct TrajectoryData | Catch.io Developer Reference",
    "keywords": "Struct TrajectoryData Namespace : CatchIo.Runtime.Trajectory Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TrajectoryData Fields Curve Declaration public AnimationCurve Curve Field Value Type Description AnimationCurve FlatSpeed Declaration public float FlatSpeed Field Value Type Description Single MaxHeight Declaration public float MaxHeight Field Value Type Description Single TimeToTarget Declaration public float TimeToTarget Field Value Type Description Single"
  },
  "api/CatchIo.Runtime.Utility.AnimationParser.html": {
    "href": "api/CatchIo.Runtime.Utility.AnimationParser.html",
    "title": "Class AnimationParser | Catch.io Developer Reference",
    "keywords": "Class AnimationParser Inheritance Object AnimationParser Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public static class AnimationParser Methods MapAnimationToActionState(IEnumerable<AnimationClip>) Declaration public static Dictionary<CharacterActionType, StateAnimation> MapAnimationToActionState(IEnumerable<AnimationClip> clips) Parameters Type Name Description IEnumerable < AnimationClip > clips Returns Type Description Dictionary < CharacterActionType , StateAnimation > MapAnimationToMoveState(IEnumerable<AnimationClip>) Declaration public static Dictionary<CharacterMoveType, StateAnimation> MapAnimationToMoveState(IEnumerable<AnimationClip> clips) Parameters Type Name Description IEnumerable < AnimationClip > clips Returns Type Description Dictionary < CharacterMoveType , StateAnimation >"
  },
  "api/CatchIo.Runtime.Utility.Attributes.AutoRegisteredService.html": {
    "href": "api/CatchIo.Runtime.Utility.Attributes.AutoRegisteredService.html",
    "title": "Class AutoRegisteredService | Catch.io Developer Reference",
    "keywords": "Class AutoRegisteredService Inheritance Object Attribute AutoRegisteredService Namespace : CatchIo.Runtime.Utility.Attributes Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class AutoRegisteredService : Attribute, _Attribute"
  },
  "api/CatchIo.Runtime.Utility.Attributes.html": {
    "href": "api/CatchIo.Runtime.Utility.Attributes.html",
    "title": "Namespace CatchIo.Runtime.Utility.Attributes | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Utility.Attributes Classes AutoRegisteredService MonoScriptAttribute"
  },
  "api/CatchIo.Runtime.Utility.Attributes.MonoScriptAttribute.html": {
    "href": "api/CatchIo.Runtime.Utility.Attributes.MonoScriptAttribute.html",
    "title": "Class MonoScriptAttribute | Catch.io Developer Reference",
    "keywords": "Class MonoScriptAttribute Inheritance Object MonoScriptAttribute Namespace : CatchIo.Runtime.Utility.Attributes Assembly : cs.temp.dll.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class MonoScriptAttribute : PropertyAttribute Fields Type Declaration public Type Type Field Value Type Description Type"
  },
  "api/CatchIo.Runtime.Utility.ColorHelper.html": {
    "href": "api/CatchIo.Runtime.Utility.ColorHelper.html",
    "title": "Class ColorHelper | Catch.io Developer Reference",
    "keywords": "Class ColorHelper Inheritance Object ColorHelper Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public static class ColorHelper Methods GetColorUsingCharacterColorType(CharacterColorType) Declaration public static Color GetColorUsingCharacterColorType(CharacterColorType colorType) Parameters Type Name Description CharacterColorType colorType Returns Type Description Color"
  },
  "api/CatchIo.Runtime.Utility.Extensions.ArrayExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.ArrayExtensions.html",
    "title": "Class ArrayExtensions | Catch.io Developer Reference",
    "keywords": "Class ArrayExtensions Inheritance Object ArrayExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class ArrayExtensions Methods Populate<T>(T[], T) Declaration public static void Populate<T>(this T[] arr, T value) Parameters Type Name Description T[] arr T value Type Parameters Name Description T"
  },
  "api/CatchIo.Runtime.Utility.Extensions.AssemblyExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | Catch.io Developer Reference",
    "keywords": "Class AssemblyExtensions Inheritance Object AssemblyExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class AssemblyExtensions Methods GetTypesWithCustomAttribute<TAttribute>(Assembly) Declaration public static IEnumerable<Type> GetTypesWithCustomAttribute<TAttribute>(this Assembly assembly) where TAttribute : Attribute Parameters Type Name Description Assembly assembly Returns Type Description IEnumerable < Type > Type Parameters Name Description TAttribute"
  },
  "api/CatchIo.Runtime.Utility.Extensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.html",
    "title": "Namespace CatchIo.Runtime.Utility.Extensions | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Utility.Extensions Classes ArrayExtensions AssemblyExtensions IEnumerableExtensions PlayerExtensions RandomExtensions RoomExtensions Player Extension to wrap up access to player's Custom properties Extension for PhotonPlayer class to wrap up access to the player's custom properties. TypeExtensions Vector2Extensions Vector3Extensions"
  },
  "api/CatchIo.Runtime.Utility.Extensions.IEnumerableExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.IEnumerableExtensions.html",
    "title": "Class IEnumerableExtensions | Catch.io Developer Reference",
    "keywords": "Class IEnumerableExtensions Inheritance Object IEnumerableExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class IEnumerableExtensions Methods ForEach<T>(IEnumerable<T>, Action<T>) Declaration public static void ForEach<T>(this IEnumerable<T> source, Action<T> action) Parameters Type Name Description IEnumerable <T> source Action <T> action Type Parameters Name Description T"
  },
  "api/CatchIo.Runtime.Utility.Extensions.PlayerExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.PlayerExtensions.html",
    "title": "Class PlayerExtensions | Catch.io Developer Reference",
    "keywords": "Class PlayerExtensions Inheritance Object PlayerExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class PlayerExtensions Methods AddBeTrappedCount(Player, Int32) Declaration public static void AddBeTrappedCount(this Player player, int value) Parameters Type Name Description Player player Int32 value AddCursedCount(Player) Declaration public static void AddCursedCount(this Player player) Parameters Type Name Description Player player AddDeath(Player, Int32) Declaration public static void AddDeath(this Player player, int value) Parameters Type Name Description Player player Int32 value AddKill(Player, Int32) Add Score to PLayer Properties. Declaration public static void AddKill(this Player player, int value) Parameters Type Name Description Player player Int32 value AddPoint(Player, Int32) Declaration public static void AddPoint(this Player player, int value) Parameters Type Name Description Player player Int32 value AddTrapCount(Player, Int32) Declaration public static void AddTrapCount(this Player player, int value) Parameters Type Name Description Player player Int32 value GetBeTrappedCount(Player) Declaration public static int GetBeTrappedCount(this Player player) Parameters Type Name Description Player player Returns Type Description Int32 GetClass(Player) Declaration public static string GetClass(this Player player) Parameters Type Name Description Player player Returns Type Description String GetColor(Player) Declaration public static CharacterColorType GetColor(this Player player) Parameters Type Name Description Player player Returns Type Description CharacterColorType GetCursedCount(Player) Declaration public static int GetCursedCount(this Player player) Parameters Type Name Description Player player Returns Type Description Int32 GetDeaths(Player) Declaration public static int GetDeaths(this Player player) Parameters Type Name Description Player player Returns Type Description Int32 GetKills(Player) Get the current Player Score. Declaration public static int GetKills(this Player player) Parameters Type Name Description Player player Returns Type Description Int32 GetPoint(Player) Declaration public static int GetPoint(this Player player) Parameters Type Name Description Player player Returns Type Description Int32 GetSkinName(Player) Declaration public static string GetSkinName(this Player player) Parameters Type Name Description Player player Returns Type Description String GetTrapCount(Player) Declaration public static int GetTrapCount(this Player player) Parameters Type Name Description Player player Returns Type Description Int32 IsAlive(Player) Can be used to stored current Player state. e.g Player dies, set prop to false. Declaration public static bool IsAlive(this Player player) Parameters Type Name Description Player player Target Player Returns Type Description Boolean IsCharacterSpawned(Player) Declaration public static bool IsCharacterSpawned(this Player player) Parameters Type Name Description Player player Returns Type Description Boolean IsPropertiesReset(Player) Just to make sure that the player's reset is already finished Declaration public static bool IsPropertiesReset(this Player player) Parameters Type Name Description Player player Returns Type Description Boolean IsReady(Player) Get PhotonPlayer Ready State, if null its not set. Declaration public static bool IsReady(this Player player) Parameters Type Name Description Player player Returns Type Description Boolean ResetProperties(Player) Deletes all Properties. Declaration public static void ResetProperties(this Player player) Parameters Type Name Description Player player Target Player ResetPropertiesEnum(Player, Func<IEnumerator>) Declaration public static IEnumerator ResetPropertiesEnum(this Player player, Func<IEnumerator> onOperationDone = null) Parameters Type Name Description Player player Func < IEnumerator > onOperationDone Returns Type Description IEnumerator SetAlive(Player, Boolean) Change current Players state. Declaration public static void SetAlive(this Player player, bool alive) Parameters Type Name Description Player player Target Player Boolean alive True/False == Alive/Dead SetBeTrappedCount(Player, Int32) Declaration public static void SetBeTrappedCount(this Player player, int value) Parameters Type Name Description Player player Int32 value SetCharacterSpawned(Player, Boolean) Declaration public static void SetCharacterSpawned(this Player player, bool value) Parameters Type Name Description Player player Boolean value SetClass(Player, String) Declaration public static void SetClass(this Player player, string value) Parameters Type Name Description Player player String value SetColor(Player, CharacterColorType) Declaration public static void SetColor(this Player player, CharacterColorType colorType) Parameters Type Name Description Player player CharacterColorType colorType SetCursedCount(Player, Int32) Declaration public static void SetCursedCount(this Player player, int count) Parameters Type Name Description Player player Int32 count SetDeaths(Player, Int32) Declaration public static void SetDeaths(this Player player, int value) Parameters Type Name Description Player player Int32 value SetKill(Player, Int32) Assign Score to Player Properties.Overrides the current Score. Declaration public static void SetKill(this Player player, int value) Parameters Type Name Description Player player Target Photon Player Int32 value Score SetPoint(Player, Int32) Declaration public static void SetPoint(this Player player, int value) Parameters Type Name Description Player player Int32 value SetReady(Player, Boolean) Change PhotonPlayer Ready State. Declaration public static void SetReady(this Player player, bool value) Parameters Type Name Description Player player Boolean value SetSkinName(Player, String) Declaration public static void SetSkinName(this Player player, string value) Parameters Type Name Description Player player String value SetTrapCount(Player, Int32) Declaration public static void SetTrapCount(this Player player, int value) Parameters Type Name Description Player player Int32 value"
  },
  "api/CatchIo.Runtime.Utility.Extensions.RandomExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.RandomExtensions.html",
    "title": "Class RandomExtensions | Catch.io Developer Reference",
    "keywords": "Class RandomExtensions Inheritance Object RandomExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class RandomExtensions Methods GetRandomIntWithoutRepeating(Int32, Int32, Int32) Declaration public static List<int> GetRandomIntWithoutRepeating(int length, int minInclusive, int maxExclusive) Parameters Type Name Description Int32 length Int32 minInclusive Int32 maxExclusive Returns Type Description List < Int32 > RandomString(Int32) Declaration public static string RandomString(int length) Parameters Type Name Description Int32 length Returns Type Description String"
  },
  "api/CatchIo.Runtime.Utility.Extensions.RoomExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.RoomExtensions.html",
    "title": "Class RoomExtensions | Catch.io Developer Reference",
    "keywords": "Class RoomExtensions Player Extension to wrap up access to player's Custom properties Extension for PhotonPlayer class to wrap up access to the player's custom properties. Inheritance Object RoomExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class RoomExtensions Methods GetGameModeName(Room) Checks Room Properties for stored string. Creates a instance and returns it as GameMode. Declaration public static string GetGameModeName(this Room room) Parameters Type Name Description Room room Stored Mode instance casted into GameMode Returns Type Description String GetGameModeTime(Room) Declaration public static float GetGameModeTime(this Room room) Parameters Type Name Description Room room Returns Type Description Single GetMap(Room) Get Map Name from Room Properties. Declaration public static string GetMap(this Room room) Parameters Type Name Description Room room Returns Type Description String GetPing(Room) Get Ping from Room Propertiess Declaration public static int GetPing(this Room room) Parameters Type Name Description Room room Returns Type Description Int32 GetRoomState(Room) Checks Room Properties for stored string. Creates a instance and returns it as GameMode. Declaration public static RoomState GetRoomState(this Room room) Parameters Type Name Description Room room Stored Mode instance casted into GameMode Returns Type Description RoomState SetGameModeName(Room, String) Store GameMode in Room Properties. Should be set by Room creation. Declaration public static void SetGameModeName(this Room room, string name) Parameters Type Name Description Room room String name SetGameModeTime(Room, Single) Declaration public static void SetGameModeTime(this Room room, float value) Parameters Type Name Description Room room Single value SetMap(Room, String) Store picked Map in Room Properties. Declaration public static void SetMap(this Room room, string mapName) Parameters Type Name Description Room room String mapName SetPing(Room, Int32) Store Ping in Room Properties. Declaration public static void SetPing(this Room room, int value) Parameters Type Name Description Room room Int32 value SetRoomState(Room, RoomState) Declaration public static void SetRoomState(this Room room, RoomState state) Parameters Type Name Description Room room RoomState state"
  },
  "api/CatchIo.Runtime.Utility.Extensions.TypeExtensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.TypeExtensions.html",
    "title": "Class TypeExtensions | Catch.io Developer Reference",
    "keywords": "Class TypeExtensions Inheritance Object TypeExtensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class TypeExtensions Methods IsMonoBehaviour(Type) Declaration public static bool IsMonoBehaviour(this Type t) Parameters Type Name Description Type t Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.Utility.Extensions.Vector2Extensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.Vector2Extensions.html",
    "title": "Class Vector2Extensions | Catch.io Developer Reference",
    "keywords": "Class Vector2Extensions Inheritance Object Vector2Extensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class Vector2Extensions Methods ToVector2Int(Vector2) Declaration public static Vector2Int ToVector2Int(this Vector2 vector2) Parameters Type Name Description Vector2 vector2 Returns Type Description Vector2Int toVector3(Vector2) Declaration public static Vector3 toVector3(this Vector2 vec2) Parameters Type Name Description Vector2 vec2 Returns Type Description Vector3"
  },
  "api/CatchIo.Runtime.Utility.Extensions.Vector3Extensions.html": {
    "href": "api/CatchIo.Runtime.Utility.Extensions.Vector3Extensions.html",
    "title": "Class Vector3Extensions | Catch.io Developer Reference",
    "keywords": "Class Vector3Extensions Inheritance Object Vector3Extensions Namespace : CatchIo.Runtime.Utility.Extensions Assembly : cs.temp.dll.dll Syntax public static class Vector3Extensions Methods toVector2(Vector3) Declaration public static Vector2 toVector2(this Vector3 vec3) Parameters Type Name Description Vector3 vec3 Returns Type Description Vector2 ToVector3Int(Vector2) Declaration public static Vector3Int ToVector3Int(this Vector2 vector2) Parameters Type Name Description Vector2 vector2 Returns Type Description Vector3Int"
  },
  "api/CatchIo.Runtime.Utility.html": {
    "href": "api/CatchIo.Runtime.Utility.html",
    "title": "Namespace CatchIo.Runtime.Utility | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Utility Classes AnimationParser ColorHelper MathHelper Optional<T> PolygonHelper PropertyHelper StringHelper Structs StateAnimation"
  },
  "api/CatchIo.Runtime.Utility.MathHelper.html": {
    "href": "api/CatchIo.Runtime.Utility.MathHelper.html",
    "title": "Class MathHelper | Catch.io Developer Reference",
    "keywords": "Class MathHelper Inheritance Object MathHelper Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public static class MathHelper Methods ClampListIndex(Int32, Int32) Declaration public static int ClampListIndex(int index, int listSize) Parameters Type Name Description Int32 index Int32 listSize Returns Type Description Int32 DirectionFromAngle(Single) Declaration public static Vector2 DirectionFromAngle(float angleInDegrees) Parameters Type Name Description Single angleInDegrees Returns Type Description Vector2 GetAngle(Single) Declaration public static float GetAngle(float angle) Parameters Type Name Description Single angle Returns Type Description Single GetCentroidOfPolygon(List<Vector2>) Declaration public static Vector2 GetCentroidOfPolygon(List<Vector2> poly) Parameters Type Name Description List < Vector2 > poly Returns Type Description Vector2 GetIntAngle(Int32) Declaration public static int GetIntAngle(int angle) Parameters Type Name Description Int32 angle Returns Type Description Int32 GetIntAngle(Single) Declaration public static int GetIntAngle(float angle) Parameters Type Name Description Single angle Returns Type Description Int32 GetVector2ToUseDirection(Int32) Declaration public static Vector2 GetVector2ToUseDirection(int direction) Parameters Type Name Description Int32 direction Returns Type Description Vector2 IsNaNVector(Vector2) Declaration public static bool IsNaNVector(Vector2 vector2) Parameters Type Name Description Vector2 vector2 Returns Type Description Boolean"
  },
  "api/CatchIo.Runtime.Utility.Optional-1.html": {
    "href": "api/CatchIo.Runtime.Utility.Optional-1.html",
    "title": "Class Optional<T> | Catch.io Developer Reference",
    "keywords": "Class Optional<T> Inheritance Object Optional<T> Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax [Serializable] public class Optional<T> Type Parameters Name Description T Constructors Optional(T) Declaration public Optional(T initValue) Parameters Type Name Description T initValue Properties HasValue Declaration public bool HasValue { get; } Property Value Type Description Boolean Value Declaration public T Value { get; } Property Value Type Description T"
  },
  "api/CatchIo.Runtime.Utility.PolygonHelper.html": {
    "href": "api/CatchIo.Runtime.Utility.PolygonHelper.html",
    "title": "Class PolygonHelper | Catch.io Developer Reference",
    "keywords": "Class PolygonHelper Inheritance Object PolygonHelper Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public static class PolygonHelper Methods CalculatePolygonArea(List<Vector2>) Declaration public static float CalculatePolygonArea(List<Vector2> vertices) Parameters Type Name Description List < Vector2 > vertices Returns Type Description Single DisplayPolygon(List<Vector2>) Declaration public static void DisplayPolygon(List<Vector2> vertices) Parameters Type Name Description List < Vector2 > vertices GetClippedPolygonResult(List<Vector2>, List<Vector2>) Declaration public static GreinerHormann.ClipPolygonResult GetClippedPolygonResult(List<Vector2> poly, List<Vector2> clipPoly) Parameters Type Name Description List < Vector2 > poly List < Vector2 > clipPoly Returns Type Description GreinerHormann.ClipPolygonResult GetPolygonVerticesClockwise(List<Vector2>) Declaration public static List<Vector2> GetPolygonVerticesClockwise(List<Vector2> vertices) Parameters Type Name Description List < Vector2 > vertices Returns Type Description List < Vector2 >"
  },
  "api/CatchIo.Runtime.Utility.PropertyHelper.html": {
    "href": "api/CatchIo.Runtime.Utility.PropertyHelper.html",
    "title": "Class PropertyHelper | Catch.io Developer Reference",
    "keywords": "Class PropertyHelper Inheritance Object PropertyHelper Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public static class PropertyHelper Methods AddValueToProperty(Player, String, Int32) Check Player Properties for a Property Value, add given value to it. Declaration public static void AddValueToProperty(this Player player, string property, int value) Parameters Type Name Description Player player Photon Player String property Property as string Int32 value Value to set. AddValueToProperty(Room, String, Int32) Check Room Properties for a Property Value, add given value to it. Declaration public static void AddValueToProperty(this Room room, string property, int value) Parameters Type Name Description Room room Photon Room String property Property as string Int32 value Value to set. GetPropertyValue<T>(Player, String, T) Check Player Properties for a Property Value. Declaration public static T GetPropertyValue<T>(this Player player, string property, T defaultValue) Parameters Type Name Description Player player Photon Player String property Property as string T defaultValue Fallback Value. Returns Type Description T Property Value Type Parameters Name Description T Type GetPropertyValue<T>(Room, String, T) Check Room Properties for a Property Value. Declaration public static T GetPropertyValue<T>(this Room room, string property, T defaultValue) Parameters Type Name Description Room room Photon Room String property Property as string T defaultValue Fallback Value. Returns Type Description T Property Value Type Parameters Name Description T Type SetPropertyValue<T>(Player, String, T) Check Player Properties for a Property Value and set it. Declaration public static void SetPropertyValue<T>(this Player player, string property, T value) Parameters Type Name Description Player player Photon Player String property Property as string T value Value to set. Type Parameters Name Description T Type SetPropertyValue<T>(Room, String, T) Check Room Properties for a Property Value and set it. Declaration public static void SetPropertyValue<T>(this Room room, string property, T value) Parameters Type Name Description Room room Photon Room String property Property as string T value Value to set. Type Parameters Name Description T Type"
  },
  "api/CatchIo.Runtime.Utility.Scene.html": {
    "href": "api/CatchIo.Runtime.Utility.Scene.html",
    "title": "Namespace CatchIo.Runtime.Utility.Scene | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Utility.Scene Classes SceneObject"
  },
  "api/CatchIo.Runtime.Utility.Scene.SceneObject.html": {
    "href": "api/CatchIo.Runtime.Utility.Scene.SceneObject.html",
    "title": "Class SceneObject | Catch.io Developer Reference",
    "keywords": "Class SceneObject Inheritance Object SceneObject Namespace : CatchIo.Runtime.Utility.Scene Assembly : cs.temp.dll.dll Syntax [Serializable] public class SceneObject Methods GetFormattedSceneName() Declaration public string GetFormattedSceneName() Returns Type Description String GetSceneAssetName() Declaration public string GetSceneAssetName() Returns Type Description String Operators Implicit(SceneObject to String) Declaration public static implicit operator string (SceneObject sceneObject) Parameters Type Name Description SceneObject sceneObject Returns Type Description String Implicit(String to SceneObject) Declaration public static implicit operator SceneObject(string sceneName) Parameters Type Name Description String sceneName Returns Type Description SceneObject"
  },
  "api/CatchIo.Runtime.Utility.ServiceLocator.html": {
    "href": "api/CatchIo.Runtime.Utility.ServiceLocator.html",
    "title": "Namespace CatchIo.Runtime.Utility.ServiceLocator | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Utility.ServiceLocator Classes MonoRegistrable ReflectionService ServiceLocator ServiceLocatorException Interfaces IRegistrable"
  },
  "api/CatchIo.Runtime.Utility.ServiceLocator.IRegistrable.html": {
    "href": "api/CatchIo.Runtime.Utility.ServiceLocator.IRegistrable.html",
    "title": "Interface IRegistrable | Catch.io Developer Reference",
    "keywords": "Interface IRegistrable Namespace : CatchIo.Runtime.Utility.ServiceLocator Assembly : cs.temp.dll.dll Syntax public interface IRegistrable"
  },
  "api/CatchIo.Runtime.Utility.ServiceLocator.MonoRegistrable.html": {
    "href": "api/CatchIo.Runtime.Utility.ServiceLocator.MonoRegistrable.html",
    "title": "Class MonoRegistrable | Catch.io Developer Reference",
    "keywords": "Class MonoRegistrable Inheritance Object MonoRegistrable Implements IRegistrable Namespace : CatchIo.Runtime.Utility.ServiceLocator Assembly : cs.temp.dll.dll Syntax public abstract class MonoRegistrable : MonoBehaviour, IRegistrable Methods Reset() Declaration protected void Reset() Implements IRegistrable"
  },
  "api/CatchIo.Runtime.Utility.ServiceLocator.ReflectionService.html": {
    "href": "api/CatchIo.Runtime.Utility.ServiceLocator.ReflectionService.html",
    "title": "Class ReflectionService | Catch.io Developer Reference",
    "keywords": "Class ReflectionService Inheritance Object ReflectionService Namespace : CatchIo.Runtime.Utility.ServiceLocator Assembly : cs.temp.dll.dll Syntax public static class ReflectionService Methods GetAllAutoRegisteredServices() Declaration public static IEnumerable<Type> GetAllAutoRegisteredServices() Returns Type Description IEnumerable < Type >"
  },
  "api/CatchIo.Runtime.Utility.ServiceLocator.ServiceLocator.html": {
    "href": "api/CatchIo.Runtime.Utility.ServiceLocator.ServiceLocator.html",
    "title": "Class ServiceLocator | Catch.io Developer Reference",
    "keywords": "Class ServiceLocator Inheritance Object ServiceLocator Namespace : CatchIo.Runtime.Utility.ServiceLocator Assembly : cs.temp.dll.dll Syntax public class ServiceLocator : MonoBehaviour Methods Get<TService>(Boolean) Declaration public static TService Get<TService>(bool forced = false) where TService : IRegistrable, new() Parameters Type Name Description Boolean forced Returns Type Description TService Type Parameters Name Description TService Initialize() Declaration public static void Initialize() IsRegistered(Type) Declaration public static bool IsRegistered(Type t) Parameters Type Name Description Type t Returns Type Description Boolean IsRegistered<TService>() Declaration public static bool IsRegistered<TService>() Returns Type Description Boolean Type Parameters Name Description TService Register<TService>(TService, Boolean) Declaration public static void Register<TService>(TService service, bool safe = true) where TService : IRegistrable, new() Parameters Type Name Description TService service Boolean safe Type Parameters Name Description TService"
  },
  "api/CatchIo.Runtime.Utility.ServiceLocator.ServiceLocatorException.html": {
    "href": "api/CatchIo.Runtime.Utility.ServiceLocator.ServiceLocatorException.html",
    "title": "Class ServiceLocatorException | Catch.io Developer Reference",
    "keywords": "Class ServiceLocatorException Inheritance Object Exception ServiceLocatorException Namespace : CatchIo.Runtime.Utility.ServiceLocator Assembly : cs.temp.dll.dll Syntax public class ServiceLocatorException : Exception, ISerializable, _Exception Constructors ServiceLocatorException(String) Declaration public ServiceLocatorException(string message) Parameters Type Name Description String message"
  },
  "api/CatchIo.Runtime.Utility.Singleton.html": {
    "href": "api/CatchIo.Runtime.Utility.Singleton.html",
    "title": "Namespace CatchIo.Runtime.Utility.Singleton | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Utility.Singleton Classes Singleton<T> SingletonMonoBehaviour<T>"
  },
  "api/CatchIo.Runtime.Utility.Singleton.Singleton-1.html": {
    "href": "api/CatchIo.Runtime.Utility.Singleton.Singleton-1.html",
    "title": "Class Singleton<T> | Catch.io Developer Reference",
    "keywords": "Class Singleton<T> Inheritance Object Singleton<T> Namespace : CatchIo.Runtime.Utility.Singleton Assembly : cs.temp.dll.dll Syntax public class Singleton<T> where T : class Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/CatchIo.Runtime.Utility.Singleton.SingletonMonoBehaviour-1.html": {
    "href": "api/CatchIo.Runtime.Utility.Singleton.SingletonMonoBehaviour-1.html",
    "title": "Class SingletonMonoBehaviour<T> | Catch.io Developer Reference",
    "keywords": "Class SingletonMonoBehaviour<T> Inheritance Object SingletonMonoBehaviour<T> Namespace : CatchIo.Runtime.Utility.Singleton Assembly : cs.temp.dll.dll Syntax public abstract class SingletonMonoBehaviour<T> : MonoBehaviour where T : MonoBehaviour Type Parameters Name Description T Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods OnApplicationQuit() When Unity quits, it destroys objects in a random order. In principle, a Singleton is only destroyed when application quits. If any script calls Instance after it have been destroyed, it will create a buggy ghost object that will stay on the Editor scene even after stopping playing the Application. Really bad! So, this was made to be sure we're not creating that buggy ghost object. Declaration protected virtual void OnApplicationQuit()"
  },
  "api/CatchIo.Runtime.Utility.StateAnimation.html": {
    "href": "api/CatchIo.Runtime.Utility.StateAnimation.html",
    "title": "Struct StateAnimation | Catch.io Developer Reference",
    "keywords": "Struct StateAnimation Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public readonly struct StateAnimation Constructors StateAnimation(String, AnimationClip) Declaration public StateAnimation(string name, AnimationClip clip) Parameters Type Name Description String name AnimationClip clip Fields Clip Declaration public readonly AnimationClip Clip Field Value Type Description AnimationClip Name Declaration public readonly string Name Field Value Type Description String"
  },
  "api/CatchIo.Runtime.Utility.StringHelper.html": {
    "href": "api/CatchIo.Runtime.Utility.StringHelper.html",
    "title": "Class StringHelper | Catch.io Developer Reference",
    "keywords": "Class StringHelper Inheritance Object StringHelper Namespace : CatchIo.Runtime.Utility Assembly : cs.temp.dll.dll Syntax public static class StringHelper Methods PutSpaceAfterUpperCase(String) Declaration public static string PutSpaceAfterUpperCase(string input) Parameters Type Name Description String input Returns Type Description String"
  },
  "api/CatchIo.Runtime.Values.FixedDamage.html": {
    "href": "api/CatchIo.Runtime.Values.FixedDamage.html",
    "title": "Class FixedDamage | Catch.io Developer Reference",
    "keywords": "Class FixedDamage Inheritance Object FixedDamage Namespace : CatchIo.Runtime.Values Assembly : cs.temp.dll.dll Syntax public class FixedDamage : IDamage Constructors FixedDamage(Single, DamageSfxType, Single, Vector2) Declaration public FixedDamage(float damage, DamageSfxType takeDamageSfx, float knockback = 0F, Vector2 damageOrigin = null) Parameters Type Name Description Single damage DamageSfxType takeDamageSfx Single knockback Vector2 damageOrigin Methods GetDamage(Single) Declaration public float GetDamage(float remainHealth) Parameters Type Name Description Single remainHealth Returns Type Description Single GetKnockback() Declaration public float GetKnockback() Returns Type Description Single GetOrigin() Declaration public Vector2 GetOrigin() Returns Type Description Vector2 GetTakeDamageSfx() Declaration public DamageSfxType GetTakeDamageSfx() Returns Type Description DamageSfxType SetOrigin(Vector2) Declaration public void SetOrigin(Vector2 damageOrigin) Parameters Type Name Description Vector2 damageOrigin"
  },
  "api/CatchIo.Runtime.Values.html": {
    "href": "api/CatchIo.Runtime.Values.html",
    "title": "Namespace CatchIo.Runtime.Values | Catch.io Developer Reference",
    "keywords": "Namespace CatchIo.Runtime.Values Classes FixedDamage PercentageDamage"
  },
  "api/CatchIo.Runtime.Values.PercentageDamage.html": {
    "href": "api/CatchIo.Runtime.Values.PercentageDamage.html",
    "title": "Class PercentageDamage | Catch.io Developer Reference",
    "keywords": "Class PercentageDamage Inheritance Object PercentageDamage Namespace : CatchIo.Runtime.Values Assembly : cs.temp.dll.dll Syntax public class PercentageDamage : IDamage Constructors PercentageDamage(Single, DamageSfxType, Single, Vector2) Declaration public PercentageDamage(float percentage, DamageSfxType takeDamageSfx, float knockback, Vector2 damageOrigin) Parameters Type Name Description Single percentage DamageSfxType takeDamageSfx Single knockback Vector2 damageOrigin Methods GetDamage(Single) Declaration public float GetDamage(float remainHealth) Parameters Type Name Description Single remainHealth Returns Type Description Single GetKnockback() Declaration public float GetKnockback() Returns Type Description Single GetOrigin() Declaration public Vector2 GetOrigin() Returns Type Description Vector2 GetTakeDamageSfx() Declaration public DamageSfxType GetTakeDamageSfx() Returns Type Description DamageSfxType SetOrigin(Vector2) Declaration public void SetOrigin(Vector2 damageOrigin) Parameters Type Name Description Vector2 damageOrigin"
  },
  "index.html": {
    "href": "index.html",
    "title": "Project Catch.io Developer Reference | Catch.io Developer Reference",
    "keywords": "Project Catch.io Developer Reference Introduction This is the developer reference for Witch One , internally referred to as Project Catch.io . If you are part of development team, feel free to add new tasks or comment on existing ones. Every information that is required for developing with the Project Catch.io team will be documented here. Such information includes: Project folder structure Coding styles and guidelines Project contribution format (semantic version for this project, Pull Request format, etc.) Milestones and progress reporting methods Team roles Documentation format and more... You can think of this as a general guideline and a starting point for joining the team or unifying how our works should be prevented in order for them to be considered 'finished'. To keep things organized, project members should document their work and tell everyone how you want others to handle your work. Please keep in mind that you are not expected to read all the docs, but you are expected to understand the parts that is related to your task. Project Resources All resources and documents related to the development of project Catch.io is split amongst various repositories, sites and services. We will list all of them here and explain what their purposes are. Some links listed here will not be accessible by the public while some are. Please change the list content if we decide to make adjustments to the team management structure. Catch.io Project Repository: The repository for the source code of project Catch.io. This repository is made private, and we only allow access to project developers. However, contents like code documentation or ongoing test builds will be made available to the public with the power of Github CI. Catch.io docs repository : The source code for project developer references are kept in this repository. Currently, this repo contains two different document pages. Project Development Manual : Hosted via Github Pages, this page contains the auto generated scripting reference for this project. The content of this page will change with every update made to the Catch.io source code. It is convenient, but hard to migrate to other pages as this does not use Markdown for API references (only code manuals are in Markdown). Google Drive Shared Folder : Internal documents, weekly meeting records, brainstorming records, project expenses, art/music assets for the project and other information that are meant to be stored for a long time and only meant for team members will be stored here. Non-programmers will mostly interact with Google Drive. Itch.io page : Itch.io is used for sharing quick prototype builds of the game (in WebGL for most cases) both inside and outside the team. Generally, this page is used for quick internal testing, but we may consider releasing the game here at some point. Trello Project Board : Still experimental, but this is where the development progress regarding Catch.io will be tracked. Catch.io GDD : Hosted by Gitbook, this page contains everything about the project such as the game mechanics, expected features, rough timeline, expected release platforms, general marketing strategy, pivot strategies, and more. Abbreviations & Definitions To increase the efficiency of communications between members, it is good to use abbreviations. If there are any abbreviations (and the definition of that word) you are using that is foreign to other new members, please add it here. PR: Pull Request (when merging a branch or a fork to the master repository) Repo: Repository (Git repository) doc: Documentation (Projects documentation like this one will be referred to as docs) WIP: Working In Progress impl: short for implement or implementation LGTM: Looks Good to Me (used when a PR does not have any issues and is good to merge) Scripts: Refers to the .cs code that contains game play logic, but are not directly used as part of a Unity game object Components: This is also a .cs code, but it is meant to be used as a component for Unity game objects How to Write Documents Project docs like this one must be written in Markdown. You can use stackedit.io to write a quick doc, or use the Markdown All in One extension for VS Code. Documentations should be long and comprehensive so anyone can understand. As a general format, think of this README doc as a template to start from. Q: What should be a doc Anything that requires more than one people to work on either now or in the future. Or if you have any special requirements regarding your work or working style, write a doc to express that to other members. Q: Who can write a doc Anyone within the team. You will need other's permission to edit an existing doc (except for fixing typos or obvious problems), but creating a new one is completely up to you. Q: Any word requirements It should be comprehensive, but not boring. There are no strict word count, however it should be long enough to let the reader understand what you want to say and short enough to not make the reader fall asleep."
  },
  "manual/artist-guidelines.html": {
    "href": "manual/artist-guidelines.html",
    "title": "Art Asset Structure | Catch.io Developer Reference",
    "keywords": "Art Asset Structure This section will describe how art assets for Catch.io should be structured. Directory Every art assets used in the game (excluding UI) is stored in Assets/Textures/ . This includes character sprites, environmental objects, throwable objects and map tile sets. Everything relating to the UI such as menu, title, inventory icon, etc will be stored in Assets/Textures/UI/ . Asset import settings When importing the assets to Unity engine, the file settings should be like the following: Texture Type: Sprite (2D and UI) Sprite Mode: Multiple or Single Pixels Per Unit: 32 Filter Mode: Point (no filter) Compression: None When slicing animated sprites, it is recommended to use the Grid by Cell Count method. You can find the detailed image import setting inside the Assets/Editor/Presets/InGameSpriteImport_Default.preset preset file. Submitting Assets For artists who are submitting their work, it is recommended to upload the work to Google Drive Team STEP/Projects/Project Catch.io/Sprites/ folder with the appropriate name of the sprite that is being added. Because Google Drive does not send responsive notifications for uploading images, the artist will have to notify the developer that their work has been uploaded via Slack. Folder Structure Animated character sprites will be placed in the Characters/ folder with the name of the character as the root directory. Inside this folder, there should be a subdirectory that describes the action (ex: Characters/Shade/Walking/ , Characters/Shade/Running/ , Characters/Shade/Crouching/ , etc.). The actual image file will be saved within those folders. Completely optional, but it is recommended to create source folder as well that stores the original work file in any format as a backup solution (ex: Characters/Shade/source/running.aseprite ). Image Format It is recommended that the final asset is saved as .png , but Unity supports a vast number of image formats, so as long as the file can save alpha channel data or layer data (if required), the artist can save it as any format as they want. For any animated sprites, it is recommended to separate the sprite asset into animation sheets like the following sample animation. Character sprites should be separated into each direction where a single image contains all the frames for that direction. The asset file name should be prefixed with the action and suffixed with the direction that the character is facing with a space in between the two. The direction should be named as the cardinal direction (ex: Run NE.png , Walk S.png , etc.). To summarize all of this, character assets should have the format of Characters/{Character Name}/{Action}/{Action Direction}.png . Theses are some examples: Characters/Shade/Walking/Walking NW.png Characters/Shade/Running/Running N.png Characters/Shade/Throwing/Throwing SW.png Item/Torch/Torch1.png Item/Frog/Red Frog/Back.png Asset Color Palette Both characters and props must follow the following color palette to keep a consistent feeling for the visual assets. A single component of an asset (such as metal, gold, cloth, etc.) should be within 2 variations of light to dark palettes/color. Feel free to be creative, but the main idea is that for artists to make an object (e.g a wooden barrel) it should use the same wood colors as the trees in the environment for consistent visuals."
  },
  "manual/character-state-machine.html": {
    "href": "manual/character-state-machine.html",
    "title": "Character state machine | Catch.io Developer Reference",
    "keywords": "Character state machine What is FSM? For more information about FSM, check this video and this page Why we choose the FSM pattern? The character class is so huge and do a lot of works so when the error is occurred, we can't find the any clues to fix it. But FSM pattern can separate the character features. Therefore, we can easy to debug the error and find it. We can understand the character's behavior each character states. How to create character state? You have to open the character state machine window (You can open Tools/Generate/CharacterStateMachine ). You can see the this Window. How does it work? Read the character move and action types that provide by designer(you). Find the character state script If cannot find the script, create a new character script. If find the unnecessary the script, delete it. Finally, add character states dictionary and states getter to character state factory script. Migration guide If you want to change the CharacterStateType( Scripts\\PlayerCharacter\\FSM\\Type\\.cs ) script location, you have to fix the CharacterStateTypeFormat.FileFormat namespace and MOVE_STATE_TYPE_FILE_PATH . ACTION_STATE_TYPE_FILE_PATH in Editor\\Windows\\CharacterStateMachineWindow\\CharacterStateMachineWindow.cs . Same the CharacterState( Scripts\\PlayerCharacter\\FSM\\States\\MoveStates(ActionStates)\\.cs ) you have to fix the CharacterStateClassFormat.FileFormat namespace, MOVE_STATES_FOLDER_PATH and Action_STATES_FOLDER_PATH . Same the CharacterStateFactory( Scripts\\PlayerCharacter\\FSM\\States\\CharacterStateFactory.cs ) class you have to fix the CharacterStateFactoryFormat.FileFormat namespace and CHARACTER_STATE_FACTORY_PATH . Character states"
  },
  "manual/character-uml.html": {
    "href": "manual/character-uml.html",
    "title": "Character UML | Catch.io Developer Reference",
    "keywords": "Character UML If you want to edit this document, click the specified link. Click the SVG button to extract to svg and enter the developer mode to click F12. Copy the element and paste maskup to this link and download it. Repalced resources/UML/.svg file with one you modified. Character Core you can edit this link Character Graphics you can edit this link Character FSM you can edit this link Character Inventory you can edit this link Character Detector you can edit this link"
  },
  "manual/coding-style.html": {
    "href": "manual/coding-style.html",
    "title": "Coding Style | Catch.io Developer Reference",
    "keywords": "Coding Style This section will discuss the naming convention of code, files, github branches, etc. If you find any files with inconsistent naming, please fix them accordingly. C# Naming Conventions Because Unity uses C# as its preferred language, the standard C# naming conventions will be used within this project. This scheme will apply to C# script names as well. For further details regarding C# coding conventions, please refer to the following documents: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/general-naming-conventions https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/interface https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/names-of-classes-structs-and-interfaces https://blog.submain.com/c-interface-definition-examples/ https://www.c-sharpcorner.com/article/types-of-relationships-in-object-oriented-programming-oops/ Everything else will mostly be kept consistent with Unity/C# conventions, but for this project, we will not be having the m_ prefix for component variables in Unity. Namespaces All C# scripts that are inside the Assets/Scripts folder must have a namespace to it. The namespace should be CatchIo.<folder name> , where the <folder name> is replaced with the folder that the script is in. Unity Asset Names Our project will use a different naming scheme depending on the asset type. Scripts, prefabs, and other assets generated by Unity: CamelCase Images, sounds, tilesets, and other assets outside of Unity: snake_case Scene names should be in Camel Case as well as items within the scenes too. It's discouraged to use spaces for game object names, but not mandatory as there are some generated objects that do include a space in the name (ex: Main Camera ). Style Rules This project uses EditorConfig to maintain its code style. Some style rules have been disabled due to compatibility with how Unity handles C# scripts. These settings will be automatically read by Visual Studio. For developers using VS Code, we have stored a pre-configured workspace settings and recommended extensions in the .vscode folder for easy configuration. The repository for this project will check for the code style via dotnet-format for every PR. This check must pass in order for new code to be merged to the main branch. Formatting Code Although both VS Code and Visual Studio offers a built-in code cleaner that can be triggered for every save, we found that there are some style rules won't apply with this method. So we recommend using the development version of dotnet-format tool. You can install this tool by using this following command from your terminal: dotnet tool install -g dotnet-format --version 5.0.142902 --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json To format the entire script folder, you will have to first open a script in Unity with Visual Studio so that Unity engine can generate the .csproj file. Once that is done, use the following command from the root of this project folder: dotnet-format Catch.io.sln --fix-style warn If the above command doesn't work due to this error or multiple build files, you can use the following command to fix at least the white spaces. dotnet format whitespace --folder --verbosity n"
  },
  "manual/development-environment.html": {
    "href": "manual/development-environment.html",
    "title": "Setting up the development environment | Catch.io Developer Reference",
    "keywords": "Setting up the development environment Game Development Environment Unity Engine The development for Witch One (development title Catch.io) will be in most cases, done in Unity. We recommend installing Unity Hub as it supports various OS and can install multiple versions of the Unity Editor. Installing Unity Hub Mac and Windows You can install the latest version of Unity Hub through the official download page . Linux In the past, you could have downloaded the .AppImage executable of Unity Hub, but this has been deprecated from 2022. Currently, you can follow the instruction written here to install Unity Hub for Linux. There is a known issue on Ubuntu 22.04 regarding missing dependencies. Read this thread for more information. Engine Version Currently, we are using Unity version 2021.3.12f1 (8af3c3e441b1) . You can check the official release archive from this page , or install directly via Unity Hub by clicking this link . For Linux users who run Unity through an .AppImage executable, the deep link installation provided by the Unity release archive may not work. Instead, you will have to pass the deep link URL as a parameter for the application file from your terminal. ./UnityHub.AppImage unityhub://2021.3.12f1/8af3c3e441b1 Setting The Default IDE You can change your preferred IDE/Editor in Unity by going to the Edit -> Preferences -> External Tools menu. Regarding how to install the IDE and text editors, please refer to the next section. Using The Staging Environment Testing the development build on the fly is very important for our project. Because our game is using a custom web interface for some important features, it is challenging for us to quickly test a build by using the default UI or websites like itch.io. Therefore, we created a custom solution to facilitate a simple and quick way to prepare multiple builds test them through a single interface. In theory, this solution can work for any cloud database services, but for our solution, we will use Apillon , as they provide free storage solutions at the moment. Prerequisites: An Apillon account. Access to the Witch One project page and the storage bucket. Unity or a WebGL build of the game compiled from Unity. You can ask the current project admin to grant you access to the project page once you made a new Apillon account. Step 1: Compile the project into a WebGL build and keep note of where you kept the build folder. Note that it is important that the folder contains the Build and StreamingAssets folder. Everything else will not be used. Step 2: Click the 'Storage' tab and access the 'Staging WebGL Build' bucket. Step 3: Click the yellow 'Upload' button to show the upload field. Click or drag and drop the contents of the folder that contains the game build made in 'Step 1.' Step 4: When the 'Confirm your upload' panel is shown, make sure the check the 'Wrap to directory' option. This is very important as this option allows the folders to be streamed online, while not having this option will only allow the files to be streamed, while folders will remain virtual. When you're ready, click the 'Upload now' button. Step 5: When you press the upload button while wrapping the directories, the page will ask you to make a name for the folder. Choose a name that describes the changes made in the build, and the ISO-8601 date of upload to make sure that we know when the change was made. Although we do not have a standard naming scheme yet, I recommend that we use the following scheme: [upload date]-[build title] For example, a build that adds the healing item that was uploaded on the 24th of August 2023, should have the following folder name: 20230824-Add Healing Item As long as the name is something that is easy to understand and manage, it should not matter too much. Step 6: After uploading everything in 'Step 5,' visit the game's staging link and you should see the uploaded build render on the drop-down box above the game view. General Development Environment Version Control Software Git & GitHub Our team uses Git as the main version control software, and GitHub as the repository host: Team STEP GitHub Account Installing The Git Client Most IDEs offer a way to interact with the remote repository. If you have a preferred Git client, you are free to use it. For most developers, our team recommend using GitHub Desktop, as it offers a robust GUI, auto-configuring the global Git settings, and automatically updating repository submodules. You can install GitHub Desktop on Windows 10 and macOS from the official website: GitHub Desktop For Linux users, you can install a fork of GitHub Desktop maintained by Shiftkey ( releases ) For Windows users, we also recommend installing the Windows Git client that comes with the Bash terminal. Bash on Windows allows you to access applications installed with PowerShell as well. Downloading Git . Setting Up IDE & Text Editors Visual Studio Community Note: Visual Studio Community is not supported on Linux systems When working with Unity, we generally recommend using Visual Studio, as it provides full support for Unity including breakpoints and unity game object component reference checking. Although Unity will ask you to install Visual Studio before you install the engine in Windows, you might want to have a full installation of Visual Studio if you need extra features. In which case, you can install the IDE . MonoDevelop Note: MonoDevelop is not a requirement for developing on a Linux environment. The guide below adds the package repository from Ubuntu 18, as that is the only way you can install it on later versions . MonoDevelop is an open-source cross-platform IDE that supports languages like C#, F#, Visual Basic .NET, and Vala. You can find more information on their homepage . Generally speaking, MonoDevelop is considered to be a replacement for Visual Studio for Linux systems. If you're using Windows 10 or macOS, we recommend installing Visual Studio Community instead of MonoDevelop. This installation guide will assume that the user is working on Ubuntu-based systems (LTS 20.04 or up). First, add the Mono repository to your system. # update your repository. Upgrade any packages if you have to sudo apt update && sudo apt upgrade # install the basic dependencies sudo apt install dirmngr gnupg apt-transport-https ca-certificates # add the mono repository key sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF # add the app repository to your apt source sudo sh -c 'echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" > /etc/apt/sources.list.d/mono-official-stable.list' # refresh your repository list sudo apt update Second, install the full MonoDevelop package and the IDE # install the full mono package sudo apt install mono-complete # install the monodevelop IDE sudo apt install monodevelop # install the .Net NUit unit test packages sudo apt install monodevelop-nunit Lastly, check your installation # this command should output the compiler version if your installation was complete mono --version Your IDE should look something like this: This guide was based on the article written by Website For Students . Visual Studio Code Visual Studio Code is a lightweight text editor (until you install a boatload of extensions) for developers on all major platforms. There are several Visual Studio Code extensions that work with the Unity Engine. It does not support everything that Visual Studio can do with Unity, but we recommend install VS Code as it is great for development that is outside of Unity (such as web development, or PR review/resolving merge conflicts). You can install Visual Studio Code from here . Visual Studio Code must be configured properly before it can work with Unity. This is the list of recommended extensions that we use at the time of this writing. extensions.json { \"recommendations\": [ \"editorconfig.editorconfig\", \"aaron-bond.better-comments\", \"ms-dotnettools.csharp\", \"jchannon.csharpextensions\", \"streetsidesoftware.code-spell-checker\", \"unity.unity-debug\", \"donjayamanne.githistory\", \"felipecaputo.git-project-manager\", \"github.vscode-pull-request-github\", \"formulahendry.github-actions\", \"eamodio.gitlens\", \"yzhang.markdown-all-in-one\", \"davidanson.vscode-markdownlint\", \"tobiah.unity-tools\", \"ptd.vscode-unitymeta\", \"redhat.vscode-yaml\", \"dotjoshjohnson.xml\" ] } settings.json { \"editor.defaultFormatter\": \"EditorConfig.EditorConfig\", \"markdownlint.config\": { \"html\": true, \"MD033\": false, }, \"[jsonc]\": { \"editor.defaultFormatter\": \"vscode.json-language-features\" }, \"omnisharp.enableEditorConfigSupport\": true, \"editor.formatOnSave\": true, \"cSpell.words\": [ \"Tilemap\", \"Tilemaps\", \"gameplay\", \"royale\", \"tileset\" ] } Editing the contents of the .vscode/ folder in the root directory of the project allows the developer to change the default setting for developers working in VS Code. This means that all developers with a new installation of VS Code has to do is open VS Code from the root of the project folder. Android Studio Android Studio is a cross-platform IDE for developing applications for Android devices, commonly with Java and Kotlin. Our team will rarely develop directly in Android Studio, but installing it allows us to easily install different versions of Android SDK, or access other development tools like the Android Device Emulator. Plus, Android Studio is available for most commonly used OS, so if your disk space can handle it, we recommend installing it from their official installation page . System Terminal and Package Manager Windows 10 - Chocolatey No sane developers will use Windows for its terminal or package management, but here we are. This section will guide you through installing Chocolatey , a package manager for Windows. Windows system comes with PowerShell and the Command Line Prompt as its main terminal. Alternatively, you can install Bash that comes with the Windows Git client (mentioned in the previous section). For this guide, we will be using PowerShell. To access PowerShell with administrative rights, click on the Windows search bar on the bottom left corner of your screen (next to the Windows button in the task bar), and search for PowerShell . Right-click on the app and choose Run as administrator . When you open the terminal, it should look something like this: Note that administrator sessions runs from Windows\\system32 instead of the user home directory. Paste the following command to your terminal. Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) This should install Chocolatey to your system. You can confirm it by using the choco command to your terminal. You can read the detailed installation process from the official installation page . macOS - Homebrew Homebrew is a package manager for macOS. It offers a wide variety of applications that are a must-install for developers working from macOS. Unlike Windows; macOS comes with a zsh terminal, which shares a lot of characteristics of bash. This means that most commands that works with bash will work on your Mac. To install Homebrew, you simply open your terminal from the Utilities folder and paste the following command. /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" You can learn more from the official Homebrew page."
  },
  "manual/game-mode-design.html": {
    "href": "manual/game-mode-design.html",
    "title": "Game mode design | Catch.io Developer Reference",
    "keywords": "Game mode design This chapter will explain how to create and implement the game mode. What is a game mode in our project? The game mode is the core system of our project. The game mode will control everything related to the game session. For example: spawning characters, loading game mode overlay, re-spawning characters, re-spawning items, etc... So how do we use the game mode that someone created? you can find the game modes in the Assets/ScriptableObjects/GameModes folder. What is the Game mode Container? The Game mode Container contains all game modes in the Assets/ScriptableObjects/GameModes folder. Press the load button to add game modes to the container. The game mode container is being used for UI and getting Game mode using name(string). How to edit the game mode? Open the game mode window editor with a double click on the game mode asset that you want to open. The default game mode window editor. You can set the max players and overlay the scene Game mode element. The only place to add and remove Game mode elements. How to control the Game mode Element? Click the Create Element button located in the upper right corner. And select the element you want to add. The Game mode Element cannot be duplicated. It looks like a Preload element was added. You can set the Preload time and broadcast events and click the Delete button to remove by itself. How does it work in code? The example code shows how to use the Game Mode element in Game Mode . // you have to set the create asset menu for this game mode. [CreateAssetMenu(fileName = \"NEW_GAME_MODE\", menuName = \"ScriptableObject/GameMode/Mode/NEW_GAME_MODE\", order = 0)] class NEW_GAME_MODE : GameMode { // Let's load the Preload element in this example. private Preload _preload; override IEnumerator Initialize() { // initialize GameMode. yield return base.Initialize(); // get preload element _preload = (Preload)GetGameModeElement(typeof(Preload)); } override void StartGameMode() { // start game mode element _preload.StartElement(); // add OnFinishedEvent _preload.OnFinished.AddListener(OnPreloadFinished); } override void UpdateGameMode() { // update preload element _preload.UpdateElement(); } void OnPreloadFinished() { // start game mode timer or enable point text... } } The example code shows how to create new Game mode Element . // This sample game mode element will control item re-spawn. class ItemRespawn : GameModeElement, IOnEventCallback { private ItemSpawnerController _itemSpawnerController override void Initialize() { // find item spawner controller in current scene. _itemSpawnerController = FindObjectOfType<ItemSpawnerController>(); // add photon callback target for IOnEventCallback. PhotonNetwork.AddCallbackTarget(this); } override void Terminate() { _itemSpawnerController = null; // remove photon callback target PhotonNetwork.RemoveCallbackTarget(this); } override void StartElement() { // do nothing. } override void UpdateElement() { // do nothing. } void OnEvent(EventData photonEvent) { var eventCode = photonEvent.Code; // we controls only ItemRespawnEvent and this event only received on master client. if (eventCode != SendEventType.ItemRespawnEvent) { return; } var data = (object[])photonEvent.CustomData; // convert received data[0] to spawner Id. var spawnerId = (int)data[0]; // find spawner using spawner id. var spawner = _itemSpawnerController.GetItemSpawner(spawnerId); if (spawner != null) { // respawn item using found item spawner. spawner.RespawnItem(); } } }"
  },
  "manual/github-guide.html": {
    "href": "manual/github-guide.html",
    "title": "Git Guide | Catch.io Developer Reference",
    "keywords": "Git Guide Branches and Forks The basic idea of branches and PRs is, when implementing a new feature for most projects, you would create a branch that is only for that feature. When the development is done you would open a pull request and merge it with the master. We will elaborate on this idea and create a single standard as game development involves many moving parts that rely on each other and it is important for everyone to be on the same page with this. There will be mainly four types of branches. fix branch: a branch name that is used for commits for patches or fixes that address a bug that came from the feature branch. This does not add anything new in terms of features, but only refactors them. Ex) fix/throw-object . feature branch: branches that add something new to the game which may break the game or not. Because of how game development works, commits in this branch will inadvertently act similar as the fix branch (and it is fine to do that as long as you record it!), but one key difference is that feature branch must add something new. Ex) feature/ai-sensors . development branch: these are the branches that are in active development. They have a very strict rule. First, the name must be the semantic version name. Second, every feature and fix branches must be derived from this branch and merge back to it when finished (no branch should derive from other branches). Lastly, after merging the development branch with the master branch, the development branch should not be touched at all. Ex) development/v-0.0.1b document branch: this is a special branch that is used exclusively for PR that adds documentation to the repo In short, branches with the name development must be derived from the master while the fix and feature branches derive from the latest development branch. Only development branches are allowed to merge with master . However, you can only merge when there are no fix or feature branches, and once you merge you can only create a new development branch, no direct commits to master unless the situation calls for it . Merging a development branch to the master branch will be part of a Milestone . Forking works similar to the fix and feature branch. You can freely fork a development branch and merge back to it. But you should never fork and commit to a fix / feature branch unless you made a new one or you have to! Versioning Scheme By default, projects will use the Semantic Versioning as the base for the versioning scheme. Versions are generally used in three different places. Github tag/dev branch names In-engine version In-game graphical version display In-engine version and the In-game graphical version display will be linked together, allowing the developer to only focus on working with the in-engine version numbering. Those will have to be changed manually. Github version names will be taking the form of development branch names like development/v0.1.3a and will also be the name of Github's Projects feature and Milestones feature. The naming scheme for branch names will be like the following, development/v[major].[minor].[patch][alpha/beta] . The major number is when we add a huge feature that may change the game as a whole. One example would include a multiplayer mode for a single player only game. Adding on to this, minor versions are additional feature that does not affect the game play flow to a huge degree, but does add something new to the existing game. For example, a new character model or new items. Patch numbers are generally when a game changes its backend code that the end-users does not notice right away and updates that does not add something visible to the game. Like bug fixes and gameplay balancing. Using Git Projects and Progress Tracking Todo: This section is outdated. We use Notion as our main project management tool. Please update this. For tracking the development process, we will be using Git Projects. Git Projects is an automated Kanban for understanding what tasks should be done, what is in progress and what is finished. For this project we will be using the automated Kanban, meaning that issues will be automatically added to the Projects Kanban. Project names should be the development version that the project will have. If all the items in the Project are considered to be finished, you can open a new milestone and merge that version with the master branch. After that you would create a new Project with a new version name. For adding items to the Kanban, please create a new Issue with the appropriate label. When adding a new feature to the game, create a new branch with the prefix feature/[feature-name] and open a new issue with the label enhancement . For fixing bugs or other patches, create a new branch with the prefix fix/[patch-name] and open a new issue with the label fix . When you open a new issue, that item will be automatically added to the Project Kanban. GitHub Projects is just a simple method to check the overall progress of the working project and to understand what the developers should be doing. As long as the developer understands to open an issue and creating a new branch before making any changes, there should be no problem. Opening Issues As mentioned above, the project's development progress and assigning tasks will be done via opening issues on the repository. Because of this, it is important to understand the format for opening one in a consistent way. Issue Title: The title of the feature/fix that the assigned developer will make. Description: The detailed description of what this task will be adding. It is best to add a list of things that will be done. Assignees: This shows the developers who will be taking on the task that the issue describes. Labels: The category of the issue. Mostly it will be either enhancement or fix . Projects: The project that this issue will be committing to. This should always be the latest working development build before it is committed to the master branch. Milestone: This shows which development build this issue belongs to. Preventing Merge Conflicts When using Git for version controlling game projects, the team will definitely encounter several critical conflicts. This generally stems from the following reasons: Too much noise - most heavy game engines will create a lot of meta files for various reasons. This is always automatically generated by the engine, which makes it hard to predict how it is going to change. Furthermore, this will clog up the changed file list for each commit and pulls which makes reviewing hard. Too many file types - most engines will use their custom file types for managing game objects or settings. Sometimes this will result in files being treated as binaries rather than code. Most cases these are just markup languages with a special file extension, but this still makes it hard for developers to review other's code. Large files - not completely related to merge conflicts, but using large media files like .wav or .png makes syncing and merge a time consuming process. So how can we prevent merge conflicts when working with a big team? There is no single solution for this, but we can come up with commit standards to ensure that we can avoid critical errors. The following guide will be based on using Unity with Github Work on a new scene - if you are adding a new feature or item, create a new scene or duplicate one of the existing scenes and only work on that. This ensures that no scene conflicts will ever happen. Only focus on your feature - not limited to game development, but for any collaborative working environment, it is best to only stick on your feature and not try to work on something that is not related to it. Create/override prefabs - always make a prefab for game objects that will be used throughout multiple scenes. Furthermore, before committing to the repo, do not forget to update your prefab."
  },
  "manual/in-game-tilemap.html": {
    "href": "manual/in-game-tilemap.html",
    "title": "In-Game Tilemap System | Catch.io Developer Reference",
    "keywords": "In-Game Tilemap System In this page, we will focus on summarizing two popular tilemap frameworks that we can consider for our project. Available Tilemap Frameworks There are a couple of options you can choose when creating a tile-based 2D game in Unity. All frameworks have their strengths and weaknesses that the developers should consider and commit to that framework to allow the core mechanics to have a consistent performance. Unity 2D Tilemap Unity 2D Tilemap is a tilemap component that Unity offers within their engine. Because it is part of the engine, this framework is highly compatible with most components and other tools within the Unity ecosystem. Plus, it is very flexible when it comes to adding custom features. You can learn more about extending the Unity 2D Tilemap framework from this GitHub repository . Despite the strong support that Unity 2D Tilemap receives from both Unity and the community (hey, that rhymed!), there are limitations that the developer should consider before fully committing to it. One such limitation is with the in-engine editor, as it lacks a lot of tile selection tools and built-in brushes. Another limitation is how complicated the custom brush implementation is alongside the difficulty of extending the existing tilemap framework itself. Pros: Highly compatible with the base engine and other assets Ability to create custom brushes and tile logics Easy composite collider Great documentation Great support from the community Completely free Cons: Difficult to extend the core tilemap component Difficult to create usable custom brushes All tiles are saved as a separate prefab in the project (hard to migrate) Lack of effective custom tile property injection Helpful resources: Unity tilemap manual Tilemap component tutorial Super Tilemap Editor Super Tilemap Editor is a 3rd-party Unity asset that can be bought from the Unity Asset Store for $45. This asset (or plug-in) allows you to create and use 2D tilemap in your game scene. The tile system is based on the position within the specified atlas image, whereas Unity will create a prefab for each individual tiles from a sprite image. Overall, Super Tilemap Editor is a robust package that offers easy in-engine map editing tools. Thanks to the fact that the source code is available to the developer, you can extend and change the plugin from its core. However, Super Tilemap Editor has trouble with importing TMX (Tiled Map Editor XML) files despite it claims to provide full support for it. In addition to that, Super Tilemap Editor lacks in proper documentation or community support compared to that of Unity Tilemap. Pros: Highly expandable Optimized tiling system Robust editing tools Supports tile metadata and custom properties Easy to use Can export tilemaps as prefabs Cons: Not free Lacks in documentation Community size is small compared to Unity Tilemap Issue with importing from TMX files Helpful Resources: Unity forums release thread Super Tilemap Editor Official Page Super Tilemap Editor Documentation"
  },
  "manual/level-design-guide.html": {
    "href": "manual/level-design-guide.html",
    "title": "Level Design Guideline | Catch.io Developer Reference",
    "keywords": "Level Design Guideline Game Mechanic and Level Designing Project Catch.io heavily relies on passive mechanics that affects the gameplay-flow. Passive mechanics are game mechanics that the players are expected to always be aware of and actively utilize to win without having a dedicated button to execute it. Examples of such mechanic includes: Visible sound waves Player footprint Environmental objects You can learn more from Game Mechanics and Features section of the game design document. Map Sections This project is expected to have an average of 15 players in a battle-royale-style death-match. A full game map will be divided into small sections that can be either a set of tilemap prefabs or multiple scenes combined together. The level designer will only need to focus on designing these map sections, rather than making the full map at once. Player spawn-points are manually placed by the designer to ensure that the game is balanced for everyone. To keep the map designing process simplified, a single map section will be large enough to handle three player spawn-points , where the distance between any given spawn-point must be more than 64 tiles . This means that the entire map must contain at least 5 sections. The above image is a rough approximation of how the player spawn-point and map edges will be placed. In here, we assume that the space between each spawn-points in a single section is 64 tiles apart. Please note that this is just an example of how the map sections can be combined. The level designer can change the size of a section, or change how they are placed if they need to do so. Map Elements Aside from the visual style, the level designer will have to consider the following elements when making a map. Map Surface: All levels will have a base ground tile and a special surface tile. These surface can leave footprints, generate sound with a higher volume, or slowdown the player. Player Spawn-points: As mentioned above, player spawn-points are manually placed by the level designer. When a player enters a game, they will spawn randomly from a set of locations defined by the designer. Offensive/Evasive Items: Offensive and evasive items are objects that players can keep in their inventory and throw it with the throw button. These items are the primary source of gameplay that allows the player to either attack the other player, or run away from certain situations. Level designers should be mindful of where they should be placed and how many should be accessible in a given section. Consumable Item Spawn-points: Consumable items are essentially health potions for replenishing player's sanity value. Potions use the same inventory slot as the offensive/evasive items, but they are not re-usable once consumed. To keep the gameplay flow going and prevent players dying from lack of potions, consumable items are spawned in a fixed location that only spawn to the location with the least players in the area. Environmental Objects: Environmental objects are map props that is part of the map design. They are not meant to have any player interaction, instead, they are meant to be a static object. However, environmental objects can cast shadows or block bounce-off projectiles, which means that they can be used as a hiding spot or an ambush spot for the player. Light Sources: These are part of the environmental object group, however, instead of being a hiding spot for the player, this will become the area that exposes the player, as players will only be visible to other players when they are being lit. Buildings and Houses: Similar to environmental objects, buildings are a static prop that is part of the map. However, they do not come in a fixed size like a tree would. Players are expected to use buildings and houses as a landmark for map navigation and hiding. Story Telling: When designing a level, the designer should tell a story for each object they place. This aspect of level designing will not be emphasized for the vertical slice of the project, but the release version should be able to tell the game lore and place objects in a way that stays consistent with the story that the designer is trying to tell."
  },
  "manual/map-surfaces-in-tiled.html": {
    "href": "manual/map-surfaces-in-tiled.html",
    "title": "Map surfaces in Tiled | Catch.io Developer Reference",
    "keywords": "Map surfaces in Tiled Last Edited: November 5, 2021 2:06 PM Status: Draft Type: Manual Game Map Architecture The scripting aspect of the project may change depending on the implementation. In order to keep the development flow going, it is important for us to separate the level designing process from the level feature implementation. We do not want the level designers to wait for some coding task to finish or lose their work when we change or optimize the tilemap system. At the same time, we want a flexible and powerful editing tool that allows the level designer to abstract the features. That is why our team had to use external tools for map designing instead of keeping everything in Unity. This guide will describe how you can create a map \"wireframe\" for Catch.io using Tiled. Note that this guide assumes that the reader has basic knowledge of all the tools used in this project and therefore, will only describe the parts that are unique to Catch.io's map design process. Creating a Map Using Tiled What is Tiled There are many options when it comes to implementing 2D tilemap systems in Unity. To keep the project development flow clean, we will use a map editing tool called Tiled. You can download the latest version from the official site . Alternatively, you can compile it from the source . Tiled is a map editing tool that reads and saves the map information as a tilemap file with the extension .tmx which is a form of XML. Tiled comes with various powerful tools and features that make 2D map designing easy. You can add custom properties to petty much everything starting from the map down to the individual tiles. Thanks to this feature, it is possible to create a concept map that contains features that are not yet implemented in the game. Our project uses Tiled as the main map designing tool, therefore, designers can directly link Unity prefabs and tile properties within Tiled. To learn more about what this tool is capable of, please refer to the Tiled official documentation . Tiled Project File All the maps, worlds, tilesets, object templates, and types used within Catch.io are managed by a single project file ( .tiled-project ). Keeping a project file as a single source of reference for all the Tiled files allows us to keep a consistent working environment across different designers. The Tiled project will be part of Catch.io’s source code under the folder TiledMapEditor/ . The location of this folder may change depending on how we decide to import the map data to Unity, but as of this writing, the folder will be in the root directory of the project ( TiledMapEditor/CatchIoLevels.tiled-project ). Tiled Project Folder Structure For our project, we will have the following folder structure: extensions : Contains the Tiled editor extension scripts that can be used by the designer. This folder is a clone of the official extension repository . You can create new extensions and just add them to this folder. The editor will automatically parse through the content. Maps : Contains the TMX tilemap file that the designer will directly work on, plus the automapping rules entry point. All game levels designed in Tiled should be saved in this folder. Rules : A subdirectory of Maps . This folder contains the automapping rule maps that will be used in this project. All TMX files used here must be referenced in the rules.txt file in the Maps folder if you want the editor to read them. Schemes : A folder that contains a world file. In short, these are the main file that combines the smaller .tmx files into a single large playable map that will be imported to Unity. Templates : Contains the map object template file. Objects are useful when you want to reference a Unity prefab or other complicated game-specific logic that is difficult to add using Tiled. When you create an object that is used in other maps, please create a template of it and save it in this folder. Tileset : Contains the tileset information that is used in the map. The tileset source image will always be inside the Assets/Textures/Tileset or Assets/Textures/Props folder. This means that all the tilemap used in Tiled are based on the raw sprites that are read by the game engine. Tileset should match the sprite name that it is based on to reduce confusion. Types : Contains the map object type data. Using types allows the object to have a consistent property which makes it easy for the Unity importer to handle them later on. All types are kept in a single .xml file, so every time you add a new type, you should overwrite the existing one. However, be careful not to change the file name as they are referenced by the .tiled-project file. Naming Schemes In our project, the file naming scheme will differ depending on its type. For general naming styles, we have; PascalCase : .tmx files (tilemap), .world files (tile world), tile layers, terrain names, folder names, and all custom property key-values, .tx files (object templates), object types ( Types/ObjectTypes.xml ) are written in this case. For example, GrassLand.tmx , BorderColliders layer, custom property surface:Terrain : Ground , etc. snake_case : only .tsx files (tileset) are written in this style. For example, cave_decorative.tsx . kebab-case : only .js files (JavaScript Tiled extensions) are written in this case. Note that folders inside the extension folder are also written in this style too. Maps and Layers Tilesets Our game works on an orthogonal 32x32 tilemap. So when you create a new tileset, please ensure that it contains the following properties: Orientation: Orthogonal ObjectAlignment: Unspecified GridWidth: 32 GridHeight: 32 The tileset source image will be stored inside Assets/Textures/Tileset/ , which is the same location as the in-game tilemap object texture. Terrains All environmental tiles should have a defined terrain so that they can be drawn with the terrain brush. Terrains are essentially a simple Wang Tile algorithm. Defining the terrains in a tileset allows the designers to use terrain brushes for auto mapping. You can learn more about creating terrains in Tiled from the official documentation . As you can see from the image below, the type of terrain is represented by a color code, and the rules are defined by its shape. However, Wang Tile patterns in Tiled can only work on a per-tile basis. Meaning that multi-tile high objects like cliffs cannot be expressed purely using terrains. Automapping or rule tiles can solve this. For example, we use a brute-forced one-to-one mapping to automatically add the bottom half of the cliff when the designer places the top half of the cliff on the map. For more information, please refer to the official documentation . Tilemaps In most cases, our tilemap will need the following property values: Orientation: Orthogonal TileWidth: 32 TileHeight: 32 Infinite: true TileLayerFormat: Base64 OutputChunkWidth: 16 OutputChunkHeight: 16 TileRenderOrder: RightDown And the following are custom properties to configure the sorting layer and object tag of the tilemap when it is loaded to Unity. For most maps, we use the following default values: unity:SortingLayer: Ground unity:layer: GroundTileMap Layers Our game will only use the Tile Layer and the Object Layer (however we do use the Group Layer to clean up the map layers). Tile layers are used for drawing the map while object layers are used to place custom map objects that are used to either import Unity prefabs to the scene or to add a line collider to the map. Layer rules Layer names must use the PascalCase without any space. All tile layers must be separated based on the type of surface and the sound effect it generates, not the terrain type. For example, our game has two variants of grass terrain. However, they can be in the same layer as both of them will generate the same sound effect. Tile layer names must represent the surface type. Object layers are limited to SpawnPoints , Items , Environment , and Colliders . Readable Surfaces A readable surface in Catch.io is defined by the custom property of a tile layer. To add layer surface information, click on a tile layer and add the following custom properties. surface:LeavesMark: \"bool\" surface:Terrain: \"string\" surface:Volume: \"float\" Note that surface-related custom properties will have the prefix surface: . For example, a mud layer can have the following custom properties. surface:LeavesMark: true surface:Terrain: \"Mud\" surface:Volume: 6.0 surface:LeavesMark : This property will determine whether or not if the surface will leave a footprint when the player walks on top of it. surface:Terrain : This property will define the sound effect that will be played when an object like the player or throwable items interact with the surface. Note that the string value of this property must match the label value for parameter Terrain in event TerrainSfx . The string value of this custom property is directly passed to the FMOD plugin. surface:Volume : This property will determine the lifetime of the sound wave that is emitted when an object interacts with the surface. The actual volume of the sound effect is defined in FMOD. Adding Unity Prefabs from the Tilemap In Catch.io , the designer should be able to define player spawn points, item spawn points, and other environmental objects directly to the game map without having to open Unity. To do this, we use map objects with custom properties that point to the prefab file in the project's assets folder. All objects that are going to be replaced as an actual prefab in the game scene are represented by a point object which can be created by using the Insert Point(I) option when clicked on an object layer. Click on the point object that you wish to change, and choose the type Prefab for the property Type . This will add the custom property prefabSource which contains the file path of the prefab within the Assets/ folder. The unity:FlipX and unity:FlipY properties are used to flip the prefab sprite in the game. Note that once you define the values, the game will replace the point object with the selected prefab in the exact location, layer, and name of the map object."
  },
  "manual/project-structure.html": {
    "href": "manual/project-structure.html",
    "title": "Project Structure | Catch.io Developer Reference",
    "keywords": "Project Structure This chapter will discuss the file structure of this project and how the project should be organized. Because of how game development works, this chapter will change depending on what type of assets we add to the game. In such situation, please update this doc to the corresponding changes so no one is confused to where things are stored. Core Folder Types This project will have the following core folder types: Audio - contains every asset that is in an audio format like background music, in-game sound effects, UI sound effects, background sound, etc. Editor - C# scripts that are specifically made for the Unity Editor to support development. Game-affecting logic does not belong in this folder. Gizmos - Similar to the Editor folder, this folder will contain all visual assets that are used for the editor, like inspector icons or other visual indicators. Materials - Contains all material assets (in the format of .mat ) that are used in the game. Plugins - Third-party libraries from the Unity Asset Store or helper scripts that does not change frequently and is compatible with other Unity projects should be stored in this folder. Resources - contains all game object resources like object prefabs, rule tiles, scriptable objects, etc. Scenes - games scene will be in this folder Scripts - every script that is directly made for the project belongs in this folder. Shaders - shader files will be in this folder. Textures - every 2D image files will be in this folder. This includes tile map, character sprite, UI elements, etc. Structuring Code General Structure Note: This section is outdated and will need revision in the near future It is recommended that all scripts are Duck-typed (use logical naming and inheritance/interface for all scripts that will be expanded in the future) and use inheritance to neatly wrap the function of each component. This means that scripts with similar functionality should be wrapped with a parent class that inherits from MonoBehaviour (or another class that inherits from it like MonoBehaviourPun ). The same logic will apply to folder structuring as well. Interacting with the UI In Unity, scene elements and the code are kept separate, as they only communicate through an event callback. So scenes that requires user interaction through UI elements must have a scene manager or a UI handler object of sort. To increase code scalability, the HUD or menu UI objects should be kept separated from the backend logic that handles the data for UI to display. Instead, allow the UI controller script to interact with the scene objects and relay the user input into a handler script. This can resemble a simplified version of the MVC pattern. In this model, the UI behavior script and the scene manager script should be in the same game object so that the manager script can access the UI behavior script via .GetComponent<T>(); . Folder Structure Because the project source code is expected to grow and change with every new feature added to the game, it won't be practical trying to limit the number of code sub-folders in the game. Instead, this section will define the categories of the source code that we expect to be bundled in a folder. A single category can be split into multiple folders, or sub-folders when needed. It is good to keep the actual name of the folder should be descriptive enough for people to understand, but this document will not try to come up with any as we want the developers to change the name or add more when they have to. Folders should be kept flexible and descriptive. Furthermore, developers should keep all components and data types on a separate script and try to group all similar codes into a folder. If a component behavior script becomes hard to categorize into a single folder even though they share similar characteristics, let it inherent from a parent class that implements those behaviors and place the child script into their own folders that best describes them. Because all game-related .cs files are expected to be stored inside the Assets/Scripts/ folder, the code category listed below will describe the general folder structure inside the Scripts/ folder and nowhere else. This means the following definitions will not be applicable to codes inside Editor/ or Plugins/ folder. Core classes - The core types and components that are used to build other game components. Everything in this category are not expected to be used directly in the game. Instead, they should be the template for creating new components. This will also include custom types that does not inherit from anything. UI controller classes - Components specifically for controlling the UI or in-game HUD. Most, if not all of them should have using UnityEngine.UI; in one way or another. Interfaces/Enums/Struct - It is best to keep all the interface, enum, data structure code into a separate folder, as it allows the team to understand what interfaces are written by us and which ones are from a 3rd party library. Utility classes - These classes are static functions that is only used to prevent writing the same method inside a component over and over again. Scripts in this category are expected to be used throughout different components without any dependency issue. Map prop classes - All components that are used for environmental objects but is not directly controlled by the player should be kept in the same folder. For example, a script for opening a door. Sound manager classes - Sound (music and SFX) is a crucial game play aspect for Catch.io, so we can expect separate scripts that handles this logic. Controllable object classes - All scripts and components that are meant to be directly controlled by the client (aka, the player components) should be kept in the same folder. These should not be confused with the UI controller classes, as those are independent of the player object. Game manager classes - Components that are meant to handle the backend processing of a scene will be organized into its own folder."
  }
}